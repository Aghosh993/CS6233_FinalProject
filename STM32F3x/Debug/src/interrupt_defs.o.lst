   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"interrupt_defs.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	_ZL5stack:
  22 0000 00000000 		.space	4
  23              		.text
  24              		.align	2
  25              		.global	SVC_Handler
  26              		.thumb
  27              		.thumb_func
  29              	SVC_Handler:
  30              	.LFB111:
  31              		.file 1 "../src/interrupt_defs.cpp"
   1:../src/interrupt_defs.cpp **** /*
   2:../src/interrupt_defs.cpp ****  * interrupt_defs.cpp
   3:../src/interrupt_defs.cpp ****  *
   4:../src/interrupt_defs.cpp ****  *  Created on: Feb 19, 2013
   5:../src/interrupt_defs.cpp ****  *      Author: root
   6:../src/interrupt_defs.cpp ****  */
   7:../src/interrupt_defs.cpp **** 
   8:../src/interrupt_defs.cpp **** #include "common_headers.h"
   9:../src/interrupt_defs.cpp **** 
  10:../src/interrupt_defs.cpp **** #include "os.h"
  11:../src/interrupt_defs.cpp **** 
  12:../src/interrupt_defs.cpp **** // ISR definitions need to go here, to avoid C++ name-mangling
  13:../src/interrupt_defs.cpp **** 
  14:../src/interrupt_defs.cpp **** extern "C"
  15:../src/interrupt_defs.cpp **** {
  16:../src/interrupt_defs.cpp **** extern uint32_t msp_res;
  17:../src/interrupt_defs.cpp **** extern int current_process;
  18:../src/interrupt_defs.cpp **** extern process_block process_list[MAX_NUM_PROCESSES];
  19:../src/interrupt_defs.cpp **** extern void nextTask();
  20:../src/interrupt_defs.cpp **** 
  21:../src/interrupt_defs.cpp **** extern uint32_t addrVal;
  22:../src/interrupt_defs.cpp **** 
  23:../src/interrupt_defs.cpp **** extern void *v;
  24:../src/interrupt_defs.cpp **** extern void *(*p)(void*);
  25:../src/interrupt_defs.cpp **** 
  26:../src/interrupt_defs.cpp **** 	void SVC_Handler(void)
  27:../src/interrupt_defs.cpp **** 	{
  32              		.loc 1 27 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40              		.cfi_offset 7, -4
  41 0002 00AF     		add	r7, sp, #0
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  28:../src/interrupt_defs.cpp **** 		++current_process;
  44              		.loc 1 28 0
  45 0004 40F20003 		movw	r3, #:lower16:current_process
  46 0008 C0F20003 		movt	r3, #:upper16:current_process
  47 000c 1B68     		ldr	r3, [r3, #0]
  48 000e 03F10102 		add	r2, r3, #1
  49 0012 40F20003 		movw	r3, #:lower16:current_process
  50 0016 C0F20003 		movt	r3, #:upper16:current_process
  51 001a 1A60     		str	r2, [r3, #0]
  29:../src/interrupt_defs.cpp **** 		if(current_process >= MAX_NUM_PROCESSES)
  52              		.loc 1 29 0
  53 001c 40F20003 		movw	r3, #:lower16:current_process
  54 0020 C0F20003 		movt	r3, #:upper16:current_process
  55 0024 1B68     		ldr	r3, [r3, #0]
  56 0026 012B     		cmp	r3, #1
  57 0028 06DD     		ble	.L2
  30:../src/interrupt_defs.cpp **** 		{
  31:../src/interrupt_defs.cpp **** 			current_process = 0;
  58              		.loc 1 31 0
  59 002a 40F20003 		movw	r3, #:lower16:current_process
  60 002e C0F20003 		movt	r3, #:upper16:current_process
  61 0032 4FF00002 		mov	r2, #0
  62 0036 1A60     		str	r2, [r3, #0]
  63              	.L2:
  32:../src/interrupt_defs.cpp **** 		}
  33:../src/interrupt_defs.cpp **** 
  34:../src/interrupt_defs.cpp **** 		addrVal = (uint32_t)(process_list[current_process].taskPointer);//0x8001841;
  64              		.loc 1 34 0
  65 0038 40F20003 		movw	r3, #:lower16:current_process
  66 003c C0F20003 		movt	r3, #:upper16:current_process
  67 0040 1A68     		ldr	r2, [r3, #0]
  68 0042 40F20003 		movw	r3, #:lower16:process_list
  69 0046 C0F20003 		movt	r3, #:upper16:process_list
  70 004a 4FF09401 		mov	r1, #148
  71 004e 01FB02F2 		mul	r2, r1, r2
  72 0052 9B18     		adds	r3, r3, r2
  73 0054 03F10403 		add	r3, r3, #4
  74 0058 1B68     		ldr	r3, [r3, #0]
  75 005a 1A46     		mov	r2, r3
  76 005c 40F20003 		movw	r3, #:lower16:addrVal
  77 0060 C0F20003 		movt	r3, #:upper16:addrVal
  78 0064 1A60     		str	r2, [r3, #0]
  35:../src/interrupt_defs.cpp **** 		asm volatile ("mov R10, %[something]\n\t" : [something] "=r" (addrVal));
  79              		.loc 1 35 0
  80              	@ 35 "../src/interrupt_defs.cpp" 1
  81 0066 9246     		mov R10, r2
  82              		
  83              	@ 0 "" 2
  84              		.thumb
  85 0068 40F20003 		movw	r3, #:lower16:addrVal
  86 006c C0F20003 		movt	r3, #:upper16:addrVal
  87 0070 1A60     		str	r2, [r3, #0]
  36:../src/interrupt_defs.cpp **** 
  37:../src/interrupt_defs.cpp **** 		asm volatile ("bx R10\n\t");
  88              		.loc 1 37 0
  89              	@ 37 "../src/interrupt_defs.cpp" 1
  90 0072 5047     		bx R10
  91              		
  92              	@ 0 "" 2
  38:../src/interrupt_defs.cpp **** 	}
  93              		.loc 1 38 0
  94              		.thumb
  95 0074 BD46     		mov	sp, r7
  96 0076 80BC     		pop	{r7}
  97 0078 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE111:
 101 007a 00BF     		.align	2
 102              		.global	PendSV_Handler
 103              		.thumb
 104              		.thumb_func
 106              	PendSV_Handler:
 107              	.LFB112:
  39:../src/interrupt_defs.cpp **** 
  40:../src/interrupt_defs.cpp **** 	void PendSV_Handler(void)
  41:../src/interrupt_defs.cpp **** 	{
 108              		.loc 1 41 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113 007c 80B4     		push	{r7}
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 7, -4
 117 007e 00AF     		add	r7, sp, #0
 118              	.LCFI3:
 119              		.cfi_def_cfa_register 7
  42:../src/interrupt_defs.cpp **** 
  43:../src/interrupt_defs.cpp **** 		SCB->ICSR |= (1<<27);
 120              		.loc 1 43 0
 121 0080 4FF46D43 		mov	r3, #60672
 122 0084 CEF20003 		movt	r3, 57344
 123 0088 4FF46D42 		mov	r2, #60672
 124 008c CEF20002 		movt	r2, 57344
 125 0090 5268     		ldr	r2, [r2, #4]
 126 0092 42F00062 		orr	r2, r2, #134217728
 127 0096 5A60     		str	r2, [r3, #4]
  44:../src/interrupt_defs.cpp **** 		asm volatile ("svc 1");	// To kick us into SVC handler
 128              		.loc 1 44 0
 129              	@ 44 "../src/interrupt_defs.cpp" 1
 130 0098 01DF     		svc 1
 131              	@ 0 "" 2
  45:../src/interrupt_defs.cpp **** 	}
 132              		.loc 1 45 0
 133              		.thumb
 134 009a BD46     		mov	sp, r7
 135 009c 80BC     		pop	{r7}
 136 009e 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE112:
 140              		.align	2
 141              		.global	SysTick_Handler
 142              		.thumb
 143              		.thumb_func
 145              	SysTick_Handler:
 146              	.LFB113:
  46:../src/interrupt_defs.cpp **** 
  47:../src/interrupt_defs.cpp **** 	void SysTick_Handler(void)
  48:../src/interrupt_defs.cpp **** 	{
 147              		.loc 1 48 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 00a0 80B4     		push	{r7}
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 00a2 00AF     		add	r7, sp, #0
 157              	.LCFI5:
 158              		.cfi_def_cfa_register 7
  49:../src/interrupt_defs.cpp **** 		++current_process;
 159              		.loc 1 49 0
 160 00a4 40F20003 		movw	r3, #:lower16:current_process
 161 00a8 C0F20003 		movt	r3, #:upper16:current_process
 162 00ac 1B68     		ldr	r3, [r3, #0]
 163 00ae 03F10102 		add	r2, r3, #1
 164 00b2 40F20003 		movw	r3, #:lower16:current_process
 165 00b6 C0F20003 		movt	r3, #:upper16:current_process
 166 00ba 1A60     		str	r2, [r3, #0]
  50:../src/interrupt_defs.cpp **** 		if(current_process >= MAX_NUM_PROCESSES)
 167              		.loc 1 50 0
 168 00bc 40F20003 		movw	r3, #:lower16:current_process
 169 00c0 C0F20003 		movt	r3, #:upper16:current_process
 170 00c4 1B68     		ldr	r3, [r3, #0]
 171 00c6 012B     		cmp	r3, #1
 172 00c8 06DD     		ble	.L5
  51:../src/interrupt_defs.cpp **** 		{
  52:../src/interrupt_defs.cpp **** 			current_process = 0;
 173              		.loc 1 52 0
 174 00ca 40F20003 		movw	r3, #:lower16:current_process
 175 00ce C0F20003 		movt	r3, #:upper16:current_process
 176 00d2 4FF00002 		mov	r2, #0
 177 00d6 1A60     		str	r2, [r3, #0]
 178              	.L5:
  53:../src/interrupt_defs.cpp **** 		}
  54:../src/interrupt_defs.cpp **** 
  55:../src/interrupt_defs.cpp **** 		addrVal = (uint32_t)(process_list[current_process].taskPointer);//0x8001841;
 179              		.loc 1 55 0
 180 00d8 40F20003 		movw	r3, #:lower16:current_process
 181 00dc C0F20003 		movt	r3, #:upper16:current_process
 182 00e0 1A68     		ldr	r2, [r3, #0]
 183 00e2 40F20003 		movw	r3, #:lower16:process_list
 184 00e6 C0F20003 		movt	r3, #:upper16:process_list
 185 00ea 4FF09401 		mov	r1, #148
 186 00ee 01FB02F2 		mul	r2, r1, r2
 187 00f2 9B18     		adds	r3, r3, r2
 188 00f4 03F10403 		add	r3, r3, #4
 189 00f8 1B68     		ldr	r3, [r3, #0]
 190 00fa 1A46     		mov	r2, r3
 191 00fc 40F20003 		movw	r3, #:lower16:addrVal
 192 0100 C0F20003 		movt	r3, #:upper16:addrVal
 193 0104 1A60     		str	r2, [r3, #0]
  56:../src/interrupt_defs.cpp **** 		asm volatile ("mov R10, %[something]\n\t" : [something] "=r" (addrVal));
 194              		.loc 1 56 0
 195              	@ 56 "../src/interrupt_defs.cpp" 1
 196 0106 9246     		mov R10, r2
 197              		
 198              	@ 0 "" 2
 199              		.thumb
 200 0108 40F20003 		movw	r3, #:lower16:addrVal
 201 010c C0F20003 		movt	r3, #:upper16:addrVal
 202 0110 1A60     		str	r2, [r3, #0]
  57:../src/interrupt_defs.cpp **** 
  58:../src/interrupt_defs.cpp **** 		asm volatile ("bx R10\n\t");
 203              		.loc 1 58 0
 204              	@ 58 "../src/interrupt_defs.cpp" 1
 205 0112 5047     		bx R10
 206              		
 207              	@ 0 "" 2
  59:../src/interrupt_defs.cpp **** 	}
 208              		.loc 1 59 0
 209              		.thumb
 210 0114 BD46     		mov	sp, r7
 211 0116 80BC     		pop	{r7}
 212 0118 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE113:
 216 011a 00BF     		.align	2
 217              		.global	HardFault_Handler
 218              		.thumb
 219              		.thumb_func
 221              	HardFault_Handler:
 222              	.LFB114:
  60:../src/interrupt_defs.cpp **** 
  61:../src/interrupt_defs.cpp **** 	// Primarily for debug purposes:
  62:../src/interrupt_defs.cpp **** 
  63:../src/interrupt_defs.cpp **** 	void HardFault_Handler(void)
  64:../src/interrupt_defs.cpp **** 	{
 223              		.loc 1 64 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228 011c 80B4     		push	{r7}
 229              	.LCFI6:
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 011e 00AF     		add	r7, sp, #0
 233              	.LCFI7:
 234              		.cfi_def_cfa_register 7
 235              	.L7:
  65:../src/interrupt_defs.cpp **** 		while(1);
 236              		.loc 1 65 0 discriminator 1
 237 0120 FEE7     		b	.L7
 238              		.cfi_endproc
 239              	.LFE114:
 241 0122 00BF     		.align	2
 242              		.global	MemManage_Handler
 243              		.thumb
 244              		.thumb_func
 246              	MemManage_Handler:
 247              	.LFB115:
  66:../src/interrupt_defs.cpp **** 	}
  67:../src/interrupt_defs.cpp **** 	void MemManage_Handler(void)
  68:../src/interrupt_defs.cpp **** 	{
 248              		.loc 1 68 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0124 80B4     		push	{r7}
 254              	.LCFI8:
 255              		.cfi_def_cfa_offset 4
 256              		.cfi_offset 7, -4
 257 0126 00AF     		add	r7, sp, #0
 258              	.LCFI9:
 259              		.cfi_def_cfa_register 7
 260              	.L9:
  69:../src/interrupt_defs.cpp **** 		while(1);
 261              		.loc 1 69 0 discriminator 1
 262 0128 FEE7     		b	.L9
 263              		.cfi_endproc
 264              	.LFE115:
 266 012a 00BF     		.align	2
 267              		.global	BusFault_Handler
 268              		.thumb
 269              		.thumb_func
 271              	BusFault_Handler:
 272              	.LFB116:
  70:../src/interrupt_defs.cpp **** 	}
  71:../src/interrupt_defs.cpp **** 	void BusFault_Handler(void)
  72:../src/interrupt_defs.cpp **** 	{
 273              		.loc 1 72 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 012c 80B4     		push	{r7}
 279              	.LCFI10:
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 012e 00AF     		add	r7, sp, #0
 283              	.LCFI11:
 284              		.cfi_def_cfa_register 7
 285              	.L11:
  73:../src/interrupt_defs.cpp **** 		while(1);
 286              		.loc 1 73 0 discriminator 1
 287 0130 FEE7     		b	.L11
 288              		.cfi_endproc
 289              	.LFE116:
 291 0132 00BF     		.align	2
 292              		.global	UsageFault_Handler
 293              		.thumb
 294              		.thumb_func
 296              	UsageFault_Handler:
 297              	.LFB117:
  74:../src/interrupt_defs.cpp **** 	}
  75:../src/interrupt_defs.cpp **** 	void UsageFault_Handler(void)
  76:../src/interrupt_defs.cpp **** 	{
 298              		.loc 1 76 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0134 80B4     		push	{r7}
 304              	.LCFI12:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0136 00AF     		add	r7, sp, #0
 308              	.LCFI13:
 309              		.cfi_def_cfa_register 7
 310              	.L13:
  77:../src/interrupt_defs.cpp **** 		while(1);
 311              		.loc 1 77 0 discriminator 1
 312 0138 FEE7     		b	.L13
 313              		.cfi_endproc
 314              	.LFE117:
 316              	.Letext0:
 317              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 318              		.file 3 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/core_cm4.h"
 319              		.file 4 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/os.h"
DEFINED SYMBOLS
                            *ABS*:00000000 interrupt_defs.cpp
     /tmp/ccGHSI2t.s:20     .bss:00000000 $d
     /tmp/ccGHSI2t.s:21     .bss:00000000 _ZL5stack
     /tmp/ccGHSI2t.s:24     .text:00000000 $t
     /tmp/ccGHSI2t.s:29     .text:00000000 SVC_Handler
     /tmp/ccGHSI2t.s:106    .text:0000007c PendSV_Handler
     /tmp/ccGHSI2t.s:145    .text:000000a0 SysTick_Handler
     /tmp/ccGHSI2t.s:221    .text:0000011c HardFault_Handler
     /tmp/ccGHSI2t.s:246    .text:00000124 MemManage_Handler
     /tmp/ccGHSI2t.s:271    .text:0000012c BusFault_Handler
     /tmp/ccGHSI2t.s:296    .text:00000134 UsageFault_Handler
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.934603b1d669cb2b32fd4cb6dd11b673
                           .group:00000000 wm4.common_headers.h.9.a77b7af68303fe0609f9dd844a078e2a
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.170ad2f92df387b9fa0dc3deabd34ef9
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.os.h.15.d9d7ebdab8b493dfd5254a413227d1d3

UNDEFINED SYMBOLS
current_process
process_list
addrVal
