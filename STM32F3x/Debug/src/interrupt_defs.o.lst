   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"interrupt_defs.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	_ZL5stack:
  22 0000 00000000 		.space	4
  23              		.global	__aeabi_i2d
  24              		.global	__aeabi_dmul
  25              		.global	__aeabi_dcmpgt
  26              		.global	__aeabi_dcmplt
  27              		.text
  28              		.align	2
  29              		.global	TIM7_IRQHandler
  30              		.thumb
  31              		.thumb_func
  33              	TIM7_IRQHandler:
  34              	.LFB111:
  35              		.file 1 "../src/interrupt_defs.cpp"
   1:../src/interrupt_defs.cpp **** /*
   2:../src/interrupt_defs.cpp ****  * interrupt_defs.cpp
   3:../src/interrupt_defs.cpp ****  *
   4:../src/interrupt_defs.cpp ****  *  Created on: Feb 19, 2013
   5:../src/interrupt_defs.cpp ****  *      Author: root
   6:../src/interrupt_defs.cpp ****  */
   7:../src/interrupt_defs.cpp **** 
   8:../src/interrupt_defs.cpp **** #include "common_headers.h"
   9:../src/interrupt_defs.cpp **** #include "stm32f3_discovery_l3gd20.h"
  10:../src/interrupt_defs.cpp **** 
  11:../src/interrupt_defs.cpp **** #include "encoder.h"
  12:../src/interrupt_defs.cpp **** 
  13:../src/interrupt_defs.cpp **** #include "os.h"
  14:../src/interrupt_defs.cpp **** 
  15:../src/interrupt_defs.cpp **** #include <math.h>
  16:../src/interrupt_defs.cpp **** 
  17:../src/interrupt_defs.cpp **** // ISR definitions need to go here, to avoid C++ name-mangling
  18:../src/interrupt_defs.cpp **** 
  19:../src/interrupt_defs.cpp **** extern "C"
  20:../src/interrupt_defs.cpp **** {
  21:../src/interrupt_defs.cpp **** extern volatile float gyro_angle_x;
  22:../src/interrupt_defs.cpp **** extern encoderState left_enc, right_enc;
  23:../src/interrupt_defs.cpp **** extern int gyro_bias_x, adcval;
  24:../src/interrupt_defs.cpp **** extern volatile int led_matrix[8];
  25:../src/interrupt_defs.cpp **** extern volatile int led_iter;
  26:../src/interrupt_defs.cpp **** extern int new_data;
  27:../src/interrupt_defs.cpp **** extern uint8_t adc2_new_data;
  28:../src/interrupt_defs.cpp **** extern uint8_t adc3_awd1, adc3_awd2;
  29:../src/interrupt_defs.cpp **** 
  30:../src/interrupt_defs.cpp **** extern int count, stage;
  31:../src/interrupt_defs.cpp **** 
  32:../src/interrupt_defs.cpp **** extern float drive_cmd;// = 0.0f;
  33:../src/interrupt_defs.cpp **** extern float err;// = 0.0f;
  34:../src/interrupt_defs.cpp **** extern float last_err;// = 0.0f;
  35:../src/interrupt_defs.cpp **** extern float diff_err;
  36:../src/interrupt_defs.cpp **** extern float rt;// = 0.0f;
  37:../src/interrupt_defs.cpp **** extern float d_front;// = 1.0f;
  38:../src/interrupt_defs.cpp **** extern float integral;
  39:../src/interrupt_defs.cpp **** 
  40:../src/interrupt_defs.cpp **** extern float left, right;
  41:../src/interrupt_defs.cpp **** 
  42:../src/interrupt_defs.cpp **** extern __IO uint32_t adcData[2];
  43:../src/interrupt_defs.cpp **** extern __IO uint32_t adc2_data[2];
  44:../src/interrupt_defs.cpp **** 
  45:../src/interrupt_defs.cpp **** extern int state;
  46:../src/interrupt_defs.cpp **** 
  47:../src/interrupt_defs.cpp **** extern int leds_on;
  48:../src/interrupt_defs.cpp **** extern float match_time_counter, t_firefight_start;
  49:../src/interrupt_defs.cpp **** 
  50:../src/interrupt_defs.cpp **** 
  51:../src/interrupt_defs.cpp **** ////// CS6233 stuff:
  52:../src/interrupt_defs.cpp **** 
  53:../src/interrupt_defs.cpp **** extern uint32_t msp_res;
  54:../src/interrupt_defs.cpp **** extern int current_process;
  55:../src/interrupt_defs.cpp **** extern process_block process_list[MAX_NUM_PROCESSES];
  56:../src/interrupt_defs.cpp **** 
  57:../src/interrupt_defs.cpp **** void update_pid(void);
  58:../src/interrupt_defs.cpp **** 
  59:../src/interrupt_defs.cpp **** 	void TIM7_IRQHandler(void) // ISR that performs encoder state update:
  60:../src/interrupt_defs.cpp **** 										// Runs every DT milliseconds
  61:../src/interrupt_defs.cpp **** 	{
  36              		.loc 1 61 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 96
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 90B5     		push	{r4, r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 12
  43              		.cfi_offset 4, -12
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 99B0     		sub	sp, sp, #100
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 112
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
  51              		.cfi_def_cfa_register 7
  52              	.LBB2:
  62:../src/interrupt_defs.cpp **** 		float left_out, right_out;
  63:../src/interrupt_defs.cpp **** 		int error, abs_err;
  64:../src/interrupt_defs.cpp **** 
  65:../src/interrupt_defs.cpp **** 		TIM_ClearITPendingBit(TIM7, TIM_IT_Update);
  53              		.loc 1 65 0
  54 0006 4FF4A050 		mov	r0, #5120
  55 000a C4F20000 		movt	r0, 16384
  56 000e 4FF00101 		mov	r1, #1
  57 0012 FFF7FEFF 		bl	TIM_ClearITPendingBit
  66:../src/interrupt_defs.cpp **** 
  67:../src/interrupt_defs.cpp **** 		encoderState left_temp, right_temp;
  68:../src/interrupt_defs.cpp **** 
  69:../src/interrupt_defs.cpp **** 		left_temp.position = left_enc.position;
  58              		.loc 1 69 0
  59 0016 40F20003 		movw	r3, #:lower16:left_enc
  60 001a C0F20003 		movt	r3, #:upper16:left_enc
  61 001e 1B68     		ldr	r3, [r3, #0]
  62 0020 3B60     		str	r3, [r7, #0]
  70:../src/interrupt_defs.cpp **** 		left_temp.speed = left_enc.speed;
  63              		.loc 1 70 0
  64 0022 40F20003 		movw	r3, #:lower16:left_enc
  65 0026 C0F20003 		movt	r3, #:upper16:left_enc
  66 002a 5B68     		ldr	r3, [r3, #4]	@ float
  67 002c 7B60     		str	r3, [r7, #4]	@ float
  71:../src/interrupt_defs.cpp **** 		left_temp.acceleration = left_enc.acceleration;
  68              		.loc 1 71 0
  69 002e 40F20003 		movw	r3, #:lower16:left_enc
  70 0032 C0F20003 		movt	r3, #:upper16:left_enc
  71 0036 9B68     		ldr	r3, [r3, #8]	@ float
  72 0038 BB60     		str	r3, [r7, #8]	@ float
  72:../src/interrupt_defs.cpp **** 
  73:../src/interrupt_defs.cpp **** 		right_temp.position = right_enc.position;
  73              		.loc 1 73 0
  74 003a 40F20003 		movw	r3, #:lower16:right_enc
  75 003e C0F20003 		movt	r3, #:upper16:right_enc
  76 0042 1B68     		ldr	r3, [r3, #0]
  77 0044 BB62     		str	r3, [r7, #40]
  74:../src/interrupt_defs.cpp **** 		right_temp.speed = right_enc.speed;
  78              		.loc 1 74 0
  79 0046 40F20003 		movw	r3, #:lower16:right_enc
  80 004a C0F20003 		movt	r3, #:upper16:right_enc
  81 004e 5B68     		ldr	r3, [r3, #4]	@ float
  82 0050 FB62     		str	r3, [r7, #44]	@ float
  75:../src/interrupt_defs.cpp **** 		right_temp.acceleration = right_enc.acceleration;
  83              		.loc 1 75 0
  84 0052 40F20003 		movw	r3, #:lower16:right_enc
  85 0056 C0F20003 		movt	r3, #:upper16:right_enc
  86 005a 9B68     		ldr	r3, [r3, #8]	@ float
  87 005c 3B63     		str	r3, [r7, #48]	@ float
  76:../src/interrupt_defs.cpp **** 
  77:../src/interrupt_defs.cpp **** 		left_enc.position = left_temp.position + (int16_t)TIM_GetCounter(TIM4); //Instead of TIM2 on othe
  88              		.loc 1 77 0
  89 005e 3C68     		ldr	r4, [r7, #0]
  90 0060 4FF40060 		mov	r0, #2048
  91 0064 C4F20000 		movt	r0, 16384
  92 0068 FFF7FEFF 		bl	TIM_GetCounter
  93 006c 0346     		mov	r3, r0
  94 006e 9BB2     		uxth	r3, r3
  95 0070 1BB2     		sxth	r3, r3
  96 0072 E218     		adds	r2, r4, r3
  97 0074 40F20003 		movw	r3, #:lower16:left_enc
  98 0078 C0F20003 		movt	r3, #:upper16:left_enc
  99 007c 1A60     		str	r2, [r3, #0]
  78:../src/interrupt_defs.cpp **** 		TIM_SetCounter(TIM4, 0);
 100              		.loc 1 78 0
 101 007e 4FF40060 		mov	r0, #2048
 102 0082 C4F20000 		movt	r0, 16384
 103 0086 4FF00001 		mov	r1, #0
 104 008a FFF7FEFF 		bl	TIM_SetCounter
  79:../src/interrupt_defs.cpp **** 		left_enc.speed = (float)((left_enc.position - left_temp.position)*1000)/(float)DT_ENCODER; // Sin
 105              		.loc 1 79 0
 106 008e 40F20003 		movw	r3, #:lower16:left_enc
 107 0092 C0F20003 		movt	r3, #:upper16:left_enc
 108 0096 1A68     		ldr	r2, [r3, #0]
 109 0098 3B68     		ldr	r3, [r7, #0]
 110 009a D31A     		subs	r3, r2, r3
 111 009c 4FF47A72 		mov	r2, #1000
 112 00a0 02FB03F3 		mul	r3, r2, r3
 113 00a4 07EE903A 		fmsr	s15, r3	@ int
 114 00a8 B8EEE77A 		fsitos	s14, s15
 115 00ac F3EE097A 		fconsts	s15, #57
 116 00b0 C7EE277A 		fdivs	s15, s14, s15
 117 00b4 40F20003 		movw	r3, #:lower16:left_enc
 118 00b8 C0F20003 		movt	r3, #:upper16:left_enc
 119 00bc C3ED017A 		fsts	s15, [r3, #4]
  80:../src/interrupt_defs.cpp **** 		left_enc.acceleration = (float)((left_enc.speed - left_temp.speed)*1000)/(float)DT_ENCODER;
 120              		.loc 1 80 0
 121 00c0 40F20003 		movw	r3, #:lower16:left_enc
 122 00c4 C0F20003 		movt	r3, #:upper16:left_enc
 123 00c8 93ED017A 		flds	s14, [r3, #4]
 124 00cc D7ED017A 		flds	s15, [r7, #4]
 125 00d0 37EE677A 		fsubs	s14, s14, s15
 126 00d4 DFEDDA7A 		flds	s15, .L32+8
 127 00d8 27EE277A 		fmuls	s14, s14, s15
 128 00dc F3EE097A 		fconsts	s15, #57
 129 00e0 C7EE277A 		fdivs	s15, s14, s15
 130 00e4 40F20003 		movw	r3, #:lower16:left_enc
 131 00e8 C0F20003 		movt	r3, #:upper16:left_enc
 132 00ec C3ED027A 		fsts	s15, [r3, #8]
  81:../src/interrupt_defs.cpp **** 
  82:../src/interrupt_defs.cpp **** 		right_enc.position = right_temp.position + (int16_t)(TIM_GetCounter(TIM8));
 133              		.loc 1 82 0
 134 00f0 BC6A     		ldr	r4, [r7, #40]
 135 00f2 4FF45050 		mov	r0, #13312
 136 00f6 C4F20100 		movt	r0, 16385
 137 00fa FFF7FEFF 		bl	TIM_GetCounter
 138 00fe 0346     		mov	r3, r0
 139 0100 9BB2     		uxth	r3, r3
 140 0102 1BB2     		sxth	r3, r3
 141 0104 E218     		adds	r2, r4, r3
 142 0106 40F20003 		movw	r3, #:lower16:right_enc
 143 010a C0F20003 		movt	r3, #:upper16:right_enc
 144 010e 1A60     		str	r2, [r3, #0]
  83:../src/interrupt_defs.cpp **** 		TIM_SetCounter(TIM8, 0); // To get around the stupid 16-bit counter limitation present on all tim
 145              		.loc 1 83 0
 146 0110 4FF45050 		mov	r0, #13312
 147 0114 C4F20100 		movt	r0, 16385
 148 0118 4FF00001 		mov	r1, #0
 149 011c FFF7FEFF 		bl	TIM_SetCounter
  84:../src/interrupt_defs.cpp **** 		right_enc.speed = (float)((right_enc.position - right_temp.position)*1000)/(float)DT_ENCODER;
 150              		.loc 1 84 0
 151 0120 40F20003 		movw	r3, #:lower16:right_enc
 152 0124 C0F20003 		movt	r3, #:upper16:right_enc
 153 0128 1A68     		ldr	r2, [r3, #0]
 154 012a BB6A     		ldr	r3, [r7, #40]
 155 012c D31A     		subs	r3, r2, r3
 156 012e 4FF47A72 		mov	r2, #1000
 157 0132 02FB03F3 		mul	r3, r2, r3
 158 0136 07EE903A 		fmsr	s15, r3	@ int
 159 013a B8EEE77A 		fsitos	s14, s15
 160 013e F3EE097A 		fconsts	s15, #57
 161 0142 C7EE277A 		fdivs	s15, s14, s15
 162 0146 40F20003 		movw	r3, #:lower16:right_enc
 163 014a C0F20003 		movt	r3, #:upper16:right_enc
 164 014e C3ED017A 		fsts	s15, [r3, #4]
  85:../src/interrupt_defs.cpp **** 		right_enc.acceleration = (float)((right_enc.speed - right_temp.speed)*1000)/(float)DT_ENCODER;
 165              		.loc 1 85 0
 166 0152 40F20003 		movw	r3, #:lower16:right_enc
 167 0156 C0F20003 		movt	r3, #:upper16:right_enc
 168 015a 93ED017A 		flds	s14, [r3, #4]
 169 015e D7ED0B7A 		flds	s15, [r7, #44]
 170 0162 37EE677A 		fsubs	s14, s14, s15
 171 0166 DFEDB67A 		flds	s15, .L32+8
 172 016a 27EE277A 		fmuls	s14, s14, s15
 173 016e F3EE097A 		fconsts	s15, #57
 174 0172 C7EE277A 		fdivs	s15, s14, s15
 175 0176 40F20003 		movw	r3, #:lower16:right_enc
 176 017a C0F20003 		movt	r3, #:upper16:right_enc
 177 017e C3ED027A 		fsts	s15, [r3, #8]
  86:../src/interrupt_defs.cpp **** 
  87:../src/interrupt_defs.cpp **** 		if(left_enc.m == MODE_POSITION)
 178              		.loc 1 87 0
 179 0182 40F20003 		movw	r3, #:lower16:left_enc
 180 0186 C0F20003 		movt	r3, #:upper16:left_enc
 181 018a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 182 018e 012B     		cmp	r3, #1
 183 0190 5DD1     		bne	.L2
  88:../src/interrupt_defs.cpp **** 		{
  89:../src/interrupt_defs.cpp **** 			left_out = ((float)k_p * (float)(left_enc.position_target - left_enc.position))
  90:../src/interrupt_defs.cpp **** 					+ ((float)k_i*(float)(left_enc.integral))
  91:../src/interrupt_defs.cpp **** 					+ ((float)k_d*(float)left_enc.speed);
 184              		.loc 1 91 0
 185 0192 40F20003 		movw	r3, #:lower16:left_enc
 186 0196 C0F20003 		movt	r3, #:upper16:left_enc
 187 019a DA68     		ldr	r2, [r3, #12]
 188 019c 40F20003 		movw	r3, #:lower16:left_enc
 189 01a0 C0F20003 		movt	r3, #:upper16:left_enc
 190 01a4 1B68     		ldr	r3, [r3, #0]
 191 01a6 D31A     		subs	r3, r2, r3
 192 01a8 07EE103A 		fmsr	s14, r3	@ int
 193 01ac F8EEC77A 		fsitos	s15, s14
 194 01b0 37EEA77A 		fadds	s14, s15, s15
 195 01b4 40F20003 		movw	r3, #:lower16:left_enc
 196 01b8 C0F20003 		movt	r3, #:upper16:left_enc
 197 01bc D3ED057A 		flds	s15, [r3, #20]	@ int
 198 01c0 F8EEE76A 		fsitos	s13, s15
 199 01c4 DFED9F7A 		flds	s15, .L32+12
 200 01c8 66EEA77A 		fmuls	s15, s13, s15
 201 01cc 37EE277A 		fadds	s14, s14, s15
 202 01d0 40F20003 		movw	r3, #:lower16:left_enc
 203 01d4 C0F20003 		movt	r3, #:upper16:left_enc
 204 01d8 D3ED016A 		flds	s13, [r3, #4]
 205 01dc DFED9A7A 		flds	s15, .L32+16
 206 01e0 66EEA77A 		fmuls	s15, s13, s15
 207 01e4 77EE277A 		fadds	s15, s14, s15
 208 01e8 C7ED177A 		fsts	s15, [r7, #92]
  92:../src/interrupt_defs.cpp **** 			left_out = (left_out > 100) ? 100 : ((left_out < -100) ? -100 : left_out);
 209              		.loc 1 92 0
 210 01ec 97ED177A 		flds	s14, [r7, #92]
 211 01f0 DFED967A 		flds	s15, .L32+20
 212 01f4 B4EEE77A 		fcmpes	s14, s15
 213 01f8 F1EE10FA 		fmstat
 214 01fc 04DD     		ble	.L28
 215              	.L24:
 216              		.loc 1 92 0 is_stmt 0 discriminator 1
 217 01fe 4FF00003 		mov	r3, #0
 218 0202 C4F2C823 		movt	r3, 17096
 219 0206 0EE0     		b	.L5
 220              	.L28:
 221              		.loc 1 92 0 discriminator 2
 222 0208 97ED177A 		flds	s14, [r7, #92]
 223 020c DFED907A 		flds	s15, .L32+24
 224 0210 B4EEE77A 		fcmpes	s14, s15
 225 0214 F1EE10FA 		fmstat
 226 0218 04D5     		bpl	.L29
 227              	.L25:
 228              		.loc 1 92 0 discriminator 3
 229 021a 4FF00003 		mov	r3, #0
 230 021e CCF2C823 		movt	r3, 49864
 231 0222 00E0     		b	.L8
 232              	.L29:
 233              		.loc 1 92 0 discriminator 4
 234 0224 FB6D     		ldr	r3, [r7, #92]	@ float
 235              	.L8:
 236              	.L5:
 237              		.loc 1 92 0 discriminator 6
 238 0226 FB65     		str	r3, [r7, #92]	@ float
  93:../src/interrupt_defs.cpp **** 
  94:../src/interrupt_defs.cpp **** 			pwm2_output(100-((float)(left_out+100)/(float)2));
 239              		.loc 1 94 0 is_stmt 1 discriminator 6
 240 0228 97ED177A 		flds	s14, [r7, #92]
 241 022c DFED877A 		flds	s15, .L32+20
 242 0230 37EE277A 		fadds	s14, s14, s15
 243 0234 F0EE007A 		fconsts	s15, #0
 244 0238 C7EE277A 		fdivs	s15, s14, s15
 245 023c 9FED837A 		flds	s14, .L32+20
 246 0240 77EE677A 		fsubs	s15, s14, s15
 247 0244 17EE900A 		fmrs	r0, s15
 248 0248 FFF7FEFF 		bl	_Z11pwm2_outputf
 249 024c 0BE0     		b	.L9
 250              	.L2:
  95:../src/interrupt_defs.cpp **** 		}
  96:../src/interrupt_defs.cpp **** 		else if(left_enc.m == MODE_SPEED)
 251              		.loc 1 96 0
 252 024e 40F20003 		movw	r3, #:lower16:left_enc
 253 0252 C0F20003 		movt	r3, #:upper16:left_enc
 254 0256 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 255 025a 022B     		cmp	r3, #2
 256 025c 03D1     		bne	.L9
  97:../src/interrupt_defs.cpp **** 		{
  98:../src/interrupt_defs.cpp **** 			pwm2_output(0);
 257              		.loc 1 98 0
 258 025e 4FF00000 		mov	r0, #0
 259 0262 FFF7FEFF 		bl	_Z11pwm2_outputf
 260              	.L9:
  99:../src/interrupt_defs.cpp **** 		}
 100:../src/interrupt_defs.cpp **** 
 101:../src/interrupt_defs.cpp **** 		if(right_enc.m == MODE_POSITION)
 261              		.loc 1 101 0
 262 0266 40F20003 		movw	r3, #:lower16:right_enc
 263 026a C0F20003 		movt	r3, #:upper16:right_enc
 264 026e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 265 0272 012B     		cmp	r3, #1
 266 0274 40F0FE80 		bne	.L10
 102:../src/interrupt_defs.cpp **** 		{
 103:../src/interrupt_defs.cpp **** 			error = right_enc.position - right_enc.position_target;
 267              		.loc 1 103 0
 268 0278 40F20003 		movw	r3, #:lower16:right_enc
 269 027c C0F20003 		movt	r3, #:upper16:right_enc
 270 0280 1A68     		ldr	r2, [r3, #0]
 271 0282 40F20003 		movw	r3, #:lower16:right_enc
 272 0286 C0F20003 		movt	r3, #:upper16:right_enc
 273 028a DB68     		ldr	r3, [r3, #12]
 274 028c D31A     		subs	r3, r2, r3
 275 028e BB65     		str	r3, [r7, #88]
 104:../src/interrupt_defs.cpp **** 			right_enc.integral += (float)(error) * (float)DT_ENCODER / (float)1000;
 276              		.loc 1 104 0
 277 0290 40F20003 		movw	r3, #:lower16:right_enc
 278 0294 C0F20003 		movt	r3, #:upper16:right_enc
 279 0298 D3ED057A 		flds	s15, [r3, #20]	@ int
 280 029c B8EEE77A 		fsitos	s14, s15
 281 02a0 D7ED167A 		flds	s15, [r7, #88]	@ int
 282 02a4 F8EEE76A 		fsitos	s13, s15
 283 02a8 F3EE097A 		fconsts	s15, #57
 284 02ac 66EEA76A 		fmuls	s13, s13, s15
 285 02b0 DFED637A 		flds	s15, .L32+8
 286 02b4 C6EEA77A 		fdivs	s15, s13, s15
 287 02b8 77EE277A 		fadds	s15, s14, s15
 288 02bc FDEEE77A 		ftosizs	s15, s15
 289 02c0 40F20003 		movw	r3, #:lower16:right_enc
 290 02c4 C0F20003 		movt	r3, #:upper16:right_enc
 291 02c8 C3ED057A 		fsts	s15, [r3, #20]	@ int
 105:../src/interrupt_defs.cpp **** 
 106:../src/interrupt_defs.cpp **** 			if(right_enc.integral * k_i > 100 || right_enc.integral * k_i < -100)
 292              		.loc 1 106 0
 293 02cc 40F20003 		movw	r3, #:lower16:right_enc
 294 02d0 C0F20003 		movt	r3, #:upper16:right_enc
 295 02d4 5B69     		ldr	r3, [r3, #20]
 296 02d6 1846     		mov	r0, r3
 297 02d8 FFF7FEFF 		bl	__aeabi_i2d
 298 02dc 0246     		mov	r2, r0
 299 02de 0B46     		mov	r3, r1
 300 02e0 1046     		mov	r0, r2
 301 02e2 1946     		mov	r1, r3
 302 02e4 54A3     		adr	r3, .L32
 303 02e6 D3E90023 		ldrd	r2, [r3]
 304 02ea FFF7FEFF 		bl	__aeabi_dmul
 305 02ee 0246     		mov	r2, r0
 306 02f0 0B46     		mov	r3, r1
 307 02f2 1046     		mov	r0, r2
 308 02f4 1946     		mov	r1, r3
 309 02f6 4FF00002 		mov	r2, #0
 310 02fa 4FF00003 		mov	r3, #0
 311 02fe C4F25903 		movt	r3, 16473
 312 0302 FFF7FEFF 		bl	__aeabi_dcmpgt
 313 0306 0346     		mov	r3, r0
 314 0308 002B     		cmp	r3, #0
 315 030a 1FD1     		bne	.L11
 316              		.loc 1 106 0 is_stmt 0 discriminator 1
 317 030c 40F20003 		movw	r3, #:lower16:right_enc
 318 0310 C0F20003 		movt	r3, #:upper16:right_enc
 319 0314 5B69     		ldr	r3, [r3, #20]
 320 0316 1846     		mov	r0, r3
 321 0318 FFF7FEFF 		bl	__aeabi_i2d
 322 031c 0246     		mov	r2, r0
 323 031e 0B46     		mov	r3, r1
 324 0320 1046     		mov	r0, r2
 325 0322 1946     		mov	r1, r3
 326 0324 44A3     		adr	r3, .L32
 327 0326 D3E90023 		ldrd	r2, [r3]
 328 032a FFF7FEFF 		bl	__aeabi_dmul
 329 032e 0246     		mov	r2, r0
 330 0330 0B46     		mov	r3, r1
 331 0332 1046     		mov	r0, r2
 332 0334 1946     		mov	r1, r3
 333 0336 4FF00002 		mov	r2, #0
 334 033a 4FF00003 		mov	r3, #0
 335 033e CCF25903 		movt	r3, 49241
 336 0342 FFF7FEFF 		bl	__aeabi_dcmplt
 337 0346 0346     		mov	r3, r0
 338 0348 002B     		cmp	r3, #0
 339 034a 06D0     		beq	.L12
 340              	.L11:
 107:../src/interrupt_defs.cpp **** 			{
 108:../src/interrupt_defs.cpp **** 				right_enc.integral = (float)100/(float)k_i;
 341              		.loc 1 108 0 is_stmt 1
 342 034c 40F20003 		movw	r3, #:lower16:right_enc
 343 0350 C0F20003 		movt	r3, #:upper16:right_enc
 344 0354 40F29A22 		movw	r2, #666
 345 0358 5A61     		str	r2, [r3, #20]
 346              	.L12:
 109:../src/interrupt_defs.cpp **** 			}
 110:../src/interrupt_defs.cpp **** 
 111:../src/interrupt_defs.cpp **** 			right_out = ((float)k_p * (float)error)
 112:../src/interrupt_defs.cpp **** 					+ ((float)k_i*(float)(right_enc.integral))
 113:../src/interrupt_defs.cpp **** 					+ ((float)k_d*(float)(error - right_enc.last_error)/(float)(DT_ENCODER/(float)1000));
 347              		.loc 1 113 0
 348 035a D7ED167A 		flds	s15, [r7, #88]	@ int
 349 035e F8EEE77A 		fsitos	s15, s15
 350 0362 37EEA77A 		fadds	s14, s15, s15
 351 0366 40F20003 		movw	r3, #:lower16:right_enc
 352 036a C0F20003 		movt	r3, #:upper16:right_enc
 353 036e D3ED057A 		flds	s15, [r3, #20]	@ int
 354 0372 F8EEE76A 		fsitos	s13, s15
 355 0376 DFED337A 		flds	s15, .L32+12
 356 037a 66EEA77A 		fmuls	s15, s13, s15
 357 037e 37EE277A 		fadds	s14, s14, s15
 358 0382 40F20003 		movw	r3, #:lower16:right_enc
 359 0386 C0F20003 		movt	r3, #:upper16:right_enc
 360 038a 9B69     		ldr	r3, [r3, #24]
 361 038c BA6D     		ldr	r2, [r7, #88]
 362 038e D31A     		subs	r3, r2, r3
 363 0390 07EE903A 		fmsr	s15, r3	@ int
 364 0394 F8EEE76A 		fsitos	s13, s15
 365 0398 DFED2B7A 		flds	s15, .L32+16
 366 039c 66EEA76A 		fmuls	s13, s13, s15
 367 03a0 DFED2D7A 		flds	s15, .L32+32
 368 03a4 C6EEA77A 		fdivs	s15, s13, s15
 369 03a8 77EE277A 		fadds	s15, s14, s15
 370 03ac C7ED157A 		fsts	s15, [r7, #84]
 114:../src/interrupt_defs.cpp **** 			right_out = (right_out > 100) ? 100 : ((right_out < -100) ? -100 : right_out);
 371              		.loc 1 114 0
 372 03b0 97ED157A 		flds	s14, [r7, #84]
 373 03b4 DFED257A 		flds	s15, .L32+20
 374 03b8 B4EEE77A 		fcmpes	s14, s15
 375 03bc F1EE10FA 		fmstat
 376 03c0 04DD     		ble	.L30
 377              	.L26:
 378              		.loc 1 114 0 is_stmt 0 discriminator 1
 379 03c2 4FF00003 		mov	r3, #0
 380 03c6 C4F2C823 		movt	r3, 17096
 381 03ca 0EE0     		b	.L16
 382              	.L30:
 383              		.loc 1 114 0 discriminator 2
 384 03cc 97ED157A 		flds	s14, [r7, #84]
 385 03d0 DFED1F7A 		flds	s15, .L32+24
 386 03d4 B4EEE77A 		fcmpes	s14, s15
 387 03d8 F1EE10FA 		fmstat
 388 03dc 04D5     		bpl	.L31
 389              	.L27:
 390              		.loc 1 114 0 discriminator 3
 391 03de 4FF00003 		mov	r3, #0
 392 03e2 CCF2C823 		movt	r3, 49864
 393 03e6 00E0     		b	.L19
 394              	.L31:
 395              		.loc 1 114 0 discriminator 4
 396 03e8 7B6D     		ldr	r3, [r7, #84]	@ float
 397              	.L19:
 398              	.L16:
 399              		.loc 1 114 0 discriminator 6
 400 03ea 7B65     		str	r3, [r7, #84]	@ float
 115:../src/interrupt_defs.cpp **** 			right_enc.last_error = error;
 401              		.loc 1 115 0 is_stmt 1 discriminator 6
 402 03ec 40F20003 		movw	r3, #:lower16:right_enc
 403 03f0 C0F20003 		movt	r3, #:upper16:right_enc
 404 03f4 BA6D     		ldr	r2, [r7, #88]
 405 03f6 9A61     		str	r2, [r3, #24]
 116:../src/interrupt_defs.cpp **** 
 117:../src/interrupt_defs.cpp **** 			abs_err = (error > 0) ? error : (error*-1);
 406              		.loc 1 117 0 discriminator 6
 407 03f8 BB6D     		ldr	r3, [r7, #88]
 408 03fa 002B     		cmp	r3, #0
 409 03fc B8BF     		it	lt
 410 03fe 5B42     		rsblt	r3, r3, #0
 411 0400 3B65     		str	r3, [r7, #80]
 118:../src/interrupt_defs.cpp **** 
 119:../src/interrupt_defs.cpp **** 			if(error > 10 || error < -10)
 412              		.loc 1 119 0 discriminator 6
 413 0402 BB6D     		ldr	r3, [r7, #88]
 414 0404 0A2B     		cmp	r3, #10
 415 0406 03DC     		bgt	.L20
 416              		.loc 1 119 0 is_stmt 0 discriminator 1
 417 0408 BB6D     		ldr	r3, [r7, #88]
 418 040a 13F10A0F 		cmn	r3, #10
 419 040e 25DA     		bge	.L21
 420              	.L20:
 120:../src/interrupt_defs.cpp **** 			{
 121:../src/interrupt_defs.cpp **** 				pwm1_output((((float)(right_out+100)/(float)2))*(float)0.01);
 421              		.loc 1 121 0 is_stmt 1
 422 0410 97ED157A 		flds	s14, [r7, #84]
 423 0414 DFED0D7A 		flds	s15, .L32+20
 424 0418 37EE277A 		fadds	s14, s14, s15
 425 041c F0EE007A 		fconsts	s15, #0
 426 0420 87EE277A 		fdivs	s14, s14, s15
 427 0424 DFED0B7A 		flds	s15, .L32+28
 428 0428 67EE277A 		fmuls	s15, s14, s15
 429 042c 17EE900A 		fmrs	r0, s15
 430 0430 FFF7FEFF 		bl	_Z11pwm1_outputf
 431 0434 1EE0     		b	.L10
 432              	.L33:
 433 0436 00BF     		.align	3
 434              	.L32:
 435 0438 33333333 		.word	858993459
 436 043c 3333C33F 		.word	1069757235
 437 0440 00007A44 		.word	1148846080
 438 0444 9A99193E 		.word	1041865114
 439 0448 8FC2353F 		.word	1060487823
 440 044c 0000C842 		.word	1120403456
 441 0450 0000C8C2 		.word	-1027080192
 442 0454 0AD7233C 		.word	1008981770
 443 0458 CDCCCC3C 		.word	1020054733
 444              	.L21:
 122:../src/interrupt_defs.cpp **** 			}
 123:../src/interrupt_defs.cpp **** 			else
 124:../src/interrupt_defs.cpp **** 			{
 125:../src/interrupt_defs.cpp **** 				pwm1_output(0.50f);
 445              		.loc 1 125 0
 446 045c 4FF07C50 		mov	r0, #1056964608
 447 0460 FFF7FEFF 		bl	_Z11pwm1_outputf
 126:../src/interrupt_defs.cpp **** 				right_enc.m = MODE_OPENLOOP;
 448              		.loc 1 126 0
 449 0464 40F20003 		movw	r3, #:lower16:right_enc
 450 0468 C0F20003 		movt	r3, #:upper16:right_enc
 451 046c 4FF00002 		mov	r2, #0
 452 0470 83F82420 		strb	r2, [r3, #36]
 453              	.L10:
 127:../src/interrupt_defs.cpp **** 			}
 128:../src/interrupt_defs.cpp **** 		}
 129:../src/interrupt_defs.cpp **** 		update_pid();
 454              		.loc 1 129 0
 455 0474 FFF7FEFF 		bl	update_pid
 130:../src/interrupt_defs.cpp **** 		if(state > ST_READY)
 456              		.loc 1 130 0
 457 0478 40F20003 		movw	r3, #:lower16:state
 458 047c C0F20003 		movt	r3, #:upper16:state
 459 0480 1B68     		ldr	r3, [r3, #0]
 460 0482 002B     		cmp	r3, #0
 461 0484 0FDB     		blt	.L1
 131:../src/interrupt_defs.cpp **** 		{
 132:../src/interrupt_defs.cpp **** 			match_time_counter += (float)DT_ENCODER/(float)1000; // Increment main match time counter by DT_
 462              		.loc 1 132 0
 463 0486 40F20003 		movw	r3, #:lower16:match_time_counter
 464 048a C0F20003 		movt	r3, #:upper16:match_time_counter
 465 048e 93ED007A 		flds	s14, [r3, #0]
 466 0492 5FED0F7A 		flds	s15, .L32+32
 467 0496 77EE277A 		fadds	s15, s14, s15
 468 049a 40F20003 		movw	r3, #:lower16:match_time_counter
 469 049e C0F20003 		movt	r3, #:upper16:match_time_counter
 470 04a2 C3ED007A 		fsts	s15, [r3, #0]
 471              	.L1:
 472              	.LBE2:
 133:../src/interrupt_defs.cpp **** 		}
 134:../src/interrupt_defs.cpp **** 
 135:../src/interrupt_defs.cpp **** 	}
 473              		.loc 1 135 0
 474 04a6 07F16407 		add	r7, r7, #100
 475 04aa BD46     		mov	sp, r7
 476 04ac 90BD     		pop	{r4, r7, pc}
 477              		.cfi_endproc
 478              	.LFE111:
 480 04ae 00BF     		.align	2
 481              		.global	TIM1_TRG_COM_TIM17_IRQHandler
 482              		.thumb
 483              		.thumb_func
 485              	TIM1_TRG_COM_TIM17_IRQHandler:
 486              	.LFB112:
 136:../src/interrupt_defs.cpp **** 
 137:../src/interrupt_defs.cpp **** 	void TIM1_TRG_COM_TIM17_IRQHandler(void)
 138:../src/interrupt_defs.cpp **** 	{
 487              		.loc 1 138 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 24
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491 04b0 80B5     		push	{r7, lr}
 492              	.LCFI3:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 04b2 86B0     		sub	sp, sp, #24
 497              	.LCFI4:
 498              		.cfi_def_cfa_offset 32
 499 04b4 00AF     		add	r7, sp, #0
 500              	.LCFI5:
 501              		.cfi_def_cfa_register 7
 502              	.LBB3:
 139:../src/interrupt_defs.cpp **** 
 140:../src/interrupt_defs.cpp **** 		TIM_ClearITPendingBit(TIM17, TIM_IT_Update);
 503              		.loc 1 140 0
 504 04b6 4FF49040 		mov	r0, #18432
 505 04ba C4F20100 		movt	r0, 16385
 506 04be 4FF00101 		mov	r1, #1
 507 04c2 FFF7FEFF 		bl	TIM_ClearITPendingBit
 141:../src/interrupt_defs.cpp **** 
 142:../src/interrupt_defs.cpp **** 		/*
 143:../src/interrupt_defs.cpp **** 		uint8_t bytes[2];
 144:../src/interrupt_defs.cpp **** 
 145:../src/interrupt_defs.cpp **** 		union twosComp {		// Takes care of two's complement conversion
 146:../src/interrupt_defs.cpp **** 			uint16_t un_signed;
 147:../src/interrupt_defs.cpp **** 			int16_t output;
 148:../src/interrupt_defs.cpp **** 		} convert;
 149:../src/interrupt_defs.cpp **** 
 150:../src/interrupt_defs.cpp **** 		L3GD20_Read(bytes, L3GD20_OUT_X_L_ADDR, 2);
 151:../src/interrupt_defs.cpp **** 		convert.un_signed = (bytes[1] << 8) | bytes[0];
 152:../src/interrupt_defs.cpp **** 
 153:../src/interrupt_defs.cpp **** 		gyro_angle_x += (convert.output - gyro_bias_x) * (float)0.00763 * (float)0.001 * (float)DT_IMU;
 154:../src/interrupt_defs.cpp **** 		*/
 155:../src/interrupt_defs.cpp **** 
 156:../src/interrupt_defs.cpp **** 		/*
 157:../src/interrupt_defs.cpp **** 		 * Below: code required to trigger the ping sensor:
 158:../src/interrupt_defs.cpp **** 		 */
 159:../src/interrupt_defs.cpp **** 
 160:../src/interrupt_defs.cpp **** 		EXTI_InitTypeDef e;
 161:../src/interrupt_defs.cpp **** 
 162:../src/interrupt_defs.cpp **** 		e.EXTI_Line = EXTI_Line9;
 508              		.loc 1 162 0
 509 04c6 4FF00903 		mov	r3, #9
 510 04ca FB60     		str	r3, [r7, #12]
 163:../src/interrupt_defs.cpp **** 		e.EXTI_LineCmd = DISABLE;
 511              		.loc 1 163 0
 512 04cc 4FF00003 		mov	r3, #0
 513 04d0 BB74     		strb	r3, [r7, #18]
 164:../src/interrupt_defs.cpp **** 		e.EXTI_Mode = EXTI_Mode_Interrupt;
 514              		.loc 1 164 0
 515 04d2 4FF00003 		mov	r3, #0
 516 04d6 3B74     		strb	r3, [r7, #16]
 165:../src/interrupt_defs.cpp **** 		e.EXTI_Trigger = EXTI_Trigger_Rising;
 517              		.loc 1 165 0
 518 04d8 4FF00803 		mov	r3, #8
 519 04dc 7B74     		strb	r3, [r7, #17]
 166:../src/interrupt_defs.cpp **** 
 167:../src/interrupt_defs.cpp **** 		EXTI_Init(&e);
 520              		.loc 1 167 0
 521 04de 07F10C03 		add	r3, r7, #12
 522 04e2 1846     		mov	r0, r3
 523 04e4 FFF7FEFF 		bl	EXTI_Init
 168:../src/interrupt_defs.cpp **** 
 169:../src/interrupt_defs.cpp **** 		GPIO_InitTypeDef g;
 170:../src/interrupt_defs.cpp **** 		g.GPIO_Mode = GPIO_Mode_OUT;
 524              		.loc 1 170 0
 525 04e8 4FF00103 		mov	r3, #1
 526 04ec 3B72     		strb	r3, [r7, #8]
 171:../src/interrupt_defs.cpp **** 		g.GPIO_OType = GPIO_OType_PP;
 527              		.loc 1 171 0
 528 04ee 4FF00003 		mov	r3, #0
 529 04f2 BB72     		strb	r3, [r7, #10]
 172:../src/interrupt_defs.cpp **** 		g.GPIO_Pin = GPIO_Pin_0;
 530              		.loc 1 172 0
 531 04f4 4FF00103 		mov	r3, #1
 532 04f8 7B60     		str	r3, [r7, #4]
 173:../src/interrupt_defs.cpp **** 		g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 533              		.loc 1 173 0
 534 04fa 4FF00003 		mov	r3, #0
 535 04fe FB72     		strb	r3, [r7, #11]
 174:../src/interrupt_defs.cpp **** 		g.GPIO_Speed = GPIO_Speed_Level_1;
 536              		.loc 1 174 0
 537 0500 4FF00103 		mov	r3, #1
 538 0504 7B72     		strb	r3, [r7, #9]
 175:../src/interrupt_defs.cpp **** 
 176:../src/interrupt_defs.cpp **** 		GPIO_Init(GPIOB, &g);
 539              		.loc 1 176 0
 540 0506 07F10403 		add	r3, r7, #4
 541 050a 4FF48060 		mov	r0, #1024
 542 050e C4F60000 		movt	r0, 18432
 543 0512 1946     		mov	r1, r3
 544 0514 FFF7FEFF 		bl	GPIO_Init
 177:../src/interrupt_defs.cpp **** 		int iter = 0;
 545              		.loc 1 177 0
 546 0518 4FF00003 		mov	r3, #0
 547 051c 7B61     		str	r3, [r7, #20]
 178:../src/interrupt_defs.cpp **** 
 179:../src/interrupt_defs.cpp **** 		for(iter=0;iter<10;++iter)
 548              		.loc 1 179 0
 549 051e 4FF00003 		mov	r3, #0
 550 0522 7B61     		str	r3, [r7, #20]
 551 0524 0DE0     		b	.L35
 552              	.L36:
 180:../src/interrupt_defs.cpp **** 		{
 181:../src/interrupt_defs.cpp **** 			GPIO_WriteBit(GPIOB, GPIO_Pin_0, Bit_SET);
 553              		.loc 1 181 0 discriminator 2
 554 0526 4FF48060 		mov	r0, #1024
 555 052a C4F60000 		movt	r0, 18432
 556 052e 4FF00101 		mov	r1, #1
 557 0532 4FF00102 		mov	r2, #1
 558 0536 FFF7FEFF 		bl	GPIO_WriteBit
 179:../src/interrupt_defs.cpp **** 		for(iter=0;iter<10;++iter)
 559              		.loc 1 179 0 discriminator 2
 560 053a 7B69     		ldr	r3, [r7, #20]
 561 053c 03F10103 		add	r3, r3, #1
 562 0540 7B61     		str	r3, [r7, #20]
 563              	.L35:
 179:../src/interrupt_defs.cpp **** 		for(iter=0;iter<10;++iter)
 564              		.loc 1 179 0 is_stmt 0 discriminator 1
 565 0542 7B69     		ldr	r3, [r7, #20]
 566 0544 092B     		cmp	r3, #9
 567 0546 CCBF     		ite	gt
 568 0548 0023     		movgt	r3, #0
 569 054a 0123     		movle	r3, #1
 570 054c DBB2     		uxtb	r3, r3
 571 054e 002B     		cmp	r3, #0
 572 0550 E9D1     		bne	.L36
 182:../src/interrupt_defs.cpp **** 		}
 183:../src/interrupt_defs.cpp **** 
 184:../src/interrupt_defs.cpp **** 		GPIO_WriteBit(GPIOB, GPIO_Pin_0, Bit_RESET);
 573              		.loc 1 184 0 is_stmt 1
 574 0552 4FF48060 		mov	r0, #1024
 575 0556 C4F60000 		movt	r0, 18432
 576 055a 4FF00101 		mov	r1, #1
 577 055e 4FF00002 		mov	r2, #0
 578 0562 FFF7FEFF 		bl	GPIO_WriteBit
 185:../src/interrupt_defs.cpp **** 
 186:../src/interrupt_defs.cpp **** 
 187:../src/interrupt_defs.cpp **** 		g.GPIO_Mode = GPIO_Mode_IN;
 579              		.loc 1 187 0
 580 0566 4FF00003 		mov	r3, #0
 581 056a 3B72     		strb	r3, [r7, #8]
 188:../src/interrupt_defs.cpp **** 		g.GPIO_OType = GPIO_OType_OD;
 582              		.loc 1 188 0
 583 056c 4FF00103 		mov	r3, #1
 584 0570 BB72     		strb	r3, [r7, #10]
 189:../src/interrupt_defs.cpp **** 		g.GPIO_Pin = GPIO_Pin_0;
 585              		.loc 1 189 0
 586 0572 4FF00103 		mov	r3, #1
 587 0576 7B60     		str	r3, [r7, #4]
 190:../src/interrupt_defs.cpp **** 		g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 588              		.loc 1 190 0
 589 0578 4FF00003 		mov	r3, #0
 590 057c FB72     		strb	r3, [r7, #11]
 191:../src/interrupt_defs.cpp **** 		g.GPIO_Speed = GPIO_Speed_Level_1;
 591              		.loc 1 191 0
 592 057e 4FF00103 		mov	r3, #1
 593 0582 7B72     		strb	r3, [r7, #9]
 192:../src/interrupt_defs.cpp **** 
 193:../src/interrupt_defs.cpp **** 		GPIO_Init(GPIOB, &g);
 594              		.loc 1 193 0
 595 0584 07F10403 		add	r3, r7, #4
 596 0588 4FF48060 		mov	r0, #1024
 597 058c C4F60000 		movt	r0, 18432
 598 0590 1946     		mov	r1, r3
 599 0592 FFF7FEFF 		bl	GPIO_Init
 194:../src/interrupt_defs.cpp **** 
 195:../src/interrupt_defs.cpp **** 		TIM_SetCounter(TIM2, 0);
 600              		.loc 1 195 0
 601 0596 4FF08040 		mov	r0, #1073741824
 602 059a 4FF00001 		mov	r1, #0
 603 059e FFF7FEFF 		bl	TIM_SetCounter
 196:../src/interrupt_defs.cpp **** 
 197:../src/interrupt_defs.cpp **** 		stage = 0;
 604              		.loc 1 197 0
 605 05a2 40F20003 		movw	r3, #:lower16:stage
 606 05a6 C0F20003 		movt	r3, #:upper16:stage
 607 05aa 4FF00002 		mov	r2, #0
 608 05ae 1A60     		str	r2, [r3, #0]
 198:../src/interrupt_defs.cpp **** 
 199:../src/interrupt_defs.cpp **** 		e.EXTI_Line = EXTI_Line9;
 609              		.loc 1 199 0
 610 05b0 4FF00903 		mov	r3, #9
 611 05b4 FB60     		str	r3, [r7, #12]
 200:../src/interrupt_defs.cpp **** 		e.EXTI_LineCmd = ENABLE;
 612              		.loc 1 200 0
 613 05b6 4FF00103 		mov	r3, #1
 614 05ba BB74     		strb	r3, [r7, #18]
 201:../src/interrupt_defs.cpp **** 		e.EXTI_Mode = EXTI_Mode_Interrupt;
 615              		.loc 1 201 0
 616 05bc 4FF00003 		mov	r3, #0
 617 05c0 3B74     		strb	r3, [r7, #16]
 202:../src/interrupt_defs.cpp **** 		e.EXTI_Trigger = EXTI_Trigger_Rising;
 618              		.loc 1 202 0
 619 05c2 4FF00803 		mov	r3, #8
 620 05c6 7B74     		strb	r3, [r7, #17]
 203:../src/interrupt_defs.cpp **** 
 204:../src/interrupt_defs.cpp **** 		EXTI_Init(&e);
 621              		.loc 1 204 0
 622 05c8 07F10C03 		add	r3, r7, #12
 623 05cc 1846     		mov	r0, r3
 624 05ce FFF7FEFF 		bl	EXTI_Init
 205:../src/interrupt_defs.cpp **** 
 206:../src/interrupt_defs.cpp **** 		NVIC_InitTypeDef nv;
 207:../src/interrupt_defs.cpp **** 
 208:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannel = EXTI9_5_IRQn;
 625              		.loc 1 208 0
 626 05d2 4FF01703 		mov	r3, #23
 627 05d6 3B70     		strb	r3, [r7, #0]
 209:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannelCmd = ENABLE;
 628              		.loc 1 209 0
 629 05d8 4FF00103 		mov	r3, #1
 630 05dc FB70     		strb	r3, [r7, #3]
 210:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannelPreemptionPriority = 0;
 631              		.loc 1 210 0
 632 05de 4FF00003 		mov	r3, #0
 633 05e2 7B70     		strb	r3, [r7, #1]
 211:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannelSubPriority = 0;
 634              		.loc 1 211 0
 635 05e4 4FF00003 		mov	r3, #0
 636 05e8 BB70     		strb	r3, [r7, #2]
 212:../src/interrupt_defs.cpp **** 
 213:../src/interrupt_defs.cpp **** 		NVIC_Init(&nv);
 637              		.loc 1 213 0
 638 05ea 3B46     		mov	r3, r7
 639 05ec 1846     		mov	r0, r3
 640 05ee FFF7FEFF 		bl	NVIC_Init
 641              	.LBE3:
 214:../src/interrupt_defs.cpp **** 
 215:../src/interrupt_defs.cpp **** 	}
 642              		.loc 1 215 0
 643 05f2 07F11807 		add	r7, r7, #24
 644 05f6 BD46     		mov	sp, r7
 645 05f8 80BD     		pop	{r7, pc}
 646              		.cfi_endproc
 647              	.LFE112:
 649 05fa 00BF     		.align	2
 650              		.global	TIM6_DAC_IRQHandler
 651              		.thumb
 652              		.thumb_func
 654              	TIM6_DAC_IRQHandler:
 655              	.LFB113:
 216:../src/interrupt_defs.cpp **** 	void TIM6_DAC_IRQHandler(void)
 217:../src/interrupt_defs.cpp **** 	{
 656              		.loc 1 217 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660 05fc 80B5     		push	{r7, lr}
 661              	.LCFI6:
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 05fe 00AF     		add	r7, sp, #0
 666              	.LCFI7:
 667              		.cfi_def_cfa_register 7
 218:../src/interrupt_defs.cpp **** 		TIM_ClearITPendingBit(TIM6, TIM_IT_Update);
 668              		.loc 1 218 0
 669 0600 4FF48050 		mov	r0, #4096
 670 0604 C4F20000 		movt	r0, 16384
 671 0608 4FF00101 		mov	r1, #1
 672 060c FFF7FEFF 		bl	TIM_ClearITPendingBit
 219:../src/interrupt_defs.cpp **** 		if(state == ST_READY)
 673              		.loc 1 219 0
 674 0610 40F20003 		movw	r3, #:lower16:state
 675 0614 C0F20003 		movt	r3, #:upper16:state
 676 0618 1B68     		ldr	r3, [r3, #0]
 677 061a B3F1FF3F 		cmp	r3, #-1
 678 061e 16D1     		bne	.L38
 220:../src/interrupt_defs.cpp **** 		{
 221:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[2] | led_matrix[5]); 	// Two greens
 679              		.loc 1 221 0
 680 0620 40F20003 		movw	r3, #:lower16:led_matrix
 681 0624 C0F20003 		movt	r3, #:upper16:led_matrix
 682 0628 9B68     		ldr	r3, [r3, #8]
 683 062a 9AB2     		uxth	r2, r3
 684 062c 40F20003 		movw	r3, #:lower16:led_matrix
 685 0630 C0F20003 		movt	r3, #:upper16:led_matrix
 686 0634 5B69     		ldr	r3, [r3, #20]
 687 0636 9BB2     		uxth	r3, r3
 688 0638 1343     		orrs	r3, r3, r2
 689 063a 9BB2     		uxth	r3, r3
 690 063c 9BB2     		uxth	r3, r3
 691 063e 4FF48050 		mov	r0, #4096
 692 0642 C4F60000 		movt	r0, 18432
 693 0646 1946     		mov	r1, r3
 694 0648 FFF7FEFF 		bl	GPIO_Write
 695 064c E8E0     		b	.L37
 696              	.L38:
 222:../src/interrupt_defs.cpp **** 		}
 223:../src/interrupt_defs.cpp **** 		else if(state == ST_WANDER)
 697              		.loc 1 223 0
 698 064e 40F20003 		movw	r3, #:lower16:state
 699 0652 C0F20003 		movt	r3, #:upper16:state
 700 0656 1B68     		ldr	r3, [r3, #0]
 701 0658 002B     		cmp	r3, #0
 702 065a 0DD1     		bne	.L40
 224:../src/interrupt_defs.cpp **** 		{
 225:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6]);					// Two Orange (one's lit via PWM pin for ESC control)
 703              		.loc 1 225 0
 704 065c 40F20003 		movw	r3, #:lower16:led_matrix
 705 0660 C0F20003 		movt	r3, #:upper16:led_matrix
 706 0664 9B69     		ldr	r3, [r3, #24]
 707 0666 9BB2     		uxth	r3, r3
 708 0668 4FF48050 		mov	r0, #4096
 709 066c C4F60000 		movt	r0, 18432
 710 0670 1946     		mov	r1, r3
 711 0672 FFF7FEFF 		bl	GPIO_Write
 712 0676 D3E0     		b	.L37
 713              	.L40:
 226:../src/interrupt_defs.cpp **** 		}
 227:../src/interrupt_defs.cpp **** 		else if(state == ST_HOMING)
 714              		.loc 1 227 0
 715 0678 40F20003 		movw	r3, #:lower16:state
 716 067c C0F20003 		movt	r3, #:upper16:state
 717 0680 1B68     		ldr	r3, [r3, #0]
 718 0682 012B     		cmp	r3, #1
 719 0684 16D1     		bne	.L41
 228:../src/interrupt_defs.cpp **** 		{
 229:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[0] | led_matrix[3]);	// Two orange + Two red
 720              		.loc 1 229 0
 721 0686 40F20003 		movw	r3, #:lower16:led_matrix
 722 068a C0F20003 		movt	r3, #:upper16:led_matrix
 723 068e 1B68     		ldr	r3, [r3, #0]
 724 0690 9AB2     		uxth	r2, r3
 725 0692 40F20003 		movw	r3, #:lower16:led_matrix
 726 0696 C0F20003 		movt	r3, #:upper16:led_matrix
 727 069a DB68     		ldr	r3, [r3, #12]
 728 069c 9BB2     		uxth	r3, r3
 729 069e 1343     		orrs	r3, r3, r2
 730 06a0 9BB2     		uxth	r3, r3
 731 06a2 9BB2     		uxth	r3, r3
 732 06a4 4FF48050 		mov	r0, #4096
 733 06a8 C4F60000 		movt	r0, 18432
 734 06ac 1946     		mov	r1, r3
 735 06ae FFF7FEFF 		bl	GPIO_Write
 736 06b2 B5E0     		b	.L37
 737              	.L41:
 230:../src/interrupt_defs.cpp **** 		}
 231:../src/interrupt_defs.cpp **** 		else if(state == ST_FIREFIGHT)
 738              		.loc 1 231 0
 739 06b4 40F20003 		movw	r3, #:lower16:state
 740 06b8 C0F20003 		movt	r3, #:upper16:state
 741 06bc 1B68     		ldr	r3, [r3, #0]
 742 06be 022B     		cmp	r3, #2
 743 06c0 1ED1     		bne	.L42
 232:../src/interrupt_defs.cpp **** 		{
 233:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[0] | led_matrix[3] | led_matrix[6]);
 744              		.loc 1 233 0
 745 06c2 40F20003 		movw	r3, #:lower16:led_matrix
 746 06c6 C0F20003 		movt	r3, #:upper16:led_matrix
 747 06ca 1B68     		ldr	r3, [r3, #0]
 748 06cc 9AB2     		uxth	r2, r3
 749 06ce 40F20003 		movw	r3, #:lower16:led_matrix
 750 06d2 C0F20003 		movt	r3, #:upper16:led_matrix
 751 06d6 DB68     		ldr	r3, [r3, #12]
 752 06d8 9BB2     		uxth	r3, r3
 753 06da 1343     		orrs	r3, r3, r2
 754 06dc 9AB2     		uxth	r2, r3
 755 06de 40F20003 		movw	r3, #:lower16:led_matrix
 756 06e2 C0F20003 		movt	r3, #:upper16:led_matrix
 757 06e6 9B69     		ldr	r3, [r3, #24]
 758 06e8 9BB2     		uxth	r3, r3
 759 06ea 1343     		orrs	r3, r3, r2
 760 06ec 9BB2     		uxth	r3, r3
 761 06ee 9BB2     		uxth	r3, r3
 762 06f0 4FF48050 		mov	r0, #4096
 763 06f4 C4F60000 		movt	r0, 18432
 764 06f8 1946     		mov	r1, r3
 765 06fa FFF7FEFF 		bl	GPIO_Write
 766 06fe 8FE0     		b	.L37
 767              	.L42:
 234:../src/interrupt_defs.cpp **** 		}
 235:../src/interrupt_defs.cpp **** 		else if (state == ST_CANDLE_BLOWOUT)
 768              		.loc 1 235 0
 769 0700 40F20003 		movw	r3, #:lower16:state
 770 0704 C0F20003 		movt	r3, #:upper16:state
 771 0708 1B68     		ldr	r3, [r3, #0]
 772 070a 032B     		cmp	r3, #3
 773 070c 3ED1     		bne	.L43
 236:../src/interrupt_defs.cpp **** 		{
 237:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 774              		.loc 1 237 0
 775 070e 40F20003 		movw	r3, #:lower16:led_matrix
 776 0712 C0F20003 		movt	r3, #:upper16:led_matrix
 777 0716 9B69     		ldr	r3, [r3, #24]
 238:../src/interrupt_defs.cpp ****                                             | led_matrix[4] | led_matrix[5]); // All LED's
 778              		.loc 1 238 0
 779 0718 9AB2     		uxth	r2, r3
 237:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 780              		.loc 1 237 0
 781 071a 40F20003 		movw	r3, #:lower16:led_matrix
 782 071e C0F20003 		movt	r3, #:upper16:led_matrix
 783 0722 1B68     		ldr	r3, [r3, #0]
 784              		.loc 1 238 0
 785 0724 9BB2     		uxth	r3, r3
 786 0726 1343     		orrs	r3, r3, r2
 787 0728 9AB2     		uxth	r2, r3
 237:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 788              		.loc 1 237 0
 789 072a 40F20003 		movw	r3, #:lower16:led_matrix
 790 072e C0F20003 		movt	r3, #:upper16:led_matrix
 791 0732 5B68     		ldr	r3, [r3, #4]
 792              		.loc 1 238 0
 793 0734 9BB2     		uxth	r3, r3
 794 0736 1343     		orrs	r3, r3, r2
 795 0738 9AB2     		uxth	r2, r3
 237:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 796              		.loc 1 237 0
 797 073a 40F20003 		movw	r3, #:lower16:led_matrix
 798 073e C0F20003 		movt	r3, #:upper16:led_matrix
 799 0742 9B68     		ldr	r3, [r3, #8]
 800              		.loc 1 238 0
 801 0744 9BB2     		uxth	r3, r3
 802 0746 1343     		orrs	r3, r3, r2
 803 0748 9AB2     		uxth	r2, r3
 237:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 804              		.loc 1 237 0
 805 074a 40F20003 		movw	r3, #:lower16:led_matrix
 806 074e C0F20003 		movt	r3, #:upper16:led_matrix
 807 0752 DB68     		ldr	r3, [r3, #12]
 808              		.loc 1 238 0
 809 0754 9BB2     		uxth	r3, r3
 810 0756 1343     		orrs	r3, r3, r2
 811 0758 9AB2     		uxth	r2, r3
 812 075a 40F20003 		movw	r3, #:lower16:led_matrix
 813 075e C0F20003 		movt	r3, #:upper16:led_matrix
 814 0762 1B69     		ldr	r3, [r3, #16]
 815 0764 9BB2     		uxth	r3, r3
 816 0766 1343     		orrs	r3, r3, r2
 817 0768 9AB2     		uxth	r2, r3
 818 076a 40F20003 		movw	r3, #:lower16:led_matrix
 819 076e C0F20003 		movt	r3, #:upper16:led_matrix
 820 0772 5B69     		ldr	r3, [r3, #20]
 821 0774 9BB2     		uxth	r3, r3
 822 0776 1343     		orrs	r3, r3, r2
 823 0778 9BB2     		uxth	r3, r3
 824 077a 9BB2     		uxth	r3, r3
 825 077c 4FF48050 		mov	r0, #4096
 826 0780 C4F60000 		movt	r0, 18432
 827 0784 1946     		mov	r1, r3
 828 0786 FFF7FEFF 		bl	GPIO_Write
 829 078a 49E0     		b	.L37
 830              	.L43:
 239:../src/interrupt_defs.cpp **** 		}
 240:../src/interrupt_defs.cpp **** 		else if (state == ST_DONE)
 831              		.loc 1 240 0
 832 078c 40F20003 		movw	r3, #:lower16:state
 833 0790 C0F20003 		movt	r3, #:upper16:state
 834 0794 1B68     		ldr	r3, [r3, #0]
 835 0796 042B     		cmp	r3, #4
 836 0798 42D1     		bne	.L37
 241:../src/interrupt_defs.cpp **** 		{
 242:../src/interrupt_defs.cpp **** 			++led_iter;
 837              		.loc 1 242 0
 838 079a 40F20003 		movw	r3, #:lower16:led_iter
 839 079e C0F20003 		movt	r3, #:upper16:led_iter
 840 07a2 1B68     		ldr	r3, [r3, #0]
 841 07a4 03F10102 		add	r2, r3, #1
 842 07a8 40F20003 		movw	r3, #:lower16:led_iter
 843 07ac C0F20003 		movt	r3, #:upper16:led_iter
 844 07b0 1A60     		str	r2, [r3, #0]
 243:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[led_iter] | led_matrix[6-led_iter]);
 845              		.loc 1 243 0
 846 07b2 40F20003 		movw	r3, #:lower16:led_iter
 847 07b6 C0F20003 		movt	r3, #:upper16:led_iter
 848 07ba 1A68     		ldr	r2, [r3, #0]
 849 07bc 40F20003 		movw	r3, #:lower16:led_matrix
 850 07c0 C0F20003 		movt	r3, #:upper16:led_matrix
 851 07c4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 852 07c8 9AB2     		uxth	r2, r3
 853 07ca 40F20003 		movw	r3, #:lower16:led_iter
 854 07ce C0F20003 		movt	r3, #:upper16:led_iter
 855 07d2 1B68     		ldr	r3, [r3, #0]
 856 07d4 C3F10601 		rsb	r1, r3, #6
 857 07d8 40F20003 		movw	r3, #:lower16:led_matrix
 858 07dc C0F20003 		movt	r3, #:upper16:led_matrix
 859 07e0 53F82130 		ldr	r3, [r3, r1, lsl #2]
 860 07e4 9BB2     		uxth	r3, r3
 861 07e6 1343     		orrs	r3, r3, r2
 862 07e8 9BB2     		uxth	r3, r3
 863 07ea 9BB2     		uxth	r3, r3
 864 07ec 4FF48050 		mov	r0, #4096
 865 07f0 C4F60000 		movt	r0, 18432
 866 07f4 1946     		mov	r1, r3
 867 07f6 FFF7FEFF 		bl	GPIO_Write
 244:../src/interrupt_defs.cpp **** 			if(led_iter > 6)
 868              		.loc 1 244 0
 869 07fa 40F20003 		movw	r3, #:lower16:led_iter
 870 07fe C0F20003 		movt	r3, #:upper16:led_iter
 871 0802 1B68     		ldr	r3, [r3, #0]
 872 0804 062B     		cmp	r3, #6
 873 0806 D4BF     		ite	le
 874 0808 0023     		movle	r3, #0
 875 080a 0123     		movgt	r3, #1
 876 080c DBB2     		uxtb	r3, r3
 877 080e 002B     		cmp	r3, #0
 878 0810 06D0     		beq	.L37
 245:../src/interrupt_defs.cpp **** 			{
 246:../src/interrupt_defs.cpp **** 				led_iter = 0;
 879              		.loc 1 246 0
 880 0812 40F20003 		movw	r3, #:lower16:led_iter
 881 0816 C0F20003 		movt	r3, #:upper16:led_iter
 882 081a 4FF00002 		mov	r2, #0
 883 081e 1A60     		str	r2, [r3, #0]
 884              	.L37:
 247:../src/interrupt_defs.cpp **** 			}
 248:../src/interrupt_defs.cpp **** 		}
 249:../src/interrupt_defs.cpp **** 	}
 885              		.loc 1 249 0
 886 0820 80BD     		pop	{r7, pc}
 887              		.cfi_endproc
 888              	.LFE113:
 890 0822 00BF     		.align	2
 891              		.global	ADC1_2_IRQHandler
 892              		.thumb
 893              		.thumb_func
 895              	ADC1_2_IRQHandler:
 896              	.LFB114:
 250:../src/interrupt_defs.cpp **** 	void ADC1_2_IRQHandler(void)
 251:../src/interrupt_defs.cpp **** 	{
 897              		.loc 1 251 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901 0824 80B5     		push	{r7, lr}
 902              	.LCFI8:
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0826 00AF     		add	r7, sp, #0
 907              	.LCFI9:
 908              		.cfi_def_cfa_register 7
 252:../src/interrupt_defs.cpp **** 		if(ADC_GetITStatus(ADC1, ADC_IT_EOC) == SET)
 909              		.loc 1 252 0
 910 0828 4FF0A040 		mov	r0, #1342177280
 911 082c 4FF00401 		mov	r1, #4
 912 0830 FFF7FEFF 		bl	ADC_GetITStatus
 913 0834 0346     		mov	r3, r0
 914 0836 012B     		cmp	r3, #1
 915 0838 14BF     		ite	ne
 916 083a 0023     		movne	r3, #0
 917 083c 0123     		moveq	r3, #1
 918 083e DBB2     		uxtb	r3, r3
 919 0840 002B     		cmp	r3, #0
 920 0842 10D0     		beq	.L44
 253:../src/interrupt_defs.cpp **** 		{
 254:../src/interrupt_defs.cpp **** 			adcval = ADC_GetConversionValue(ADC1);
 921              		.loc 1 254 0
 922 0844 4FF0A040 		mov	r0, #1342177280
 923 0848 FFF7FEFF 		bl	ADC_GetConversionValue
 924 084c 0346     		mov	r3, r0
 925 084e 1A46     		mov	r2, r3
 926 0850 40F20003 		movw	r3, #:lower16:adcval
 927 0854 C0F20003 		movt	r3, #:upper16:adcval
 928 0858 1A60     		str	r2, [r3, #0]
 255:../src/interrupt_defs.cpp **** 			ADC_ClearITPendingBit(ADC1, ADC_IT_EOC);
 929              		.loc 1 255 0
 930 085a 4FF0A040 		mov	r0, #1342177280
 931 085e 4FF00401 		mov	r1, #4
 932 0862 FFF7FEFF 		bl	ADC_ClearITPendingBit
 933              	.L44:
 256:../src/interrupt_defs.cpp **** 		}
 257:../src/interrupt_defs.cpp **** 	}
 934              		.loc 1 257 0
 935 0866 80BD     		pop	{r7, pc}
 936              		.cfi_endproc
 937              	.LFE114:
 939              		.align	2
 940              		.global	DMA1_Channel1_IRQHandler
 941              		.thumb
 942              		.thumb_func
 944              	DMA1_Channel1_IRQHandler:
 945              	.LFB115:
 258:../src/interrupt_defs.cpp **** 
 259:../src/interrupt_defs.cpp **** 	void DMA1_Channel1_IRQHandler(void)
 260:../src/interrupt_defs.cpp **** 	{
 946              		.loc 1 260 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 1, uses_anonymous_args = 0
 950 0868 80B5     		push	{r7, lr}
 951              	.LCFI10:
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 086a 00AF     		add	r7, sp, #0
 956              	.LCFI11:
 957              		.cfi_def_cfa_register 7
 261:../src/interrupt_defs.cpp **** 		DMA_ClearITPendingBit(DMA1_IT_TC1);
 958              		.loc 1 261 0
 959 086c 4FF00200 		mov	r0, #2
 960 0870 FFF7FEFF 		bl	DMA_ClearITPendingBit
 262:../src/interrupt_defs.cpp **** 		new_data = 1;
 961              		.loc 1 262 0
 962 0874 40F20003 		movw	r3, #:lower16:new_data
 963 0878 C0F20003 		movt	r3, #:upper16:new_data
 964 087c 4FF00102 		mov	r2, #1
 965 0880 1A60     		str	r2, [r3, #0]
 263:../src/interrupt_defs.cpp **** 	}
 966              		.loc 1 263 0
 967 0882 80BD     		pop	{r7, pc}
 968              		.cfi_endproc
 969              	.LFE115:
 971              		.align	2
 972              		.global	DMA2_Channel1_IRQHandler
 973              		.thumb
 974              		.thumb_func
 976              	DMA2_Channel1_IRQHandler:
 977              	.LFB116:
 264:../src/interrupt_defs.cpp **** 
 265:../src/interrupt_defs.cpp **** 	void DMA2_Channel1_IRQHandler(void)
 266:../src/interrupt_defs.cpp **** 	{
 978              		.loc 1 266 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0884 80B5     		push	{r7, lr}
 983              	.LCFI12:
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0886 00AF     		add	r7, sp, #0
 988              	.LCFI13:
 989              		.cfi_def_cfa_register 7
 267:../src/interrupt_defs.cpp **** 		DMA_ClearITPendingBit(DMA2_IT_TC1);
 990              		.loc 1 267 0
 991 0888 4FF00200 		mov	r0, #2
 992 088c C1F20000 		movt	r0, 4096
 993 0890 FFF7FEFF 		bl	DMA_ClearITPendingBit
 268:../src/interrupt_defs.cpp **** 		adc2_new_data = 1;
 994              		.loc 1 268 0
 995 0894 40F20003 		movw	r3, #:lower16:adc2_new_data
 996 0898 C0F20003 		movt	r3, #:upper16:adc2_new_data
 997 089c 4FF00102 		mov	r2, #1
 998 08a0 1A70     		strb	r2, [r3, #0]
 269:../src/interrupt_defs.cpp **** 	}
 999              		.loc 1 269 0
 1000 08a2 80BD     		pop	{r7, pc}
 1001              		.cfi_endproc
 1002              	.LFE116:
 1004              		.align	2
 1005              		.global	ADC3_IRQHandler
 1006              		.thumb
 1007              		.thumb_func
 1009              	ADC3_IRQHandler:
 1010              	.LFB117:
 270:../src/interrupt_defs.cpp **** 
 271:../src/interrupt_defs.cpp **** 	void ADC3_IRQHandler(void)
 272:../src/interrupt_defs.cpp **** 	{
 1011              		.loc 1 272 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 8
 1014              		@ frame_needed = 1, uses_anonymous_args = 0
 1015 08a4 80B5     		push	{r7, lr}
 1016              	.LCFI14:
 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 7, -8
 1019              		.cfi_offset 14, -4
 1020 08a6 82B0     		sub	sp, sp, #8
 1021              	.LCFI15:
 1022              		.cfi_def_cfa_offset 16
 1023 08a8 00AF     		add	r7, sp, #0
 1024              	.LCFI16:
 1025              		.cfi_def_cfa_register 7
 1026              	.LBB4:
 273:../src/interrupt_defs.cpp **** 		int i = 0;
 1027              		.loc 1 273 0
 1028 08aa 4FF00003 		mov	r3, #0
 1029 08ae 7B60     		str	r3, [r7, #4]
 274:../src/interrupt_defs.cpp **** 		int sum = 0;
 1030              		.loc 1 274 0
 1031 08b0 4FF00003 		mov	r3, #0
 1032 08b4 3B60     		str	r3, [r7, #0]
 275:../src/interrupt_defs.cpp **** 		if(ADC_GetITStatus(ADC3, ADC_IT_AWD1) != RESET)
 1033              		.loc 1 275 0
 1034 08b6 4FF48060 		mov	r0, #1024
 1035 08ba C5F20000 		movt	r0, 20480
 1036 08be 4FF08001 		mov	r1, #128
 1037 08c2 FFF7FEFF 		bl	ADC_GetITStatus
 1038 08c6 0346     		mov	r3, r0
 1039 08c8 002B     		cmp	r3, #0
 1040 08ca 0CBF     		ite	eq
 1041 08cc 0023     		moveq	r3, #0
 1042 08ce 0123     		movne	r3, #1
 1043 08d0 DBB2     		uxtb	r3, r3
 1044 08d2 002B     		cmp	r3, #0
 1045 08d4 38D0     		beq	.L49
 276:../src/interrupt_defs.cpp **** 		{
 277:../src/interrupt_defs.cpp **** 			ADC_ClearITPendingBit(ADC3, ADC_IT_AWD1);
 1046              		.loc 1 277 0
 1047 08d6 4FF48060 		mov	r0, #1024
 1048 08da C5F20000 		movt	r0, 20480
 1049 08de 4FF08001 		mov	r1, #128
 1050 08e2 FFF7FEFF 		bl	ADC_ClearITPendingBit
 278:../src/interrupt_defs.cpp **** 			for(i=0; i<35;++i)
 1051              		.loc 1 278 0
 1052 08e6 4FF00003 		mov	r3, #0
 1053 08ea 7B60     		str	r3, [r7, #4]
 1054 08ec 0DE0     		b	.L50
 1055              	.L51:
 279:../src/interrupt_defs.cpp **** 			{
 280:../src/interrupt_defs.cpp **** 				sum += ADC_GetConversionValue(ADC3);
 1056              		.loc 1 280 0 discriminator 2
 1057 08ee 4FF48060 		mov	r0, #1024
 1058 08f2 C5F20000 		movt	r0, 20480
 1059 08f6 FFF7FEFF 		bl	ADC_GetConversionValue
 1060 08fa 0346     		mov	r3, r0
 1061 08fc 3A68     		ldr	r2, [r7, #0]
 1062 08fe D318     		adds	r3, r2, r3
 1063 0900 3B60     		str	r3, [r7, #0]
 278:../src/interrupt_defs.cpp **** 			for(i=0; i<35;++i)
 1064              		.loc 1 278 0 discriminator 2
 1065 0902 7B68     		ldr	r3, [r7, #4]
 1066 0904 03F10103 		add	r3, r3, #1
 1067 0908 7B60     		str	r3, [r7, #4]
 1068              	.L50:
 278:../src/interrupt_defs.cpp **** 			for(i=0; i<35;++i)
 1069              		.loc 1 278 0 is_stmt 0 discriminator 1
 1070 090a 7B68     		ldr	r3, [r7, #4]
 1071 090c 222B     		cmp	r3, #34
 1072 090e CCBF     		ite	gt
 1073 0910 0023     		movgt	r3, #0
 1074 0912 0123     		movle	r3, #1
 1075 0914 DBB2     		uxtb	r3, r3
 1076 0916 002B     		cmp	r3, #0
 1077 0918 E9D1     		bne	.L51
 281:../src/interrupt_defs.cpp **** 			}
 282:../src/interrupt_defs.cpp **** 			if((float)sum/float(35) > 2048)
 1078              		.loc 1 282 0 is_stmt 1
 1079 091a D7ED007A 		flds	s15, [r7, #0]	@ int
 1080 091e B8EEE77A 		fsitos	s14, s15
 1081 0922 DFED1B7A 		flds	s15, .L55
 1082 0926 87EE277A 		fdivs	s14, s14, s15
 1083 092a DFED1A7A 		flds	s15, .L55+4
 1084 092e B4EEE77A 		fcmpes	s14, s15
 1085 0932 F1EE10FA 		fmstat
 1086 0936 26DD     		ble	.L48
 1087              	.L54:
 283:../src/interrupt_defs.cpp **** 			{
 284:../src/interrupt_defs.cpp **** 				adc3_awd1 = 1;
 1088              		.loc 1 284 0
 1089 0938 40F20003 		movw	r3, #:lower16:adc3_awd1
 1090 093c C0F20003 		movt	r3, #:upper16:adc3_awd1
 1091 0940 4FF00102 		mov	r2, #1
 1092 0944 1A70     		strb	r2, [r3, #0]
 1093 0946 1EE0     		b	.L48
 1094              	.L49:
 285:../src/interrupt_defs.cpp **** 			}
 286:../src/interrupt_defs.cpp **** 		}
 287:../src/interrupt_defs.cpp **** 		else if (ADC_GetITStatus(ADC3, ADC_IT_AWD2) != RESET)
 1095              		.loc 1 287 0
 1096 0948 4FF48060 		mov	r0, #1024
 1097 094c C5F20000 		movt	r0, 20480
 1098 0950 4FF48071 		mov	r1, #256
 1099 0954 FFF7FEFF 		bl	ADC_GetITStatus
 1100 0958 0346     		mov	r3, r0
 1101 095a 002B     		cmp	r3, #0
 1102 095c 0CBF     		ite	eq
 1103 095e 0023     		moveq	r3, #0
 1104 0960 0123     		movne	r3, #1
 1105 0962 DBB2     		uxtb	r3, r3
 1106 0964 002B     		cmp	r3, #0
 1107 0966 0ED0     		beq	.L48
 288:../src/interrupt_defs.cpp **** 		{
 289:../src/interrupt_defs.cpp **** 			ADC_ClearITPendingBit(ADC3, ADC_IT_AWD2);
 1108              		.loc 1 289 0
 1109 0968 4FF48060 		mov	r0, #1024
 1110 096c C5F20000 		movt	r0, 20480
 1111 0970 4FF48071 		mov	r1, #256
 1112 0974 FFF7FEFF 		bl	ADC_ClearITPendingBit
 290:../src/interrupt_defs.cpp **** 			adc3_awd2 = 1;
 1113              		.loc 1 290 0
 1114 0978 40F20003 		movw	r3, #:lower16:adc3_awd2
 1115 097c C0F20003 		movt	r3, #:upper16:adc3_awd2
 1116 0980 4FF00102 		mov	r2, #1
 1117 0984 1A70     		strb	r2, [r3, #0]
 1118              	.L48:
 1119              	.LBE4:
 291:../src/interrupt_defs.cpp **** 		}
 292:../src/interrupt_defs.cpp **** 	}
 1120              		.loc 1 292 0
 1121 0986 07F10807 		add	r7, r7, #8
 1122 098a BD46     		mov	sp, r7
 1123 098c 80BD     		pop	{r7, pc}
 1124              	.L56:
 1125 098e 00BF     		.align	2
 1126              	.L55:
 1127 0990 00000C42 		.word	1108082688
 1128 0994 00000045 		.word	1157627904
 1129              		.cfi_endproc
 1130              	.LFE117:
 1132              		.align	2
 1133              		.global	EXTI9_5_IRQHandler
 1134              		.thumb
 1135              		.thumb_func
 1137              	EXTI9_5_IRQHandler:
 1138              	.LFB118:
 293:../src/interrupt_defs.cpp **** 
 294:../src/interrupt_defs.cpp **** 	void EXTI9_5_IRQHandler(void)//EXTI5_IRQHandler(void)
 295:../src/interrupt_defs.cpp **** 	{
 1139              		.loc 1 295 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 16
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0998 80B5     		push	{r7, lr}
 1144              	.LCFI17:
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
 1148 099a 84B0     		sub	sp, sp, #16
 1149              	.LCFI18:
 1150              		.cfi_def_cfa_offset 24
 1151 099c 00AF     		add	r7, sp, #0
 1152              	.LCFI19:
 1153              		.cfi_def_cfa_register 7
 1154              	.LBB5:
 296:../src/interrupt_defs.cpp **** 		EXTI_ClearITPendingBit(EXTI_Line9);
 1155              		.loc 1 296 0
 1156 099e 4FF00900 		mov	r0, #9
 1157 09a2 FFF7FEFF 		bl	EXTI_ClearITPendingBit
 1158              	.LBB6:
 297:../src/interrupt_defs.cpp **** 		if(stage == 0)
 1159              		.loc 1 297 0
 1160 09a6 40F20003 		movw	r3, #:lower16:stage
 1161 09aa C0F20003 		movt	r3, #:upper16:stage
 1162 09ae 1B68     		ldr	r3, [r3, #0]
 1163 09b0 002B     		cmp	r3, #0
 1164 09b2 24D1     		bne	.L58
 1165              	.LBB7:
 298:../src/interrupt_defs.cpp **** 		{
 299:../src/interrupt_defs.cpp **** 			TIM_SetCounter(TIM2, 0);
 1166              		.loc 1 299 0
 1167 09b4 4FF08040 		mov	r0, #1073741824
 1168 09b8 4FF00001 		mov	r1, #0
 1169 09bc FFF7FEFF 		bl	TIM_SetCounter
 300:../src/interrupt_defs.cpp **** 			TIM_Cmd(TIM2, ENABLE);
 1170              		.loc 1 300 0
 1171 09c0 4FF08040 		mov	r0, #1073741824
 1172 09c4 4FF00101 		mov	r1, #1
 1173 09c8 FFF7FEFF 		bl	TIM_Cmd
 301:../src/interrupt_defs.cpp **** 
 302:../src/interrupt_defs.cpp **** 			EXTI_InitTypeDef e;
 303:../src/interrupt_defs.cpp **** 
 304:../src/interrupt_defs.cpp **** 			e.EXTI_Line = EXTI_Line9;
 1174              		.loc 1 304 0
 1175 09cc 4FF00903 		mov	r3, #9
 1176 09d0 BB60     		str	r3, [r7, #8]
 305:../src/interrupt_defs.cpp **** 			e.EXTI_LineCmd = ENABLE;
 1177              		.loc 1 305 0
 1178 09d2 4FF00103 		mov	r3, #1
 1179 09d6 BB73     		strb	r3, [r7, #14]
 306:../src/interrupt_defs.cpp **** 			e.EXTI_Mode = EXTI_Mode_Interrupt;
 1180              		.loc 1 306 0
 1181 09d8 4FF00003 		mov	r3, #0
 1182 09dc 3B73     		strb	r3, [r7, #12]
 307:../src/interrupt_defs.cpp **** 			e.EXTI_Trigger = EXTI_Trigger_Falling;
 1183              		.loc 1 307 0
 1184 09de 4FF00C03 		mov	r3, #12
 1185 09e2 7B73     		strb	r3, [r7, #13]
 308:../src/interrupt_defs.cpp **** 
 309:../src/interrupt_defs.cpp **** 			EXTI_Init(&e);
 1186              		.loc 1 309 0
 1187 09e4 07F10803 		add	r3, r7, #8
 1188 09e8 1846     		mov	r0, r3
 1189 09ea FFF7FEFF 		bl	EXTI_Init
 310:../src/interrupt_defs.cpp **** 
 311:../src/interrupt_defs.cpp **** 			stage = 1;
 1190              		.loc 1 311 0
 1191 09ee 40F20003 		movw	r3, #:lower16:stage
 1192 09f2 C0F20003 		movt	r3, #:upper16:stage
 1193 09f6 4FF00102 		mov	r2, #1
 1194 09fa 1A60     		str	r2, [r3, #0]
 1195 09fc 2FE0     		b	.L57
 1196              	.L58:
 1197              	.LBE7:
 1198              	.LBB8:
 1199              	.LBB9:
 312:../src/interrupt_defs.cpp **** 			return;
 313:../src/interrupt_defs.cpp **** 		}
 314:../src/interrupt_defs.cpp **** 		else if(stage == 1)
 1200              		.loc 1 314 0
 1201 09fe 40F20003 		movw	r3, #:lower16:stage
 1202 0a02 C0F20003 		movt	r3, #:upper16:stage
 1203 0a06 1B68     		ldr	r3, [r3, #0]
 1204 0a08 012B     		cmp	r3, #1
 1205 0a0a 28D1     		bne	.L57
 1206              	.LBB10:
 315:../src/interrupt_defs.cpp **** 		{
 316:../src/interrupt_defs.cpp **** 			count = TIM_GetCounter(TIM2);
 1207              		.loc 1 316 0
 1208 0a0c 4FF08040 		mov	r0, #1073741824
 1209 0a10 FFF7FEFF 		bl	TIM_GetCounter
 1210 0a14 0346     		mov	r3, r0
 1211 0a16 1A46     		mov	r2, r3
 1212 0a18 40F20003 		movw	r3, #:lower16:count
 1213 0a1c C0F20003 		movt	r3, #:upper16:count
 1214 0a20 1A60     		str	r2, [r3, #0]
 317:../src/interrupt_defs.cpp **** 			TIM_Cmd(TIM2, DISABLE);
 1215              		.loc 1 317 0
 1216 0a22 4FF08040 		mov	r0, #1073741824
 1217 0a26 4FF00001 		mov	r1, #0
 1218 0a2a FFF7FEFF 		bl	TIM_Cmd
 318:../src/interrupt_defs.cpp **** 
 319:../src/interrupt_defs.cpp **** 			NVIC_InitTypeDef nv;
 320:../src/interrupt_defs.cpp **** 
 321:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannel = EXTI9_5_IRQn;
 1219              		.loc 1 321 0
 1220 0a2e 4FF01703 		mov	r3, #23
 1221 0a32 3B71     		strb	r3, [r7, #4]
 322:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannelCmd = DISABLE;
 1222              		.loc 1 322 0
 1223 0a34 4FF00003 		mov	r3, #0
 1224 0a38 FB71     		strb	r3, [r7, #7]
 323:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannelPreemptionPriority = 0;
 1225              		.loc 1 323 0
 1226 0a3a 4FF00003 		mov	r3, #0
 1227 0a3e 7B71     		strb	r3, [r7, #5]
 324:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannelSubPriority = 0;
 1228              		.loc 1 324 0
 1229 0a40 4FF00003 		mov	r3, #0
 1230 0a44 BB71     		strb	r3, [r7, #6]
 325:../src/interrupt_defs.cpp **** 
 326:../src/interrupt_defs.cpp **** 			NVIC_Init(&nv);
 1231              		.loc 1 326 0
 1232 0a46 07F10403 		add	r3, r7, #4
 1233 0a4a 1846     		mov	r0, r3
 1234 0a4c FFF7FEFF 		bl	NVIC_Init
 327:../src/interrupt_defs.cpp **** 
 328:../src/interrupt_defs.cpp **** 			stage = 0;
 1235              		.loc 1 328 0
 1236 0a50 40F20003 		movw	r3, #:lower16:stage
 1237 0a54 C0F20003 		movt	r3, #:upper16:stage
 1238 0a58 4FF00002 		mov	r2, #0
 1239 0a5c 1A60     		str	r2, [r3, #0]
 1240              	.L57:
 1241              	.LBE10:
 1242              	.LBE9:
 1243              	.LBE8:
 1244              	.LBE6:
 1245              	.LBE5:
 329:../src/interrupt_defs.cpp **** 			return;
 330:../src/interrupt_defs.cpp **** 		}
 331:../src/interrupt_defs.cpp **** 	}
 1246              		.loc 1 331 0
 1247 0a5e 07F11007 		add	r7, r7, #16
 1248 0a62 BD46     		mov	sp, r7
 1249 0a64 80BD     		pop	{r7, pc}
 1250              		.cfi_endproc
 1251              	.LFE118:
 1253              		.global	__aeabi_f2d
 1254 0a66 00BF     		.align	2
 1255              		.global	update_pid
 1256              		.thumb
 1257              		.thumb_func
 1259              	update_pid:
 1260              	.LFB119:
 332:../src/interrupt_defs.cpp **** 
 333:../src/interrupt_defs.cpp **** 	void update_pid(void)
 334:../src/interrupt_defs.cpp **** 	{
 1261              		.loc 1 334 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 8
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0a68 80B5     		push	{r7, lr}
 1266              	.LCFI20:
 1267              		.cfi_def_cfa_offset 8
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 1270 0a6a 82B0     		sub	sp, sp, #8
 1271              	.LCFI21:
 1272              		.cfi_def_cfa_offset 16
 1273 0a6c 00AF     		add	r7, sp, #0
 1274              	.LCFI22:
 1275              		.cfi_def_cfa_register 7
 1276              	.LBB11:
 335:../src/interrupt_defs.cpp **** 		float mtr_out = 0.50f;
 1277              		.loc 1 335 0
 1278 0a6e 4FF07C53 		mov	r3, #1056964608
 1279 0a72 7B60     		str	r3, [r7, #4]	@ float
 336:../src/interrupt_defs.cpp **** 		d_front = ((float)count*(float)0.5*(float)K_ULTRASONIC);
 1280              		.loc 1 336 0
 1281 0a74 40F20003 		movw	r3, #:lower16:count
 1282 0a78 C0F20003 		movt	r3, #:upper16:count
 1283 0a7c D3ED007A 		flds	s15, [r3, #0]	@ int
 1284 0a80 B8EEE77A 		fsitos	s14, s15
 1285 0a84 F6EE007A 		fconsts	s15, #96
 1286 0a88 27EE277A 		fmuls	s14, s14, s15
 1287 0a8c DFEDE47A 		flds	s15, .L140+8
 1288 0a90 67EE277A 		fmuls	s15, s14, s15
 1289 0a94 40F20003 		movw	r3, #:lower16:d_front
 1290 0a98 C0F20003 		movt	r3, #:upper16:d_front
 1291 0a9c C3ED007A 		fsts	s15, [r3, #0]
 337:../src/interrupt_defs.cpp **** 
 338:../src/interrupt_defs.cpp **** 		if(state == ST_HOMING)
 1292              		.loc 1 338 0
 1293 0aa0 40F20003 		movw	r3, #:lower16:state
 1294 0aa4 C0F20003 		movt	r3, #:upper16:state
 1295 0aa8 1B68     		ldr	r3, [r3, #0]
 1296 0aaa 012B     		cmp	r3, #1
 1297 0aac 40F03181 		bne	.L61
 339:../src/interrupt_defs.cpp **** 		{
 340:../src/interrupt_defs.cpp **** 			err = (float)(1.0) * (float)((int)adcData[0] - (int)adc2_data[2]);
 1298              		.loc 1 340 0
 1299 0ab0 40F20003 		movw	r3, #:lower16:adcData
 1300 0ab4 C0F20003 		movt	r3, #:upper16:adcData
 1301 0ab8 1B68     		ldr	r3, [r3, #0]
 1302 0aba 1A46     		mov	r2, r3
 1303 0abc 40F20003 		movw	r3, #:lower16:adc2_data
 1304 0ac0 C0F20003 		movt	r3, #:upper16:adc2_data
 1305 0ac4 9B68     		ldr	r3, [r3, #8]
 1306 0ac6 D31A     		subs	r3, r2, r3
 1307 0ac8 07EE103A 		fmsr	s14, r3	@ int
 1308 0acc F8EEC77A 		fsitos	s15, s14
 1309 0ad0 40F20003 		movw	r3, #:lower16:err
 1310 0ad4 C0F20003 		movt	r3, #:upper16:err
 1311 0ad8 C3ED007A 		fsts	s15, [r3, #0]
 341:../src/interrupt_defs.cpp **** 			if(err > -20 && err < 20)
 1312              		.loc 1 341 0
 1313 0adc 40F20003 		movw	r3, #:lower16:err
 1314 0ae0 C0F20003 		movt	r3, #:upper16:err
 1315 0ae4 93ED007A 		flds	s14, [r3, #0]
 1316 0ae8 FBEE047A 		fconsts	s15, #180
 1317 0aec B4EEE77A 		fcmpes	s14, s15
 1318 0af0 F1EE10FA 		fmstat
 1319 0af4 1CDD     		ble	.L62
 1320              	.L113:
 1321              		.loc 1 341 0 is_stmt 0 discriminator 1
 1322 0af6 40F20003 		movw	r3, #:lower16:err
 1323 0afa C0F20003 		movt	r3, #:upper16:err
 1324 0afe 93ED007A 		flds	s14, [r3, #0]
 1325 0b02 F3EE047A 		fconsts	s15, #52
 1326 0b06 B4EEE77A 		fcmpes	s14, s15
 1327 0b0a F1EE10FA 		fmstat
 1328 0b0e 0FD5     		bpl	.L62
 1329              	.L114:
 342:../src/interrupt_defs.cpp **** 			{
 343:../src/interrupt_defs.cpp **** 				pwm1_output(0.50f);
 1330              		.loc 1 343 0 is_stmt 1
 1331 0b10 4FF07C50 		mov	r0, #1056964608
 1332 0b14 FFF7FEFF 		bl	_Z11pwm1_outputf
 344:../src/interrupt_defs.cpp **** 				pwm2_output(0.50f);
 1333              		.loc 1 344 0
 1334 0b18 4FF07C50 		mov	r0, #1056964608
 1335 0b1c FFF7FEFF 		bl	_Z11pwm2_outputf
 345:../src/interrupt_defs.cpp **** 				state = ST_FIREFIGHT;
 1336              		.loc 1 345 0
 1337 0b20 40F20003 		movw	r3, #:lower16:state
 1338 0b24 C0F20003 		movt	r3, #:upper16:state
 1339 0b28 4FF00202 		mov	r2, #2
 1340 0b2c 1A60     		str	r2, [r3, #0]
 346:../src/interrupt_defs.cpp **** 				return;
 1341              		.loc 1 346 0
 1342 0b2e E5E3     		b	.L60
 1343              	.L62:
 347:../src/interrupt_defs.cpp **** 			}
 348:../src/interrupt_defs.cpp **** 
 349:../src/interrupt_defs.cpp **** 			diff_err = (float)(err-last_err)*((float)DT_ENCODER/(float)1000);
 1344              		.loc 1 349 0
 1345 0b30 40F20003 		movw	r3, #:lower16:err
 1346 0b34 C0F20003 		movt	r3, #:upper16:err
 1347 0b38 93ED007A 		flds	s14, [r3, #0]
 1348 0b3c 40F20003 		movw	r3, #:lower16:last_err
 1349 0b40 C0F20003 		movt	r3, #:upper16:last_err
 1350 0b44 D3ED007A 		flds	s15, [r3, #0]
 1351 0b48 37EE677A 		fsubs	s14, s14, s15
 1352 0b4c DFEDBA7A 		flds	s15, .L140+32
 1353 0b50 67EE277A 		fmuls	s15, s14, s15
 1354 0b54 40F20003 		movw	r3, #:lower16:diff_err
 1355 0b58 C0F20003 		movt	r3, #:upper16:diff_err
 1356 0b5c C3ED007A 		fsts	s15, [r3, #0]
 350:../src/interrupt_defs.cpp **** 			integral =0;//+= err * 0.04f;
 1357              		.loc 1 350 0
 1358 0b60 40F20003 		movw	r3, #:lower16:integral
 1359 0b64 C0F20003 		movt	r3, #:upper16:integral
 1360 0b68 4FF00002 		mov	r2, #0
 1361 0b6c 1A60     		str	r2, [r3, #0]	@ float
 351:../src/interrupt_defs.cpp **** 			drive_cmd = (((float)(err)/(float)500) + ((float)diff_err/(float)735)); // k_deriv = 944
 1362              		.loc 1 351 0
 1363 0b6e 40F20003 		movw	r3, #:lower16:err
 1364 0b72 C0F20003 		movt	r3, #:upper16:err
 1365 0b76 93ED007A 		flds	s14, [r3, #0]
 1366 0b7a DFEDB07A 		flds	s15, .L140+36
 1367 0b7e 87EE277A 		fdivs	s14, s14, s15
 1368 0b82 40F20003 		movw	r3, #:lower16:diff_err
 1369 0b86 C0F20003 		movt	r3, #:upper16:diff_err
 1370 0b8a D3ED006A 		flds	s13, [r3, #0]
 1371 0b8e DFEDA57A 		flds	s15, .L140+12
 1372 0b92 C6EEA77A 		fdivs	s15, s13, s15
 1373 0b96 77EE277A 		fadds	s15, s14, s15
 1374 0b9a 40F20003 		movw	r3, #:lower16:drive_cmd
 1375 0b9e C0F20003 		movt	r3, #:upper16:drive_cmd
 1376 0ba2 C3ED007A 		fsts	s15, [r3, #0]
 352:../src/interrupt_defs.cpp **** 
 353:../src/interrupt_defs.cpp **** 			rt = 0.0f;
 1377              		.loc 1 353 0
 1378 0ba6 40F20003 		movw	r3, #:lower16:rt
 1379 0baa C0F20003 		movt	r3, #:upper16:rt
 1380 0bae 4FF00002 		mov	r2, #0
 1381 0bb2 1A60     		str	r2, [r3, #0]	@ float
 354:../src/interrupt_defs.cpp **** 			mtr_out = 0.5f;
 1382              		.loc 1 354 0
 1383 0bb4 4FF07C53 		mov	r3, #1056964608
 1384 0bb8 7B60     		str	r3, [r7, #4]	@ float
 355:../src/interrupt_defs.cpp **** 
 356:../src/interrupt_defs.cpp **** 			if(drive_cmd > 0.5)
 1385              		.loc 1 356 0
 1386 0bba 40F20003 		movw	r3, #:lower16:drive_cmd
 1387 0bbe C0F20003 		movt	r3, #:upper16:drive_cmd
 1388 0bc2 93ED007A 		flds	s14, [r3, #0]
 1389 0bc6 F6EE007A 		fconsts	s15, #96
 1390 0bca B4EEE77A 		fcmpes	s14, s15
 1391 0bce F1EE10FA 		fmstat
 1392 0bd2 06DD     		ble	.L66
 1393              	.L115:
 357:../src/interrupt_defs.cpp **** 			{
 358:../src/interrupt_defs.cpp **** 				drive_cmd = 0.5f;
 1394              		.loc 1 358 0
 1395 0bd4 40F20003 		movw	r3, #:lower16:drive_cmd
 1396 0bd8 C0F20003 		movt	r3, #:upper16:drive_cmd
 1397 0bdc 4FF07C52 		mov	r2, #1056964608
 1398 0be0 1A60     		str	r2, [r3, #0]	@ float
 1399              	.L66:
 359:../src/interrupt_defs.cpp **** 			}
 360:../src/interrupt_defs.cpp **** 			if(drive_cmd < -0.5)
 1400              		.loc 1 360 0
 1401 0be2 40F20003 		movw	r3, #:lower16:drive_cmd
 1402 0be6 C0F20003 		movt	r3, #:upper16:drive_cmd
 1403 0bea 93ED007A 		flds	s14, [r3, #0]
 1404 0bee FEEE007A 		fconsts	s15, #224
 1405 0bf2 B4EEE77A 		fcmpes	s14, s15
 1406 0bf6 F1EE10FA 		fmstat
 1407 0bfa 06D5     		bpl	.L68
 1408              	.L116:
 361:../src/interrupt_defs.cpp **** 			{
 362:../src/interrupt_defs.cpp **** 				drive_cmd = -0.5f;
 1409              		.loc 1 362 0
 1410 0bfc 40F20003 		movw	r3, #:lower16:drive_cmd
 1411 0c00 C0F20003 		movt	r3, #:upper16:drive_cmd
 1412 0c04 4FF03F42 		mov	r2, #-1090519040
 1413 0c08 1A60     		str	r2, [r3, #0]	@ float
 1414              	.L68:
 363:../src/interrupt_defs.cpp **** 			}
 364:../src/interrupt_defs.cpp **** 
 365:../src/interrupt_defs.cpp **** 			left = (1-mtr_out) - drive_cmd - rt;
 1415              		.loc 1 365 0
 1416 0c0a B7EE007A 		fconsts	s14, #112
 1417 0c0e D7ED017A 		flds	s15, [r7, #4]
 1418 0c12 37EE677A 		fsubs	s14, s14, s15
 1419 0c16 40F20003 		movw	r3, #:lower16:drive_cmd
 1420 0c1a C0F20003 		movt	r3, #:upper16:drive_cmd
 1421 0c1e D3ED007A 		flds	s15, [r3, #0]
 1422 0c22 37EE677A 		fsubs	s14, s14, s15
 1423 0c26 40F20003 		movw	r3, #:lower16:rt
 1424 0c2a C0F20003 		movt	r3, #:upper16:rt
 1425 0c2e D3ED007A 		flds	s15, [r3, #0]
 1426 0c32 77EE677A 		fsubs	s15, s14, s15
 1427 0c36 40F20003 		movw	r3, #:lower16:left
 1428 0c3a C0F20003 		movt	r3, #:upper16:left
 1429 0c3e C3ED007A 		fsts	s15, [r3, #0]
 366:../src/interrupt_defs.cpp **** 			right = mtr_out - drive_cmd - rt;
 1430              		.loc 1 366 0
 1431 0c42 40F20003 		movw	r3, #:lower16:drive_cmd
 1432 0c46 C0F20003 		movt	r3, #:upper16:drive_cmd
 1433 0c4a D3ED007A 		flds	s15, [r3, #0]
 1434 0c4e 97ED017A 		flds	s14, [r7, #4]
 1435 0c52 37EE677A 		fsubs	s14, s14, s15
 1436 0c56 40F20003 		movw	r3, #:lower16:rt
 1437 0c5a C0F20003 		movt	r3, #:upper16:rt
 1438 0c5e D3ED007A 		flds	s15, [r3, #0]
 1439 0c62 77EE677A 		fsubs	s15, s14, s15
 1440 0c66 40F20003 		movw	r3, #:lower16:right
 1441 0c6a C0F20003 		movt	r3, #:upper16:right
 1442 0c6e C3ED007A 		fsts	s15, [r3, #0]
 367:../src/interrupt_defs.cpp **** 
 368:../src/interrupt_defs.cpp **** 			if(left>1.0)
 1443              		.loc 1 368 0
 1444 0c72 40F20003 		movw	r3, #:lower16:left
 1445 0c76 C0F20003 		movt	r3, #:upper16:left
 1446 0c7a 93ED007A 		flds	s14, [r3, #0]
 1447 0c7e F7EE007A 		fconsts	s15, #112
 1448 0c82 B4EEE77A 		fcmpes	s14, s15
 1449 0c86 F1EE10FA 		fmstat
 1450 0c8a 07DD     		ble	.L134
 1451              	.L117:
 369:../src/interrupt_defs.cpp **** 			{
 370:../src/interrupt_defs.cpp **** 				left=1.0;
 1452              		.loc 1 370 0
 1453 0c8c 40F20003 		movw	r3, #:lower16:left
 1454 0c90 C0F20003 		movt	r3, #:upper16:left
 1455 0c94 4FF07E52 		mov	r2, #1065353216
 1456 0c98 1A60     		str	r2, [r3, #0]	@ float
 1457 0c9a 11E0     		b	.L72
 1458              	.L134:
 371:../src/interrupt_defs.cpp **** 			}
 372:../src/interrupt_defs.cpp **** 			else if(left<0)
 1459              		.loc 1 372 0
 1460 0c9c 40F20003 		movw	r3, #:lower16:left
 1461 0ca0 C0F20003 		movt	r3, #:upper16:left
 1462 0ca4 D3ED007A 		flds	s15, [r3, #0]
 1463 0ca8 F5EEC07A 		fcmpezs	s15
 1464 0cac F1EE10FA 		fmstat
 1465 0cb0 06D5     		bpl	.L72
 1466              	.L118:
 373:../src/interrupt_defs.cpp **** 			{
 374:../src/interrupt_defs.cpp **** 				left=0;//-1.0;
 1467              		.loc 1 374 0
 1468 0cb2 40F20003 		movw	r3, #:lower16:left
 1469 0cb6 C0F20003 		movt	r3, #:upper16:left
 1470 0cba 4FF00002 		mov	r2, #0
 1471 0cbe 1A60     		str	r2, [r3, #0]	@ float
 1472              	.L72:
 375:../src/interrupt_defs.cpp **** 			}
 376:../src/interrupt_defs.cpp **** 
 377:../src/interrupt_defs.cpp **** 			if(right>1.0f)
 1473              		.loc 1 377 0
 1474 0cc0 40F20003 		movw	r3, #:lower16:right
 1475 0cc4 C0F20003 		movt	r3, #:upper16:right
 1476 0cc8 93ED007A 		flds	s14, [r3, #0]
 1477 0ccc F7EE007A 		fconsts	s15, #112
 1478 0cd0 B4EEE77A 		fcmpes	s14, s15
 1479 0cd4 F1EE10FA 		fmstat
 1480 0cd8 07DD     		ble	.L135
 1481              	.L119:
 378:../src/interrupt_defs.cpp **** 			{
 379:../src/interrupt_defs.cpp **** 				right=1.0f;
 1482              		.loc 1 379 0
 1483 0cda 40F20003 		movw	r3, #:lower16:right
 1484 0cde C0F20003 		movt	r3, #:upper16:right
 1485 0ce2 4FF07E52 		mov	r2, #1065353216
 1486 0ce6 1A60     		str	r2, [r3, #0]	@ float
 1487 0ce8 D9E2     		b	.L76
 1488              	.L135:
 380:../src/interrupt_defs.cpp **** 			}
 381:../src/interrupt_defs.cpp **** 			else if(right<0)
 1489              		.loc 1 381 0
 1490 0cea 40F20003 		movw	r3, #:lower16:right
 1491 0cee C0F20003 		movt	r3, #:upper16:right
 1492 0cf2 D3ED007A 		flds	s15, [r3, #0]
 1493 0cf6 F5EEC07A 		fcmpezs	s15
 1494 0cfa F1EE10FA 		fmstat
 1495 0cfe 40F1CE82 		bpl	.L76
 1496              	.L120:
 382:../src/interrupt_defs.cpp **** 			{
 383:../src/interrupt_defs.cpp **** 				right=0;
 1497              		.loc 1 383 0
 1498 0d02 40F20003 		movw	r3, #:lower16:right
 1499 0d06 C0F20003 		movt	r3, #:upper16:right
 1500 0d0a 4FF00002 		mov	r2, #0
 1501 0d0e 1A60     		str	r2, [r3, #0]	@ float
 1502 0d10 C5E2     		b	.L76
 1503              	.L61:
 384:../src/interrupt_defs.cpp **** 			}
 385:../src/interrupt_defs.cpp **** 		}
 386:../src/interrupt_defs.cpp **** 		else if(state == ST_WANDER)
 1504              		.loc 1 386 0
 1505 0d12 40F20003 		movw	r3, #:lower16:state
 1506 0d16 C0F20003 		movt	r3, #:upper16:state
 1507 0d1a 1B68     		ldr	r3, [r3, #0]
 1508 0d1c 002B     		cmp	r3, #0
 1509 0d1e 40F06181 		bne	.L78
 387:../src/interrupt_defs.cpp **** 		{
 388:../src/interrupt_defs.cpp **** 			err = ((float)(0.55)*(float)((int)adc2_data[0] - 2200)) + ((float)(0.45)*(float)((int)adcData[1]
 1510              		.loc 1 388 0
 1511 0d22 40F20003 		movw	r3, #:lower16:adc2_data
 1512 0d26 C0F20003 		movt	r3, #:upper16:adc2_data
 1513 0d2a 1B68     		ldr	r3, [r3, #0]
 1514 0d2c A3F69803 		subw	r3, r3, #2200
 1515 0d30 07EE903A 		fmsr	s15, r3	@ int
 1516 0d34 B8EEE77A 		fsitos	s14, s15
 1517 0d38 DFED3B7A 		flds	s15, .L140+16
 1518 0d3c 27EE277A 		fmuls	s14, s14, s15
 1519 0d40 40F20003 		movw	r3, #:lower16:adcData
 1520 0d44 C0F20003 		movt	r3, #:upper16:adcData
 1521 0d48 5B68     		ldr	r3, [r3, #4]
 1522 0d4a A3F19603 		sub	r3, r3, #150
 1523 0d4e 07EE903A 		fmsr	s15, r3	@ int
 1524 0d52 F8EEE76A 		fsitos	s13, s15
 1525 0d56 DFED357A 		flds	s15, .L140+20
 1526 0d5a 66EEA77A 		fmuls	s15, s13, s15
 1527 0d5e 77EE277A 		fadds	s15, s14, s15
 1528 0d62 40F20003 		movw	r3, #:lower16:err
 1529 0d66 C0F20003 		movt	r3, #:upper16:err
 1530 0d6a C3ED007A 		fsts	s15, [r3, #0]
 389:../src/interrupt_defs.cpp **** 
 390:../src/interrupt_defs.cpp **** 		diff_err = (float)(err-last_err)*((float)DT_ENCODER/(float)1000);
 1531              		.loc 1 390 0
 1532 0d6e 40F20003 		movw	r3, #:lower16:err
 1533 0d72 C0F20003 		movt	r3, #:upper16:err
 1534 0d76 93ED007A 		flds	s14, [r3, #0]
 1535 0d7a 40F20003 		movw	r3, #:lower16:last_err
 1536 0d7e C0F20003 		movt	r3, #:upper16:last_err
 1537 0d82 D3ED007A 		flds	s15, [r3, #0]
 1538 0d86 37EE677A 		fsubs	s14, s14, s15
 1539 0d8a DFED2B7A 		flds	s15, .L140+32
 1540 0d8e 67EE277A 		fmuls	s15, s14, s15
 1541 0d92 40F20003 		movw	r3, #:lower16:diff_err
 1542 0d96 C0F20003 		movt	r3, #:upper16:diff_err
 1543 0d9a C3ED007A 		fsts	s15, [r3, #0]
 391:../src/interrupt_defs.cpp **** 		drive_cmd = (((float)(err)/(float)2500) + ((float)diff_err/(float)3720)); //1100=diff term
 1544              		.loc 1 391 0
 1545 0d9e 40F20003 		movw	r3, #:lower16:err
 1546 0da2 C0F20003 		movt	r3, #:upper16:err
 1547 0da6 93ED007A 		flds	s14, [r3, #0]
 1548 0daa DFED217A 		flds	s15, .L140+24
 1549 0dae 87EE277A 		fdivs	s14, s14, s15
 1550 0db2 40F20003 		movw	r3, #:lower16:diff_err
 1551 0db6 C0F20003 		movt	r3, #:upper16:diff_err
 1552 0dba D3ED006A 		flds	s13, [r3, #0]
 1553 0dbe DFED1D7A 		flds	s15, .L140+28
 1554 0dc2 C6EEA77A 		fdivs	s15, s13, s15
 1555 0dc6 77EE277A 		fadds	s15, s14, s15
 1556 0dca 40F20003 		movw	r3, #:lower16:drive_cmd
 1557 0dce C0F20003 		movt	r3, #:upper16:drive_cmd
 1558 0dd2 C3ED007A 		fsts	s15, [r3, #0]
 392:../src/interrupt_defs.cpp **** 
 393:../src/interrupt_defs.cpp **** 		if(d_front < 0.690 || adc2_data[3] > 1870)//0.69
 1559              		.loc 1 393 0
 1560 0dd6 40F20003 		movw	r3, #:lower16:d_front
 1561 0dda C0F20003 		movt	r3, #:upper16:d_front
 1562 0dde 1B68     		ldr	r3, [r3, #0]	@ float
 1563 0de0 1846     		mov	r0, r3	@ float
 1564 0de2 FFF7FEFF 		bl	__aeabi_f2d
 1565 0de6 0246     		mov	r2, r0
 1566 0de8 0B46     		mov	r3, r1
 1567 0dea 1046     		mov	r0, r2
 1568 0dec 1946     		mov	r1, r3
 1569 0dee 0AA3     		adr	r3, .L140
 1570 0df0 D3E90023 		ldrd	r2, [r3]
 1571 0df4 FFF7FEFF 		bl	__aeabi_dcmplt
 1572 0df8 0346     		mov	r3, r0
 1573 0dfa 002B     		cmp	r3, #0
 1574 0dfc 08D1     		bne	.L79
 1575              		.loc 1 393 0 is_stmt 0 discriminator 2
 1576 0dfe 40F20003 		movw	r3, #:lower16:adc2_data
 1577 0e02 C0F20003 		movt	r3, #:upper16:adc2_data
 1578 0e06 DA68     		ldr	r2, [r3, #12]
 1579 0e08 40F24E73 		movw	r3, #1870
 1580 0e0c 9A42     		cmp	r2, r3
 1581 0e0e 19D9     		bls	.L80
 1582              	.L79:
 1583              		.loc 1 393 0 discriminator 1
 1584 0e10 4FF00103 		mov	r3, #1
 1585 0e14 18E0     		b	.L81
 1586              	.L141:
 1587 0e16 00BF     		.align	3
 1588              	.L140:
 1589 0e18 14AE47E1 		.word	-515396076
 1590 0e1c 7A14E63F 		.word	1072043130
 1591 0e20 821C943A 		.word	982785154
 1592 0e24 00C03744 		.word	1144504320
 1593 0e28 CDCC0C3F 		.word	1057803469
 1594 0e2c 6666E63E 		.word	1055286886
 1595 0e30 00401C45 		.word	1159479296
 1596 0e34 00806845 		.word	1164476416
 1597 0e38 CDCCCC3C 		.word	1020054733
 1598 0e3c 0000FA43 		.word	1140457472
 1599 0e40 00006C44 		.word	1147928576
 1600              	.L80:
 1601              		.loc 1 393 0 discriminator 3
 1602 0e44 4FF00003 		mov	r3, #0
 1603              	.L81:
 1604              		.loc 1 393 0 discriminator 4
 1605 0e48 002B     		cmp	r3, #0
 1606 0e4a 13D0     		beq	.L82
 394:../src/interrupt_defs.cpp **** 		{
 395:../src/interrupt_defs.cpp **** 			rt = 0.5f;
 1607              		.loc 1 395 0 is_stmt 1
 1608 0e4c 40F20003 		movw	r3, #:lower16:rt
 1609 0e50 C0F20003 		movt	r3, #:upper16:rt
 1610 0e54 4FF07C52 		mov	r2, #1056964608
 1611 0e58 1A60     		str	r2, [r3, #0]	@ float
 396:../src/interrupt_defs.cpp **** 			mtr_out = 0.3f;
 1612              		.loc 1 396 0
 1613 0e5a 49F69A13 		movw	r3, #39322
 1614 0e5e C3F69963 		movt	r3, 16025
 1615 0e62 7B60     		str	r3, [r7, #4]	@ float
 397:../src/interrupt_defs.cpp **** 			drive_cmd = 0;
 1616              		.loc 1 397 0
 1617 0e64 40F20003 		movw	r3, #:lower16:drive_cmd
 1618 0e68 C0F20003 		movt	r3, #:upper16:drive_cmd
 1619 0e6c 4FF00002 		mov	r2, #0
 1620 0e70 1A60     		str	r2, [r3, #0]	@ float
 1621 0e72 0BE0     		b	.L83
 1622              	.L82:
 398:../src/interrupt_defs.cpp **** 		}
 399:../src/interrupt_defs.cpp **** 		else
 400:../src/interrupt_defs.cpp **** 		{
 401:../src/interrupt_defs.cpp **** 			rt = 0.0f;
 1623              		.loc 1 401 0
 1624 0e74 40F20003 		movw	r3, #:lower16:rt
 1625 0e78 C0F20003 		movt	r3, #:upper16:rt
 1626 0e7c 4FF00002 		mov	r2, #0
 1627 0e80 1A60     		str	r2, [r3, #0]	@ float
 402:../src/interrupt_defs.cpp **** 			mtr_out = 0.85f;
 1628              		.loc 1 402 0
 1629 0e82 49F69A13 		movw	r3, #39322
 1630 0e86 C3F65973 		movt	r3, 16217
 1631 0e8a 7B60     		str	r3, [r7, #4]	@ float
 1632              	.L83:
 403:../src/interrupt_defs.cpp **** 		}
 404:../src/interrupt_defs.cpp **** 
 405:../src/interrupt_defs.cpp **** 		if(drive_cmd > 0.5)
 1633              		.loc 1 405 0
 1634 0e8c 40F20003 		movw	r3, #:lower16:drive_cmd
 1635 0e90 C0F20003 		movt	r3, #:upper16:drive_cmd
 1636 0e94 93ED007A 		flds	s14, [r3, #0]
 1637 0e98 F6EE007A 		fconsts	s15, #96
 1638 0e9c B4EEE77A 		fcmpes	s14, s15
 1639 0ea0 F1EE10FA 		fmstat
 1640 0ea4 06DD     		ble	.L84
 1641              	.L121:
 406:../src/interrupt_defs.cpp **** 		{
 407:../src/interrupt_defs.cpp **** 			drive_cmd = 0.5f;
 1642              		.loc 1 407 0
 1643 0ea6 40F20003 		movw	r3, #:lower16:drive_cmd
 1644 0eaa C0F20003 		movt	r3, #:upper16:drive_cmd
 1645 0eae 4FF07C52 		mov	r2, #1056964608
 1646 0eb2 1A60     		str	r2, [r3, #0]	@ float
 1647              	.L84:
 408:../src/interrupt_defs.cpp **** 		}
 409:../src/interrupt_defs.cpp **** 		if(drive_cmd < -0.5)
 1648              		.loc 1 409 0
 1649 0eb4 40F20003 		movw	r3, #:lower16:drive_cmd
 1650 0eb8 C0F20003 		movt	r3, #:upper16:drive_cmd
 1651 0ebc 93ED007A 		flds	s14, [r3, #0]
 1652 0ec0 FEEE007A 		fconsts	s15, #224
 1653 0ec4 B4EEE77A 		fcmpes	s14, s15
 1654 0ec8 F1EE10FA 		fmstat
 1655 0ecc 06D5     		bpl	.L86
 1656              	.L122:
 410:../src/interrupt_defs.cpp **** 		{
 411:../src/interrupt_defs.cpp **** 			drive_cmd = -0.5f;
 1657              		.loc 1 411 0
 1658 0ece 40F20003 		movw	r3, #:lower16:drive_cmd
 1659 0ed2 C0F20003 		movt	r3, #:upper16:drive_cmd
 1660 0ed6 4FF03F42 		mov	r2, #-1090519040
 1661 0eda 1A60     		str	r2, [r3, #0]	@ float
 1662              	.L86:
 412:../src/interrupt_defs.cpp **** 		}
 413:../src/interrupt_defs.cpp **** 
 414:../src/interrupt_defs.cpp **** 		left = (1-mtr_out) - drive_cmd - rt;
 1663              		.loc 1 414 0
 1664 0edc B7EE007A 		fconsts	s14, #112
 1665 0ee0 D7ED017A 		flds	s15, [r7, #4]
 1666 0ee4 37EE677A 		fsubs	s14, s14, s15
 1667 0ee8 40F20003 		movw	r3, #:lower16:drive_cmd
 1668 0eec C0F20003 		movt	r3, #:upper16:drive_cmd
 1669 0ef0 D3ED007A 		flds	s15, [r3, #0]
 1670 0ef4 37EE677A 		fsubs	s14, s14, s15
 1671 0ef8 40F20003 		movw	r3, #:lower16:rt
 1672 0efc C0F20003 		movt	r3, #:upper16:rt
 1673 0f00 D3ED007A 		flds	s15, [r3, #0]
 1674 0f04 77EE677A 		fsubs	s15, s14, s15
 1675 0f08 40F20003 		movw	r3, #:lower16:left
 1676 0f0c C0F20003 		movt	r3, #:upper16:left
 1677 0f10 C3ED007A 		fsts	s15, [r3, #0]
 415:../src/interrupt_defs.cpp **** 		right = mtr_out - drive_cmd - rt;
 1678              		.loc 1 415 0
 1679 0f14 40F20003 		movw	r3, #:lower16:drive_cmd
 1680 0f18 C0F20003 		movt	r3, #:upper16:drive_cmd
 1681 0f1c D3ED007A 		flds	s15, [r3, #0]
 1682 0f20 97ED017A 		flds	s14, [r7, #4]
 1683 0f24 37EE677A 		fsubs	s14, s14, s15
 1684 0f28 40F20003 		movw	r3, #:lower16:rt
 1685 0f2c C0F20003 		movt	r3, #:upper16:rt
 1686 0f30 D3ED007A 		flds	s15, [r3, #0]
 1687 0f34 77EE677A 		fsubs	s15, s14, s15
 1688 0f38 40F20003 		movw	r3, #:lower16:right
 1689 0f3c C0F20003 		movt	r3, #:upper16:right
 1690 0f40 C3ED007A 		fsts	s15, [r3, #0]
 416:../src/interrupt_defs.cpp **** 
 417:../src/interrupt_defs.cpp **** 		if(left>1.0)
 1691              		.loc 1 417 0
 1692 0f44 40F20003 		movw	r3, #:lower16:left
 1693 0f48 C0F20003 		movt	r3, #:upper16:left
 1694 0f4c 93ED007A 		flds	s14, [r3, #0]
 1695 0f50 F7EE007A 		fconsts	s15, #112
 1696 0f54 B4EEE77A 		fcmpes	s14, s15
 1697 0f58 F1EE10FA 		fmstat
 1698 0f5c 07DD     		ble	.L136
 1699              	.L123:
 418:../src/interrupt_defs.cpp **** 		{
 419:../src/interrupt_defs.cpp **** 			left=1.0;
 1700              		.loc 1 419 0
 1701 0f5e 40F20003 		movw	r3, #:lower16:left
 1702 0f62 C0F20003 		movt	r3, #:upper16:left
 1703 0f66 4FF07E52 		mov	r2, #1065353216
 1704 0f6a 1A60     		str	r2, [r3, #0]	@ float
 1705 0f6c 11E0     		b	.L90
 1706              	.L136:
 420:../src/interrupt_defs.cpp **** 		}
 421:../src/interrupt_defs.cpp **** 		else if(left<0)
 1707              		.loc 1 421 0
 1708 0f6e 40F20003 		movw	r3, #:lower16:left
 1709 0f72 C0F20003 		movt	r3, #:upper16:left
 1710 0f76 D3ED007A 		flds	s15, [r3, #0]
 1711 0f7a F5EEC07A 		fcmpezs	s15
 1712 0f7e F1EE10FA 		fmstat
 1713 0f82 06D5     		bpl	.L90
 1714              	.L124:
 422:../src/interrupt_defs.cpp **** 		{
 423:../src/interrupt_defs.cpp **** 			left=0;//-1.0;
 1715              		.loc 1 423 0
 1716 0f84 40F20003 		movw	r3, #:lower16:left
 1717 0f88 C0F20003 		movt	r3, #:upper16:left
 1718 0f8c 4FF00002 		mov	r2, #0
 1719 0f90 1A60     		str	r2, [r3, #0]	@ float
 1720              	.L90:
 424:../src/interrupt_defs.cpp **** 		}
 425:../src/interrupt_defs.cpp **** 
 426:../src/interrupt_defs.cpp **** 		if(right>1.0f)
 1721              		.loc 1 426 0
 1722 0f92 40F20003 		movw	r3, #:lower16:right
 1723 0f96 C0F20003 		movt	r3, #:upper16:right
 1724 0f9a 93ED007A 		flds	s14, [r3, #0]
 1725 0f9e F7EE007A 		fconsts	s15, #112
 1726 0fa2 B4EEE77A 		fcmpes	s14, s15
 1727 0fa6 F1EE10FA 		fmstat
 1728 0faa 07DD     		ble	.L137
 1729              	.L125:
 427:../src/interrupt_defs.cpp **** 		{
 428:../src/interrupt_defs.cpp **** 			right=1.0f;
 1730              		.loc 1 428 0
 1731 0fac 40F20003 		movw	r3, #:lower16:right
 1732 0fb0 C0F20003 		movt	r3, #:upper16:right
 1733 0fb4 4FF07E52 		mov	r2, #1065353216
 1734 0fb8 1A60     		str	r2, [r3, #0]	@ float
 1735 0fba 70E1     		b	.L76
 1736              	.L137:
 429:../src/interrupt_defs.cpp **** 		}
 430:../src/interrupt_defs.cpp **** 		else if(right<0)
 1737              		.loc 1 430 0
 1738 0fbc 40F20003 		movw	r3, #:lower16:right
 1739 0fc0 C0F20003 		movt	r3, #:upper16:right
 1740 0fc4 D3ED007A 		flds	s15, [r3, #0]
 1741 0fc8 F5EEC07A 		fcmpezs	s15
 1742 0fcc F1EE10FA 		fmstat
 1743 0fd0 40F16581 		bpl	.L76
 1744              	.L126:
 431:../src/interrupt_defs.cpp **** 		{
 432:../src/interrupt_defs.cpp **** 			right=0;
 1745              		.loc 1 432 0
 1746 0fd4 40F20003 		movw	r3, #:lower16:right
 1747 0fd8 C0F20003 		movt	r3, #:upper16:right
 1748 0fdc 4FF00002 		mov	r2, #0
 1749 0fe0 1A60     		str	r2, [r3, #0]	@ float
 1750 0fe2 5CE1     		b	.L76
 1751              	.L78:
 433:../src/interrupt_defs.cpp **** 		}
 434:../src/interrupt_defs.cpp **** 		}
 435:../src/interrupt_defs.cpp **** 		else if(state == ST_CANDLE_BLOWOUT)
 1752              		.loc 1 435 0
 1753 0fe4 40F20003 		movw	r3, #:lower16:state
 1754 0fe8 C0F20003 		movt	r3, #:upper16:state
 1755 0fec 1B68     		ldr	r3, [r3, #0]
 1756 0fee 032B     		cmp	r3, #3
 1757 0ff0 40F05581 		bne	.L76
 436:../src/interrupt_defs.cpp **** 		{
 437:../src/interrupt_defs.cpp **** 			err = (float)(1.0) * (float)((int)adcData[0] - (int)adc2_data[2]);
 1758              		.loc 1 437 0
 1759 0ff4 40F20003 		movw	r3, #:lower16:adcData
 1760 0ff8 C0F20003 		movt	r3, #:upper16:adcData
 1761 0ffc 1B68     		ldr	r3, [r3, #0]
 1762 0ffe 1A46     		mov	r2, r3
 1763 1000 40F20003 		movw	r3, #:lower16:adc2_data
 1764 1004 C0F20003 		movt	r3, #:upper16:adc2_data
 1765 1008 9B68     		ldr	r3, [r3, #8]
 1766 100a D31A     		subs	r3, r2, r3
 1767 100c 07EE103A 		fmsr	s14, r3	@ int
 1768 1010 F8EEC77A 		fsitos	s15, s14
 1769 1014 40F20003 		movw	r3, #:lower16:err
 1770 1018 C0F20003 		movt	r3, #:upper16:err
 1771 101c C3ED007A 		fsts	s15, [r3, #0]
 438:../src/interrupt_defs.cpp **** 
 439:../src/interrupt_defs.cpp **** 			diff_err = (float)(err-last_err)*((float)DT_ENCODER/(float)1000);
 1772              		.loc 1 439 0
 1773 1020 40F20003 		movw	r3, #:lower16:err
 1774 1024 C0F20003 		movt	r3, #:upper16:err
 1775 1028 93ED007A 		flds	s14, [r3, #0]
 1776 102c 40F20003 		movw	r3, #:lower16:last_err
 1777 1030 C0F20003 		movt	r3, #:upper16:last_err
 1778 1034 D3ED007A 		flds	s15, [r3, #0]
 1779 1038 37EE677A 		fsubs	s14, s14, s15
 1780 103c 5FED827A 		flds	s15, .L140+32
 1781 1040 67EE277A 		fmuls	s15, s14, s15
 1782 1044 40F20003 		movw	r3, #:lower16:diff_err
 1783 1048 C0F20003 		movt	r3, #:upper16:diff_err
 1784 104c C3ED007A 		fsts	s15, [r3, #0]
 440:../src/interrupt_defs.cpp **** 			integral =0;//+= err * 0.04f;
 1785              		.loc 1 440 0
 1786 1050 40F20003 		movw	r3, #:lower16:integral
 1787 1054 C0F20003 		movt	r3, #:upper16:integral
 1788 1058 4FF00002 		mov	r2, #0
 1789 105c 1A60     		str	r2, [r3, #0]	@ float
 441:../src/interrupt_defs.cpp **** 			drive_cmd = (((float)(err)/(float)500) + ((float)diff_err/(float)944));
 1790              		.loc 1 441 0
 1791 105e 40F20003 		movw	r3, #:lower16:err
 1792 1062 C0F20003 		movt	r3, #:upper16:err
 1793 1066 93ED007A 		flds	s14, [r3, #0]
 1794 106a 5FED8C7A 		flds	s15, .L140+36
 1795 106e 87EE277A 		fdivs	s14, s14, s15
 1796 1072 40F20003 		movw	r3, #:lower16:diff_err
 1797 1076 C0F20003 		movt	r3, #:upper16:diff_err
 1798 107a D3ED006A 		flds	s13, [r3, #0]
 1799 107e 5FED907A 		flds	s15, .L140+40
 1800 1082 C6EEA77A 		fdivs	s15, s13, s15
 1801 1086 77EE277A 		fadds	s15, s14, s15
 1802 108a 40F20003 		movw	r3, #:lower16:drive_cmd
 1803 108e C0F20003 		movt	r3, #:upper16:drive_cmd
 1804 1092 C3ED007A 		fsts	s15, [r3, #0]
 442:../src/interrupt_defs.cpp **** 
 443:../src/interrupt_defs.cpp **** 			rt = 0.0f;
 1805              		.loc 1 443 0
 1806 1096 40F20003 		movw	r3, #:lower16:rt
 1807 109a C0F20003 		movt	r3, #:upper16:rt
 1808 109e 4FF00002 		mov	r2, #0
 1809 10a2 1A60     		str	r2, [r3, #0]	@ float
 444:../src/interrupt_defs.cpp **** 			mtr_out = 0.5f;
 1810              		.loc 1 444 0
 1811 10a4 4FF07C53 		mov	r3, #1056964608
 1812 10a8 7B60     		str	r3, [r7, #4]	@ float
 445:../src/interrupt_defs.cpp **** 
 446:../src/interrupt_defs.cpp **** 			if(drive_cmd > 0.5)
 1813              		.loc 1 446 0
 1814 10aa 40F20003 		movw	r3, #:lower16:drive_cmd
 1815 10ae C0F20003 		movt	r3, #:upper16:drive_cmd
 1816 10b2 93ED007A 		flds	s14, [r3, #0]
 1817 10b6 F6EE007A 		fconsts	s15, #96
 1818 10ba B4EEE77A 		fcmpes	s14, s15
 1819 10be F1EE10FA 		fmstat
 1820 10c2 06DD     		ble	.L95
 1821              	.L127:
 447:../src/interrupt_defs.cpp **** 			{
 448:../src/interrupt_defs.cpp **** 				drive_cmd = 0.5f;
 1822              		.loc 1 448 0
 1823 10c4 40F20003 		movw	r3, #:lower16:drive_cmd
 1824 10c8 C0F20003 		movt	r3, #:upper16:drive_cmd
 1825 10cc 4FF07C52 		mov	r2, #1056964608
 1826 10d0 1A60     		str	r2, [r3, #0]	@ float
 1827              	.L95:
 449:../src/interrupt_defs.cpp **** 			}
 450:../src/interrupt_defs.cpp **** 			if(drive_cmd < -0.5)
 1828              		.loc 1 450 0
 1829 10d2 40F20003 		movw	r3, #:lower16:drive_cmd
 1830 10d6 C0F20003 		movt	r3, #:upper16:drive_cmd
 1831 10da 93ED007A 		flds	s14, [r3, #0]
 1832 10de FEEE007A 		fconsts	s15, #224
 1833 10e2 B4EEE77A 		fcmpes	s14, s15
 1834 10e6 F1EE10FA 		fmstat
 1835 10ea 06D5     		bpl	.L97
 1836              	.L128:
 451:../src/interrupt_defs.cpp **** 			{
 452:../src/interrupt_defs.cpp **** 				drive_cmd = -0.5f;
 1837              		.loc 1 452 0
 1838 10ec 40F20003 		movw	r3, #:lower16:drive_cmd
 1839 10f0 C0F20003 		movt	r3, #:upper16:drive_cmd
 1840 10f4 4FF03F42 		mov	r2, #-1090519040
 1841 10f8 1A60     		str	r2, [r3, #0]	@ float
 1842              	.L97:
 453:../src/interrupt_defs.cpp **** 			}
 454:../src/interrupt_defs.cpp **** 
 455:../src/interrupt_defs.cpp **** 			left = (1-mtr_out) - drive_cmd - rt;
 1843              		.loc 1 455 0
 1844 10fa B7EE007A 		fconsts	s14, #112
 1845 10fe D7ED017A 		flds	s15, [r7, #4]
 1846 1102 37EE677A 		fsubs	s14, s14, s15
 1847 1106 40F20003 		movw	r3, #:lower16:drive_cmd
 1848 110a C0F20003 		movt	r3, #:upper16:drive_cmd
 1849 110e D3ED007A 		flds	s15, [r3, #0]
 1850 1112 37EE677A 		fsubs	s14, s14, s15
 1851 1116 40F20003 		movw	r3, #:lower16:rt
 1852 111a C0F20003 		movt	r3, #:upper16:rt
 1853 111e D3ED007A 		flds	s15, [r3, #0]
 1854 1122 77EE677A 		fsubs	s15, s14, s15
 1855 1126 40F20003 		movw	r3, #:lower16:left
 1856 112a C0F20003 		movt	r3, #:upper16:left
 1857 112e C3ED007A 		fsts	s15, [r3, #0]
 456:../src/interrupt_defs.cpp **** 			right = mtr_out - drive_cmd - rt;
 1858              		.loc 1 456 0
 1859 1132 40F20003 		movw	r3, #:lower16:drive_cmd
 1860 1136 C0F20003 		movt	r3, #:upper16:drive_cmd
 1861 113a D3ED007A 		flds	s15, [r3, #0]
 1862 113e 97ED017A 		flds	s14, [r7, #4]
 1863 1142 37EE677A 		fsubs	s14, s14, s15
 1864 1146 40F20003 		movw	r3, #:lower16:rt
 1865 114a C0F20003 		movt	r3, #:upper16:rt
 1866 114e D3ED007A 		flds	s15, [r3, #0]
 1867 1152 77EE677A 		fsubs	s15, s14, s15
 1868 1156 40F20003 		movw	r3, #:lower16:right
 1869 115a C0F20003 		movt	r3, #:upper16:right
 1870 115e C3ED007A 		fsts	s15, [r3, #0]
 457:../src/interrupt_defs.cpp **** 
 458:../src/interrupt_defs.cpp **** 			if(left>1.0)
 1871              		.loc 1 458 0
 1872 1162 40F20003 		movw	r3, #:lower16:left
 1873 1166 C0F20003 		movt	r3, #:upper16:left
 1874 116a 93ED007A 		flds	s14, [r3, #0]
 1875 116e F7EE007A 		fconsts	s15, #112
 1876 1172 B4EEE77A 		fcmpes	s14, s15
 1877 1176 F1EE10FA 		fmstat
 1878 117a 07DD     		ble	.L138
 1879              	.L129:
 459:../src/interrupt_defs.cpp **** 			{
 460:../src/interrupt_defs.cpp **** 				left=1.0;
 1880              		.loc 1 460 0
 1881 117c 40F20003 		movw	r3, #:lower16:left
 1882 1180 C0F20003 		movt	r3, #:upper16:left
 1883 1184 4FF07E52 		mov	r2, #1065353216
 1884 1188 1A60     		str	r2, [r3, #0]	@ float
 1885 118a 11E0     		b	.L101
 1886              	.L138:
 461:../src/interrupt_defs.cpp **** 			}
 462:../src/interrupt_defs.cpp **** 			else if(left<0)
 1887              		.loc 1 462 0
 1888 118c 40F20003 		movw	r3, #:lower16:left
 1889 1190 C0F20003 		movt	r3, #:upper16:left
 1890 1194 D3ED007A 		flds	s15, [r3, #0]
 1891 1198 F5EEC07A 		fcmpezs	s15
 1892 119c F1EE10FA 		fmstat
 1893 11a0 06D5     		bpl	.L101
 1894              	.L130:
 463:../src/interrupt_defs.cpp **** 			{
 464:../src/interrupt_defs.cpp **** 				left=0;//-1.0;
 1895              		.loc 1 464 0
 1896 11a2 40F20003 		movw	r3, #:lower16:left
 1897 11a6 C0F20003 		movt	r3, #:upper16:left
 1898 11aa 4FF00002 		mov	r2, #0
 1899 11ae 1A60     		str	r2, [r3, #0]	@ float
 1900              	.L101:
 465:../src/interrupt_defs.cpp **** 			}
 466:../src/interrupt_defs.cpp **** 
 467:../src/interrupt_defs.cpp **** 			if(right>1.0f)
 1901              		.loc 1 467 0
 1902 11b0 40F20003 		movw	r3, #:lower16:right
 1903 11b4 C0F20003 		movt	r3, #:upper16:right
 1904 11b8 93ED007A 		flds	s14, [r3, #0]
 1905 11bc F7EE007A 		fconsts	s15, #112
 1906 11c0 B4EEE77A 		fcmpes	s14, s15
 1907 11c4 F1EE10FA 		fmstat
 1908 11c8 07DD     		ble	.L139
 1909              	.L131:
 468:../src/interrupt_defs.cpp **** 			{
 469:../src/interrupt_defs.cpp **** 				right=1.0f;
 1910              		.loc 1 469 0
 1911 11ca 40F20003 		movw	r3, #:lower16:right
 1912 11ce C0F20003 		movt	r3, #:upper16:right
 1913 11d2 4FF07E52 		mov	r2, #1065353216
 1914 11d6 1A60     		str	r2, [r3, #0]	@ float
 1915 11d8 11E0     		b	.L105
 1916              	.L139:
 470:../src/interrupt_defs.cpp **** 			}
 471:../src/interrupt_defs.cpp **** 			else if(right<0)
 1917              		.loc 1 471 0
 1918 11da 40F20003 		movw	r3, #:lower16:right
 1919 11de C0F20003 		movt	r3, #:upper16:right
 1920 11e2 D3ED007A 		flds	s15, [r3, #0]
 1921 11e6 F5EEC07A 		fcmpezs	s15
 1922 11ea F1EE10FA 		fmstat
 1923 11ee 06D5     		bpl	.L105
 1924              	.L132:
 472:../src/interrupt_defs.cpp **** 			{
 473:../src/interrupt_defs.cpp **** 				right=0;
 1925              		.loc 1 473 0
 1926 11f0 40F20003 		movw	r3, #:lower16:right
 1927 11f4 C0F20003 		movt	r3, #:upper16:right
 1928 11f8 4FF00002 		mov	r2, #0
 1929 11fc 1A60     		str	r2, [r3, #0]	@ float
 1930              	.L105:
 474:../src/interrupt_defs.cpp **** 			}
 475:../src/interrupt_defs.cpp **** 
 476:../src/interrupt_defs.cpp **** 			if(match_time_counter - t_firefight_start > FIREFIGHT_TIMEOUT)
 1931              		.loc 1 476 0
 1932 11fe 40F20003 		movw	r3, #:lower16:match_time_counter
 1933 1202 C0F20003 		movt	r3, #:upper16:match_time_counter
 1934 1206 93ED007A 		flds	s14, [r3, #0]
 1935 120a 40F20003 		movw	r3, #:lower16:t_firefight_start
 1936 120e C0F20003 		movt	r3, #:upper16:t_firefight_start
 1937 1212 D3ED007A 		flds	s15, [r3, #0]
 1938 1216 37EE677A 		fsubs	s14, s14, s15
 1939 121a F2EE047A 		fconsts	s15, #36
 1940 121e B4EEE77A 		fcmpes	s14, s15
 1941 1222 F1EE10FA 		fmstat
 1942 1226 3ADD     		ble	.L76
 1943              	.L133:
 477:../src/interrupt_defs.cpp **** 			{
 478:../src/interrupt_defs.cpp **** 				pwm3_output(0.05f);
 1944              		.loc 1 478 0
 1945 1228 4CF6CD40 		movw	r0, #52429
 1946 122c C3F64C50 		movt	r0, 15692
 1947 1230 FFF7FEFF 		bl	_Z11pwm3_outputf
 479:../src/interrupt_defs.cpp **** 				if((adc2_data[2] > UV_THRESHOLD || adcData[0] > UV_THRESHOLD))
 1948              		.loc 1 479 0
 1949 1234 40F20003 		movw	r3, #:lower16:adc2_data
 1950 1238 C0F20003 		movt	r3, #:upper16:adc2_data
 1951 123c 9B68     		ldr	r3, [r3, #8]
 1952 123e B3F5077F 		cmp	r3, #540
 1953 1242 07D8     		bhi	.L108
 1954              		.loc 1 479 0 is_stmt 0 discriminator 2
 1955 1244 40F20003 		movw	r3, #:lower16:adcData
 1956 1248 C0F20003 		movt	r3, #:upper16:adcData
 1957 124c 1B68     		ldr	r3, [r3, #0]
 1958 124e B3F5077F 		cmp	r3, #540
 1959 1252 02D9     		bls	.L109
 1960              	.L108:
 1961              		.loc 1 479 0 discriminator 1
 1962 1254 4FF00103 		mov	r3, #1
 1963 1258 01E0     		b	.L110
 1964              	.L109:
 1965              		.loc 1 479 0 discriminator 3
 1966 125a 4FF00003 		mov	r3, #0
 1967              	.L110:
 1968              		.loc 1 479 0 discriminator 4
 1969 125e 002B     		cmp	r3, #0
 1970 1260 07D0     		beq	.L111
 480:../src/interrupt_defs.cpp **** 				{
 481:../src/interrupt_defs.cpp **** 					state = ST_WANDER;
 1971              		.loc 1 481 0 is_stmt 1
 1972 1262 40F20003 		movw	r3, #:lower16:state
 1973 1266 C0F20003 		movt	r3, #:upper16:state
 1974 126a 4FF00002 		mov	r2, #0
 1975 126e 1A60     		str	r2, [r3, #0]
 1976 1270 15E0     		b	.L76
 1977              	.L111:
 482:../src/interrupt_defs.cpp **** 				}
 483:../src/interrupt_defs.cpp **** 				else
 484:../src/interrupt_defs.cpp **** 				{
 485:../src/interrupt_defs.cpp **** 					pwm1_output(0.5f);
 1978              		.loc 1 485 0
 1979 1272 4FF07C50 		mov	r0, #1056964608
 1980 1276 FFF7FEFF 		bl	_Z11pwm1_outputf
 486:../src/interrupt_defs.cpp **** 					pwm2_output(0.5f);
 1981              		.loc 1 486 0
 1982 127a 4FF07C50 		mov	r0, #1056964608
 1983 127e FFF7FEFF 		bl	_Z11pwm2_outputf
 487:../src/interrupt_defs.cpp **** 					rt = 0;
 1984              		.loc 1 487 0
 1985 1282 40F20003 		movw	r3, #:lower16:rt
 1986 1286 C0F20003 		movt	r3, #:upper16:rt
 1987 128a 4FF00002 		mov	r2, #0
 1988 128e 1A60     		str	r2, [r3, #0]	@ float
 488:../src/interrupt_defs.cpp **** 					state = ST_DONE;
 1989              		.loc 1 488 0
 1990 1290 40F20003 		movw	r3, #:lower16:state
 1991 1294 C0F20003 		movt	r3, #:upper16:state
 1992 1298 4FF00402 		mov	r2, #4
 1993 129c 1A60     		str	r2, [r3, #0]
 1994              	.L76:
 489:../src/interrupt_defs.cpp **** 				}
 490:../src/interrupt_defs.cpp **** 			}
 491:../src/interrupt_defs.cpp **** 		}
 492:../src/interrupt_defs.cpp **** 		if(state == ST_WANDER || state == ST_HOMING || state == ST_CANDLE_BLOWOUT) {
 1995              		.loc 1 492 0
 1996 129e 40F20003 		movw	r3, #:lower16:state
 1997 12a2 C0F20003 		movt	r3, #:upper16:state
 1998 12a6 1B68     		ldr	r3, [r3, #0]
 1999 12a8 002B     		cmp	r3, #0
 2000 12aa 0DD0     		beq	.L112
 2001              		.loc 1 492 0 is_stmt 0 discriminator 1
 2002 12ac 40F20003 		movw	r3, #:lower16:state
 2003 12b0 C0F20003 		movt	r3, #:upper16:state
 2004 12b4 1B68     		ldr	r3, [r3, #0]
 2005 12b6 012B     		cmp	r3, #1
 2006 12b8 06D0     		beq	.L112
 2007              		.loc 1 492 0 discriminator 2
 2008 12ba 40F20003 		movw	r3, #:lower16:state
 2009 12be C0F20003 		movt	r3, #:upper16:state
 2010 12c2 1B68     		ldr	r3, [r3, #0]
 2011 12c4 032B     		cmp	r3, #3
 2012 12c6 19D1     		bne	.L60
 2013              	.L112:
 493:../src/interrupt_defs.cpp **** 		pwm1_output(left);
 2014              		.loc 1 493 0 is_stmt 1
 2015 12c8 40F20003 		movw	r3, #:lower16:left
 2016 12cc C0F20003 		movt	r3, #:upper16:left
 2017 12d0 1B68     		ldr	r3, [r3, #0]	@ float
 2018 12d2 1846     		mov	r0, r3	@ float
 2019 12d4 FFF7FEFF 		bl	_Z11pwm1_outputf
 494:../src/interrupt_defs.cpp **** 		pwm2_output(right);
 2020              		.loc 1 494 0
 2021 12d8 40F20003 		movw	r3, #:lower16:right
 2022 12dc C0F20003 		movt	r3, #:upper16:right
 2023 12e0 1B68     		ldr	r3, [r3, #0]	@ float
 2024 12e2 1846     		mov	r0, r3	@ float
 2025 12e4 FFF7FEFF 		bl	_Z11pwm2_outputf
 495:../src/interrupt_defs.cpp **** 		last_err = err;
 2026              		.loc 1 495 0
 2027 12e8 40F20003 		movw	r3, #:lower16:err
 2028 12ec C0F20003 		movt	r3, #:upper16:err
 2029 12f0 1A68     		ldr	r2, [r3, #0]	@ float
 2030 12f2 40F20003 		movw	r3, #:lower16:last_err
 2031 12f6 C0F20003 		movt	r3, #:upper16:last_err
 2032 12fa 1A60     		str	r2, [r3, #0]	@ float
 2033              	.L60:
 2034              	.LBE11:
 496:../src/interrupt_defs.cpp **** 		}
 497:../src/interrupt_defs.cpp **** 	}
 2035              		.loc 1 497 0
 2036 12fc 07F10807 		add	r7, r7, #8
 2037 1300 BD46     		mov	sp, r7
 2038 1302 80BD     		pop	{r7, pc}
 2039              		.cfi_endproc
 2040              	.LFE119:
 2042              		.align	2
 2043              		.global	SVC_Handler
 2044              		.thumb
 2045              		.thumb_func
 2047              	SVC_Handler:
 2048              	.LFB120:
 498:../src/interrupt_defs.cpp **** 
 499:../src/interrupt_defs.cpp **** 	void SVC_Handler(void)
 500:../src/interrupt_defs.cpp **** 	{
 2049              		.loc 1 500 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 8
 2052              		@ frame_needed = 1, uses_anonymous_args = 0
 2053              		@ link register save eliminated.
 2054 1304 90B4     		push	{r4, r7}
 2055              	.LCFI23:
 2056              		.cfi_def_cfa_offset 8
 2057              		.cfi_offset 4, -8
 2058              		.cfi_offset 7, -4
 2059 1306 82B0     		sub	sp, sp, #8
 2060              	.LCFI24:
 2061              		.cfi_def_cfa_offset 16
 2062 1308 00AF     		add	r7, sp, #0
 2063              	.LCFI25:
 2064              		.cfi_def_cfa_register 7
 2065              	.LBB12:
 501:../src/interrupt_defs.cpp **** //		msp_res = read_current_msp_val();
 502:../src/interrupt_defs.cpp **** //		while(1);
 503:../src/interrupt_defs.cpp **** 		uint32_t val;
 504:../src/interrupt_defs.cpp **** 		asm volatile ("mrs r0, MSP\n\t");
 2066              		.loc 1 504 0
 2067              	@ 504 "../src/interrupt_defs.cpp" 1
 2068 130a EFF30880 		mrs r0, MSP
 2069              		
 2070              	@ 0 "" 2
 505:../src/interrupt_defs.cpp **** 		asm ("mov %[output], r0" : [output] "=r" (val));
 2071              		.loc 1 505 0
 2072              	@ 505 "../src/interrupt_defs.cpp" 1
 2073 130e 0446     		mov r4, r0
 2074              	@ 0 "" 2
 2075              		.thumb
 2076 1310 7C60     		str	r4, [r7, #4]
 506:../src/interrupt_defs.cpp **** 		msp_res = val;
 2077              		.loc 1 506 0
 2078 1312 40F20003 		movw	r3, #:lower16:msp_res
 2079 1316 C0F20003 		movt	r3, #:upper16:msp_res
 2080 131a 7A68     		ldr	r2, [r7, #4]
 2081 131c 1A60     		str	r2, [r3, #0]
 2082              	.LBE12:
 507:../src/interrupt_defs.cpp **** 	}
 2083              		.loc 1 507 0
 2084 131e 07F10807 		add	r7, r7, #8
 2085 1322 BD46     		mov	sp, r7
 2086 1324 90BC     		pop	{r4, r7}
 2087 1326 7047     		bx	lr
 2088              		.cfi_endproc
 2089              	.LFE120:
 2091              		.align	2
 2092              		.global	PendSV_Handler
 2093              		.thumb
 2094              		.thumb_func
 2096              	PendSV_Handler:
 2097              	.LFB121:
 508:../src/interrupt_defs.cpp **** 
 509:../src/interrupt_defs.cpp **** 	void PendSV_Handler(void)
 510:../src/interrupt_defs.cpp **** 	{
 2098              		.loc 1 510 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 1, uses_anonymous_args = 0
 2102              		@ link register save eliminated.
 2103 1328 80B4     		push	{r7}
 2104              	.LCFI26:
 2105              		.cfi_def_cfa_offset 4
 2106              		.cfi_offset 7, -4
 2107 132a 00AF     		add	r7, sp, #0
 2108              	.LCFI27:
 2109              		.cfi_def_cfa_register 7
 511:../src/interrupt_defs.cpp **** 
 512:../src/interrupt_defs.cpp **** 		SCB->ICSR |= (1<<27);
 2110              		.loc 1 512 0
 2111 132c 4FF46D43 		mov	r3, #60672
 2112 1330 CEF20003 		movt	r3, 57344
 2113 1334 4FF46D42 		mov	r2, #60672
 2114 1338 CEF20002 		movt	r2, 57344
 2115 133c 5268     		ldr	r2, [r2, #4]
 2116 133e 42F00062 		orr	r2, r2, #134217728
 2117 1342 5A60     		str	r2, [r3, #4]
 513:../src/interrupt_defs.cpp **** 		asm volatile ("svc 1");	// To kick us into SVC handler
 2118              		.loc 1 513 0
 2119              	@ 513 "../src/interrupt_defs.cpp" 1
 2120 1344 01DF     		svc 1
 2121              	@ 0 "" 2
 514:../src/interrupt_defs.cpp **** 	}
 2122              		.loc 1 514 0
 2123              		.thumb
 2124 1346 BD46     		mov	sp, r7
 2125 1348 80BC     		pop	{r7}
 2126 134a 7047     		bx	lr
 2127              		.cfi_endproc
 2128              	.LFE121:
 2130              		.align	2
 2131              		.global	SysTick_Handler
 2132              		.thumb
 2133              		.thumb_func
 2135              	SysTick_Handler:
 2136              	.LFB122:
 515:../src/interrupt_defs.cpp **** 
 516:../src/interrupt_defs.cpp **** 	void SysTick_Handler(void)
 517:../src/interrupt_defs.cpp **** 	{
 2137              		.loc 1 517 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141              		@ link register save eliminated.
 2142 134c 80B4     		push	{r7}
 2143              	.LCFI28:
 2144              		.cfi_def_cfa_offset 4
 2145              		.cfi_offset 7, -4
 2146 134e 00AF     		add	r7, sp, #0
 2147              	.LCFI29:
 2148              		.cfi_def_cfa_register 7
 518:../src/interrupt_defs.cpp **** 		asm volatile ("svc 1");
 2149              		.loc 1 518 0
 2150              	@ 518 "../src/interrupt_defs.cpp" 1
 2151 1350 01DF     		svc 1
 2152              	@ 0 "" 2
 519:../src/interrupt_defs.cpp **** //		SCB->ICSR |= (1<<28); // To kick us into PendSV handler
 520:../src/interrupt_defs.cpp **** 	}
 2153              		.loc 1 520 0
 2154              		.thumb
 2155 1352 BD46     		mov	sp, r7
 2156 1354 80BC     		pop	{r7}
 2157 1356 7047     		bx	lr
 2158              		.cfi_endproc
 2159              	.LFE122:
 2161              	.Letext0:
 2162              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 2163              		.file 3 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/core_cm4.h"
 2164              		.file 4 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/stm32f30x.h"
 2165              		.file 5 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/stm32f30x_exti.h"
 2166              		.file 6 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/stm32f30x_gpio.h"
 2167              		.file 7 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/stm32f30x_misc.h"
 2168              		.file 8 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/Robot/encoder.h"
 2169              		.file 9 "/home/aghosh01/git/CS6233_FinalProject/STM32F3x/inc/os.h"
DEFINED SYMBOLS
                            *ABS*:00000000 interrupt_defs.cpp
     /tmp/ccGeTJSU.s:20     .bss:00000000 $d
     /tmp/ccGeTJSU.s:21     .bss:00000000 _ZL5stack
     /tmp/ccGeTJSU.s:28     .text:00000000 $t
     /tmp/ccGeTJSU.s:33     .text:00000000 TIM7_IRQHandler
     /tmp/ccGeTJSU.s:435    .text:00000438 $d
     /tmp/ccGeTJSU.s:446    .text:0000045c $t
     /tmp/ccGeTJSU.s:1259   .text:00000a68 update_pid
     /tmp/ccGeTJSU.s:485    .text:000004b0 TIM1_TRG_COM_TIM17_IRQHandler
     /tmp/ccGeTJSU.s:654    .text:000005fc TIM6_DAC_IRQHandler
     /tmp/ccGeTJSU.s:895    .text:00000824 ADC1_2_IRQHandler
     /tmp/ccGeTJSU.s:944    .text:00000868 DMA1_Channel1_IRQHandler
     /tmp/ccGeTJSU.s:976    .text:00000884 DMA2_Channel1_IRQHandler
     /tmp/ccGeTJSU.s:1009   .text:000008a4 ADC3_IRQHandler
     /tmp/ccGeTJSU.s:1127   .text:00000990 $d
     /tmp/ccGeTJSU.s:1132   .text:00000998 $t
     /tmp/ccGeTJSU.s:1137   .text:00000998 EXTI9_5_IRQHandler
     /tmp/ccGeTJSU.s:1589   .text:00000e18 $d
     /tmp/ccGeTJSU.s:1602   .text:00000e44 $t
     /tmp/ccGeTJSU.s:2047   .text:00001304 SVC_Handler
     /tmp/ccGeTJSU.s:2096   .text:00001328 PendSV_Handler
     /tmp/ccGeTJSU.s:2135   .text:0000134c SysTick_Handler
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.934603b1d669cb2b32fd4cb6dd11b673
                           .group:00000000 wm4.common_headers.h.9.a77b7af68303fe0609f9dd844a078e2a
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.170ad2f92df387b9fa0dc3deabd34ef9
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.stm32f3_discovery_l3gd20.h.98.ce6c56e3c59772d76fdcff14d2dcb612
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.fa6206289f154965d075fc01e2867808
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.4ec5c5df469deeb27bddb969fc54c06a
                           .group:00000000 wm4.encoder.h.14.d5e5872c27905990847e2dff40a1b2fe

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmplt
TIM_ClearITPendingBit
left_enc
right_enc
TIM_GetCounter
TIM_SetCounter
_Z11pwm2_outputf
_Z11pwm1_outputf
state
match_time_counter
EXTI_Init
GPIO_Init
GPIO_WriteBit
stage
NVIC_Init
led_matrix
GPIO_Write
led_iter
ADC_GetITStatus
ADC_GetConversionValue
adcval
ADC_ClearITPendingBit
DMA_ClearITPendingBit
new_data
adc2_new_data
adc3_awd1
adc3_awd2
EXTI_ClearITPendingBit
TIM_Cmd
count
__aeabi_f2d
d_front
adcData
adc2_data
err
last_err
diff_err
integral
drive_cmd
rt
left
right
t_firefight_start
_Z11pwm3_outputf
msp_res
