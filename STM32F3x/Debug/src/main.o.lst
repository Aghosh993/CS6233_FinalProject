   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	NVIC_SetPriority:
  24              	.LFB102:
  25              		.file 1 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
   1:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /**************************************************************************//**
   2:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * @file     core_cm4.h
   3:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * @version  V3.00
   5:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * @date     03. February 2012
   6:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  *
   7:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * @note
   8:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  *
  10:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * @par
  11:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  *
  15:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * @par
  16:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  *
  22:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  ******************************************************************************/
  23:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if defined ( __ICCARM__ )
  24:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
  26:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  27:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #ifdef __cplusplus
  28:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  extern "C" {
  29:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
  30:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  31:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  34:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  35:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  36:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   
  37:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  38:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  39:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  40:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  41:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****      Unions are used for effective representation of core registers.
  42:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****    
  43:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  44:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  45:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
  46:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  47:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  48:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*******************************************************************************
  49:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  *                 CMSIS definitions
  50:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  ******************************************************************************/
  51:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup Cortex_M4
  52:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
  53:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
  54:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  55:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*  CMSIS CM4 definitions */
  56:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  57:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  58:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  59:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  60:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  61:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  62:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  63:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  64:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if   defined ( __CC_ARM )
  65:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  66:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  67:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  68:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  69:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __ICCARM__ )
  70:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  71:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  72:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __STATIC_INLINE  static inline
  73:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  74:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __TMS470__ )
  75:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  76:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __STATIC_INLINE  static inline
  77:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  78:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __GNUC__ )
  79:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  80:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  81:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __STATIC_INLINE  static inline
  82:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  83:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __TASKING__ )
  84:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  85:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  86:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define __STATIC_INLINE  static inline
  87:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  88:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
  89:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
  90:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
  91:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** */
  92:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if defined ( __CC_ARM )
  93:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  94:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #if (__FPU_PRESENT == 1)
  95:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       1
  96:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #else
  97:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  98:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       0
  99:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #endif
 100:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #else
 101:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __FPU_USED         0
 102:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 103:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 104:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __ICCARM__ )
 105:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #if defined __ARMVFP__
 106:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 107:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       1
 108:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #else
 109:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 110:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       0
 111:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #endif
 112:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #else
 113:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __FPU_USED         0
 114:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 115:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 116:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __TMS470__ )
 117:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 118:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 119:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       1
 120:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #else
 121:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 122:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       0
 123:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #endif
 124:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #else
 125:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __FPU_USED         0
 126:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 127:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 128:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __GNUC__ )
 129:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 130:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 131:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       1
 132:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #else
 133:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 134:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****       #define __FPU_USED       0
 135:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #endif
 136:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #else
 137:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __FPU_USED         0
 138:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 139:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 140:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #elif defined ( __TASKING__ )
 141:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 142:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __FPU_USED         0
 143:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
 144:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 145:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 146:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 147:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 148:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 149:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 150:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 151:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 152:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #ifndef __CMSIS_GENERIC
 153:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 154:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 155:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 156:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 157:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* check device defines and use defaults */
 158:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 159:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #ifndef __CM4_REV
 160:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __CM4_REV               0x0000
 161:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 162:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 163:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 164:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #ifndef __FPU_PRESENT
 165:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __FPU_PRESENT             0
 166:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 167:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 168:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 169:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #ifndef __MPU_PRESENT
 170:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __MPU_PRESENT             0
 171:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 172:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 173:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 174:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 175:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 176:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 177:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 178:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 179:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 180:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 181:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 182:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #endif
 183:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
 184:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 185:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 186:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /**
 187:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 188:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  
 189:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 190:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \li to specify the access to peripheral variables.
 191:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 192:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** */
 193:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #ifdef __cplusplus
 194:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 195:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #else
 196:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 197:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
 198:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 199:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 200:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 201:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group Cortex_M4 */
 202:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 203:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 204:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 205:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*******************************************************************************
 206:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  *                 Register Abstraction
 207:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   Core Register contain:
 208:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core Register
 209:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core NVIC Register
 210:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core SCB Register
 211:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core SysTick Register
 212:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core Debug Register
 213:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core MPU Register
 214:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core FPU Register
 215:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  ******************************************************************************/
 216:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 217:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 218:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** */
 219:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 220:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
 221:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 222:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief  Core Register type definitions.
 223:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 224:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 225:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 226:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 227:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 228:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef union
 229:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 230:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   struct
 231:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   {
 232:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if (__CORTEX_M != 0x04)
 233:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 234:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #else
 235:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 236:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 237:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 238:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
 239:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 240:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 241:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 242:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 243:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 244:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 245:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 246:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } APSR_Type;
 247:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 248:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 249:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 250:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 251:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef union
 252:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 253:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   struct
 254:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   {
 255:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 256:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 257:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 258:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 259:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } IPSR_Type;
 260:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 261:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 262:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 263:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 264:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef union
 265:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 266:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   struct
 267:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   {
 268:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 269:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if (__CORTEX_M != 0x04)
 270:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 271:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #else
 272:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 273:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 274:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 275:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
 276:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 277:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 278:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 279:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 280:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 281:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 282:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 283:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 284:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 285:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } xPSR_Type;
 286:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 287:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 288:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 289:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 290:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef union
 291:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 292:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   struct
 293:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   {
 294:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 295:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 296:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 297:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 298:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 299:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 300:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } CONTROL_Type;
 301:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 302:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_CORE */
 303:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 304:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 305:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
 306:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 308:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 309:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 310:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 311:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 312:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 313:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
 314:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 315:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 316:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED0[24];
 317:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 318:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RSERVED1[24];
 319:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 320:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED2[24];
 321:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 322:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED3[24];
 323:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 324:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED4[56];
 325:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 326:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED5[644];
 327:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 328:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }  NVIC_Type;
 329:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 330:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 331:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 332:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 333:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 334:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 335:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 336:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 337:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 338:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 339:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 340:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 341:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 342:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 343:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 344:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 345:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
 346:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 347:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 348:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 349:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 350:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 351:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 352:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 353:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 354:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 355:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 356:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 357:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 358:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 359:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 360:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 361:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 362:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 363:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 364:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 365:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 366:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED0[5];
 367:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 368:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } SCB_Type;
 369:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 370:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB CPUID Register Definitions */
 371:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 372:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 373:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 374:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 375:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 376:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 377:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 378:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 379:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 380:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 381:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 382:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 383:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 384:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 385:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 386:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 387:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 388:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 389:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 390:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 391:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 392:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 393:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 394:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 395:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 396:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 397:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 398:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 399:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 400:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 401:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 402:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 403:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 404:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 405:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 406:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 407:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 408:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 409:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 410:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 411:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 412:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 413:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 414:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 415:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 416:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 417:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 418:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 419:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 420:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 421:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 422:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 423:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 424:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 425:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 426:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 427:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 428:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 429:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 430:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 431:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 432:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 433:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 434:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 435:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 436:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 437:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 438:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 439:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 440:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 441:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 442:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 443:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB System Control Register Definitions */
 444:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 445:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 446:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 447:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 448:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 449:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 450:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 451:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 452:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 453:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 454:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 455:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 456:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 457:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 458:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 459:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 460:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 461:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 462:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 463:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 464:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 465:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 466:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 467:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 468:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 469:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 470:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 471:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 472:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 473:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 474:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 475:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 476:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 477:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 478:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 479:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 480:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 481:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 482:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 483:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 484:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 485:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 486:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 487:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 488:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 489:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 490:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 491:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 492:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 493:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 494:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 495:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 496:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 497:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 498:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 499:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 500:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 501:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 502:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 503:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 504:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 505:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 506:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 507:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 508:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 509:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 510:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 511:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 512:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 513:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 514:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 515:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 516:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 517:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 518:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 519:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 520:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 521:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 522:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 523:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 524:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 525:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 526:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 527:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 528:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 529:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 530:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 531:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 532:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 533:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 534:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 535:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 536:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 537:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 538:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 539:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 540:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 541:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 542:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 543:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 544:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 545:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 546:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 547:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 548:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 549:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 550:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 551:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_SCB */
 552:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 553:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 554:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 555:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 556:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 557:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 558:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 559:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 560:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 561:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 562:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
 563:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 564:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED0[1];
 565:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 566:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 567:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } SCnSCB_Type;
 568:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 569:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 570:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 571:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 572:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 573:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Auxiliary Control Register Definitions */
 574:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 575:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 576:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 577:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 578:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 579:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 580:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 581:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 582:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 583:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 584:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 585:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 586:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 587:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 588:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 589:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 590:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 591:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 592:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 593:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 594:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 595:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 596:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 597:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 598:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 599:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 600:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
 601:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 602:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 603:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 604:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 605:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 606:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } SysTick_Type;
 607:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 608:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 609:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 610:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 611:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 612:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 613:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 614:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 615:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 616:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 617:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 618:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 619:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 620:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 621:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SysTick Reload Register Definitions */
 622:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 623:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 624:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 625:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SysTick Current Register Definitions */
 626:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 627:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 629:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* SysTick Calibration Register Definitions */
 630:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 631:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 632:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 633:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 634:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 635:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 636:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 637:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 638:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 639:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 640:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 641:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 642:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 643:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 644:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 645:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 646:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 647:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 648:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 649:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 650:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
 651:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 652:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __O  union
 653:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   {
 654:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 655:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 656:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 657:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 658:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED0[864];
 659:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 660:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED1[15];
 661:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 662:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED2[15];
 663:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 664:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } ITM_Type;
 665:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 666:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 667:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 668:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 669:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 670:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* ITM Trace Control Register Definitions */
 671:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 672:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 673:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 674:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 675:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 676:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 677:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 678:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 679:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 680:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 681:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 682:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 683:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 684:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 685:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 686:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 687:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 688:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 689:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 690:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 691:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 692:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 693:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 694:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 695:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 696:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 697:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 698:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 699:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 700:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 701:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 702:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 703:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 704:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 705:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 706:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 707:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 708:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 709:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
 710:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 711:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 712:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 713:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 714:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 715:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 716:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 717:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 718:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 719:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 720:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 721:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 722:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED0[1];
 723:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 724:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 725:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 726:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED1[1];
 727:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 728:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 729:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 730:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED2[1];
 731:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 732:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 733:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 734:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } DWT_Type;
 735:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 736:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT Control Register Definitions */
 737:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 738:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 739:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 740:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 741:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 742:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 743:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 744:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 745:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 746:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 747:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 748:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 749:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 750:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 751:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 752:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 753:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 754:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 755:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 756:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 757:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 758:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 759:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 760:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 761:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 762:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 763:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 764:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 765:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 766:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 767:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 768:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 769:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 770:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 771:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 772:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 773:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 774:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 775:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 776:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 777:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 778:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 779:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 780:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 781:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 782:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 783:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 784:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 785:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 786:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 787:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 788:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 789:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 790:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 791:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT CPI Count Register Definitions */
 792:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 793:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 794:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 795:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 796:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 797:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 798:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 799:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 800:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 801:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 802:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 803:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT LSU Count Register Definitions */
 804:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 805:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 806:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 807:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 808:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 809:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 810:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 811:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 812:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 813:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 814:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 815:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 816:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 817:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 818:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 819:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 820:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 821:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 822:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 823:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 824:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 825:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 826:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 827:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 828:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 829:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 830:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 831:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 832:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 833:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 834:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 835:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 836:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 837:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 838:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 839:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 840:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 841:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 842:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 843:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 844:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 845:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 846:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 848:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 849:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
 850:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 851:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 852:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 853:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
 854:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
 855:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
 856:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 857:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 858:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED0[2];
 859:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 860:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED1[55];
 861:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 862:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED2[131];
 863:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 864:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 865:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 866:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED3[759];
 867:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 868:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 869:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 870:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED4[1];
 871:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 872:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 873:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 874:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED5[39];
 875:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 876:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 877:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED7[8];
 878:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 879:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 880:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } TPI_Type;
 881:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 882:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 883:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 884:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 885:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 886:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 887:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 888:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 889:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 890:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 891:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 892:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 893:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 894:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 895:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 896:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 897:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 898:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 899:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 900:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 901:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 902:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 903:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 904:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 905:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 906:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 907:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 908:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 909:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 910:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 911:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 912:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 913:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 914:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 915:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 916:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 917:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 918:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 919:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 920:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 921:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 922:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 923:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 924:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 925:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 926:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 927:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 928:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 929:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 930:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 931:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 932:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 933:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 934:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
 935:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 936:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
 937:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
 938:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
 939:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 940:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 941:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 942:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 943:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 944:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 945:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 946:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 947:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 948:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 949:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 950:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 951:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 952:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 953:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
 954:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 955:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 956:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
 957:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 958:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 959:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
 960:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
 961:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 962:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
 963:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
 964:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
 965:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 966:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
 967:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
 968:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
 969:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 970:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI DEVID Register Definitions */
 971:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
 972:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
 973:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 974:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
 975:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
 976:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 977:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
 978:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
 979:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 980:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
 981:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
 982:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 983:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
 984:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
 985:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 986:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
 987:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
 988:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 989:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
 990:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
 991:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
 992:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 993:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
 994:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
 995:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 996:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
 997:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 998:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
 999:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if (__MPU_PRESENT == 1)
1000:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1001:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1002:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1003:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
1004:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1005:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1006:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1007:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1008:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
1009:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1010:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1011:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1012:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1013:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1014:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1015:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1016:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1017:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1018:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1019:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1020:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1021:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } MPU_Type;
1022:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1023:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* MPU Type Register */
1024:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1025:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1026:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1027:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1028:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1029:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1030:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1031:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1032:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1033:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* MPU Control Register */
1034:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1035:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1036:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1037:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1038:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1039:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1040:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1041:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1042:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1043:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* MPU Region Number Register */
1044:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1045:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1046:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1047:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* MPU Region Base Address Register */
1048:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1049:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1050:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1051:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1052:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1053:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1054:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1055:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1056:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1057:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* MPU Region Attribute and Size Register */
1058:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1059:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1060:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1061:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1062:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1063:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1064:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1065:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1066:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1067:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1068:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1069:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1070:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_MPU */
1071:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
1072:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1073:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1074:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
1075:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1076:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1077:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1078:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
1079:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1080:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1081:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1082:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1083:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
1084:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1085:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****        uint32_t RESERVED0[1];
1086:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1087:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1088:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1089:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1090:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1091:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } FPU_Type;
1092:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1093:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Floating-Point Context Control Register */
1094:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1095:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1096:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1097:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1098:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1099:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1100:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1101:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1102:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1103:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1104:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1105:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1106:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1107:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1108:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1109:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1110:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1111:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1112:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1113:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1114:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1115:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1116:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1117:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1118:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1119:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1120:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1121:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Floating-Point Context Address Register */
1122:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1123:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1124:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1125:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Floating-Point Default Status Control Register */
1126:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1127:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1128:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1129:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1130:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1131:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1132:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1133:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1134:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1135:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1136:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1137:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1138:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Media and FP Feature Register 0 */
1139:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1140:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1141:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1142:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1143:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1144:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1145:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1146:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1147:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1148:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1149:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1150:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1151:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1152:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1153:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1154:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1155:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1156:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1157:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1158:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1159:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1160:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1161:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1162:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1163:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Media and FP Feature Register 1 */
1164:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1165:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1166:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1167:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1168:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1169:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1170:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1171:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1172:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1173:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1174:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1175:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1176:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_FPU */
1177:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
1178:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1179:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1180:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1181:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1182:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1183:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
1184:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1185:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1186:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1187:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1188:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** typedef struct
1189:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1190:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1191:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1192:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1193:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1194:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** } CoreDebug_Type;
1195:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1196:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Debug Halting Control and Status Register */
1197:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1198:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1199:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1200:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1201:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1202:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1203:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1204:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1205:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1206:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1207:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1208:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1209:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1210:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1211:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1212:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1213:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1214:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1215:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1216:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1217:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1218:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1219:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1220:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1221:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1222:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1223:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1224:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1225:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1226:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1227:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1228:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1229:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1230:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1231:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1232:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1233:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Debug Core Register Selector Register */
1234:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1235:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1236:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1237:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1238:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1239:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1240:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1241:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1242:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1243:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1244:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1245:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1246:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1247:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1248:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1249:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1250:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1251:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1252:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1253:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1254:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1255:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1256:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1257:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1258:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1259:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1260:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1261:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1262:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1263:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1264:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1265:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1266:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1267:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1268:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1269:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1270:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1271:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1272:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1273:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1274:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1275:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1276:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1277:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1278:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1279:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1280:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1281:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1282:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1283:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
1284:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1285:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1286:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
1287:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1288:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1289:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1290:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1291:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1292:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1293:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1294:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1295:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1296:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1297:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1298:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1299:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1300:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1301:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1302:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1303:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1304:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1305:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1306:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1307:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1308:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if (__MPU_PRESENT == 1)
1309:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1310:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1311:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
1312:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1313:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
1314:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1315:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1316:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #endif
1317:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1318:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} */
1319:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1320:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1321:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1322:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*******************************************************************************
1323:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  *                Hardware Abstraction Layer
1324:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   Core Function Interface contains:
1325:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core NVIC Functions
1326:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core SysTick Functions
1327:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core Debug Functions
1328:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   - Core Register Access Functions
1329:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  ******************************************************************************/
1330:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1331:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** */
1332:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1333:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1334:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1335:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1336:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1337:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1338:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1339:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     @{
1340:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1341:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1342:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Set Priority Grouping
1343:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1344:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1345:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1346:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   Only values from 0..7 are used.
1347:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   In case of a conflict between priority grouping and available
1348:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1349:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1350:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1351:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1352:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1353:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1354:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t reg_value;
1355:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1356:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1357:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1358:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1359:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   reg_value  =  (reg_value                                 |
1360:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1361:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1362:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   SCB->AIRCR =  reg_value;
1363:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1364:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1365:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1366:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Get Priority Grouping
1367:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1368:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1369:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1370:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1371:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1372:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1373:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1374:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1375:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1376:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1377:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1378:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Enable External Interrupt
1379:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1380:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1381:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1382:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1383:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1384:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1385:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1386:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1387:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1388:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1389:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1390:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1391:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Disable External Interrupt
1392:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1393:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1394:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1395:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1396:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1397:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1398:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1399:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1400:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1401:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1402:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1403:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Get Pending Interrupt
1404:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1405:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1406:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     for the specified interrupt.
1407:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1408:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1409:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     
1410:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return             0  Interrupt status is not pending.
1411:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return             1  Interrupt status is pending.
1412:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1413:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1414:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1415:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1416:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1417:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1418:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1419:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Set Pending Interrupt
1420:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1421:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1422:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1423:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1424:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1425:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1426:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1427:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1428:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1429:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1430:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1431:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Clear Pending Interrupt
1432:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1433:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1434:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1435:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1436:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1437:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1438:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1439:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1440:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1441:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1442:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1443:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Get Active Interrupt
1444:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1445:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1446:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     
1447:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1448:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     
1449:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return             0  Interrupt status is not active.
1450:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return             1  Interrupt status is active.
1451:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1452:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1453:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1454:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1455:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1456:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1457:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1458:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Set Interrupt Priority
1459:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1460:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function sets the priority of an interrupt. 
1461:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1462:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1463:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1464:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number. 
1465:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]  priority  Priority to set.
1466:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1467:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1468:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
  26              		.loc 1 1468 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 3960     		str	r1, [r7, #0]
  43 000a FB71     		strb	r3, [r7, #7]
1469:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   if(IRQn < 0) {
  44              		.loc 1 1469 0
  45 000c 97F90730 		ldrsb	r3, [r7, #7]
  46 0010 002B     		cmp	r3, #0
  47 0012 10DA     		bge	.L2
1470:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  48              		.loc 1 1470 0
  49 0014 4FF46D43 		mov	r3, #60672
  50 0018 CEF20003 		movt	r3, 57344
  51 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  52 001e 02F00F02 		and	r2, r2, #15
  53 0022 A2F10401 		sub	r1, r2, #4
  54 0026 3A68     		ldr	r2, [r7, #0]
  55 0028 D2B2     		uxtb	r2, r2
  56 002a 4FEA0212 		lsl	r2, r2, #4
  57 002e D2B2     		uxtb	r2, r2
  58 0030 5B18     		adds	r3, r3, r1
  59 0032 1A76     		strb	r2, [r3, #24]
  60 0034 0DE0     		b	.L1
  61              	.L2:
1471:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   else {
1472:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
  62              		.loc 1 1472 0
  63 0036 4FF46143 		mov	r3, #57600
  64 003a CEF20003 		movt	r3, 57344
  65 003e 97F90710 		ldrsb	r1, [r7, #7]
  66 0042 3A68     		ldr	r2, [r7, #0]
  67 0044 D2B2     		uxtb	r2, r2
  68 0046 4FEA0212 		lsl	r2, r2, #4
  69 004a D2B2     		uxtb	r2, r2
  70 004c 5B18     		adds	r3, r3, r1
  71 004e 83F80023 		strb	r2, [r3, #768]
  72              	.L1:
1473:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
  73              		.loc 1 1473 0
  74 0052 07F10C07 		add	r7, r7, #12
  75 0056 BD46     		mov	sp, r7
  76 0058 80BC     		pop	{r7}
  77 005a 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE102:
  81              		.align	2
  82              		.thumb
  83              		.thumb_func
  85              	SysTick_Config:
  86              	.LFB107:
1474:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1475:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1476:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Get Interrupt Priority
1477:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1478:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1479:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     number can be positive to specify an external (device specific)
1480:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1481:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1482:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1483:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1484:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1485:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                         priority bits of the microcontroller.
1486:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1487:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1488:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1489:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1490:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   if(IRQn < 0) {
1491:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1492:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   else {
1493:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1494:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1495:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1496:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1497:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Encode Priority
1498:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1499:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1500:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     preemptive priority value, and subpriority value.
1501:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     In case of a conflict between priority grouping and available
1502:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1503:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1504:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1505:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1506:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1507:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1508:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1509:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1510:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1511:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1512:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t PreemptPriorityBits;
1513:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t SubPriorityBits;
1514:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1515:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1516:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1517:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1518:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   return (
1519:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1520:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1521:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****          );
1522:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1523:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1524:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1525:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  Decode Priority
1526:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1527:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1528:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     preemptive priority value and subpriority value.
1529:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     In case of a conflict between priority grouping and available
1530:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1531:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1532:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1533:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1534:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1535:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1536:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1537:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1538:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1539:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1540:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t PreemptPriorityBits;
1541:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   uint32_t SubPriorityBits;
1542:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1543:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1544:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1545:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1546:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1547:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1548:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1549:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1550:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1551:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  System Reset
1552:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1553:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1554:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1555:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1556:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
1557:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1558:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                                                                   buffered write are completed befo
1559:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1560:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1561:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1562:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   __DSB();                                                     /* Ensure completion of memory acces
1563:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   while(1);                                                    /* wait until reset */
1564:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
1565:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1566:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1567:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1568:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1569:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1570:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /* ##################################    SysTick function  ########################################
1571:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1572:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1573:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \brief      Functions that configure the System.
1574:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   @{
1575:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1576:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1577:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1578:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1579:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** /** \brief  System Tick Configuration
1580:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1581:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1582:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.   
1583:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1584:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1585:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     
1586:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return          0  Function succeeded.
1587:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \return          1  Function failed.
1588:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     
1589:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the 
1590:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b> 
1591:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1592:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1593:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****  */
1594:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1595:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** {
  87              		.loc 1 1595 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 005c 80B5     		push	{r7, lr}
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 005e 82B0     		sub	sp, sp, #8
  97              	.LCFI4:
  98              		.cfi_def_cfa_offset 16
  99 0060 00AF     		add	r7, sp, #0
 100              	.LCFI5:
 101              		.cfi_def_cfa_register 7
 102 0062 7860     		str	r0, [r7, #4]
1596:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
 103              		.loc 1 1596 0
 104 0064 7A68     		ldr	r2, [r7, #4]
 105 0066 6FF07F43 		mvn	r3, #-16777216
 106 006a 9A42     		cmp	r2, r3
 107 006c 02D9     		bls	.L5
 108              		.loc 1 1596 0 is_stmt 0 discriminator 1
 109 006e 4FF00103 		mov	r3, #1
 110 0072 1FE0     		b	.L6
 111              	.L5:
1597:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** 
1598:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 112              		.loc 1 1598 0 is_stmt 1
 113 0074 4EF21003 		movw	r3, #57360
 114 0078 CEF20003 		movt	r3, 57344
 115 007c 7A68     		ldr	r2, [r7, #4]
 116 007e 22F07F42 		bic	r2, r2, #-16777216
 117 0082 02F1FF32 		add	r2, r2, #-1
 118 0086 5A60     		str	r2, [r3, #4]
1599:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrup
 119              		.loc 1 1599 0
 120 0088 4FF0FF30 		mov	r0, #-1
 121 008c 4FF00F01 		mov	r1, #15
 122 0090 FFF7B6FF 		bl	NVIC_SetPriority
1600:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 123              		.loc 1 1600 0
 124 0094 4EF21003 		movw	r3, #57360
 125 0098 CEF20003 		movt	r3, 57344
 126 009c 4FF00002 		mov	r2, #0
 127 00a0 9A60     		str	r2, [r3, #8]
1601:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1602:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1603:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
 128              		.loc 1 1603 0
 129 00a2 4EF21003 		movw	r3, #57360
 130 00a6 CEF20003 		movt	r3, 57344
 131 00aa 4FF00702 		mov	r2, #7
 132 00ae 1A60     		str	r2, [r3, #0]
1604:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h ****   return (0);                                                  /* Function successful */
 133              		.loc 1 1604 0
 134 00b0 4FF00003 		mov	r3, #0
 135              	.L6:
1605:/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h **** }
 136              		.loc 1 1605 0
 137 00b4 1846     		mov	r0, r3
 138 00b6 07F10807 		add	r7, r7, #8
 139 00ba BD46     		mov	sp, r7
 140 00bc 80BD     		pop	{r7, pc}
 141              		.cfi_endproc
 142              	.LFE107:
 144              		.global	led_iter
 145              		.bss
 146              		.align	2
 149              	led_iter:
 150 0000 00000000 		.space	4
 151              		.global	led_matrix
 152              		.data
 153              		.align	2
 156              	led_matrix:
 157 0000 00020000 		.word	512
 158 0004 00010000 		.word	256
 159 0008 00800000 		.word	32768
 160 000c 00200000 		.word	8192
 161 0010 00100000 		.word	4096
 162 0014 00080000 		.word	2048
 163 0018 00040000 		.word	1024
 164              		.global	left_enc
 165              		.bss
 166              		.align	2
 169              	left_enc:
 170 0004 00000000 		.space	40
 170      00000000 
 170      00000000 
 170      00000000 
 170      00000000 
 171              		.global	right_enc
 172              		.align	2
 175              	right_enc:
 176 002c 00000000 		.space	40
 176      00000000 
 176      00000000 
 176      00000000 
 176      00000000 
 177              		.global	gyro_angle_x
 178              		.align	2
 181              	gyro_angle_x:
 182 0054 00000000 		.space	4
 183              		.global	gyro_bias_x
 184              		.align	2
 187              	gyro_bias_x:
 188 0058 00000000 		.space	4
 189              		.global	adcval
 190              		.align	2
 193              	adcval:
 194 005c 00000000 		.space	4
 195              		.global	adcData
 196              		.align	2
 199              	adcData:
 200 0060 00000000 		.space	8
 200      00000000 
 201              		.global	new_data
 202              		.align	2
 205              	new_data:
 206 0068 00000000 		.space	4
 207              		.global	adc2_data
 208              		.align	2
 211              	adc2_data:
 212 006c 00000000 		.space	16
 212      00000000 
 212      00000000 
 212      00000000 
 213              		.global	adc2_new_data
 216              	adc2_new_data:
 217 007c 00       		.space	1
 218              		.global	adc3_awd1
 221              	adc3_awd1:
 222 007d 00       		.space	1
 223              		.global	adc3_awd2
 226              	adc3_awd2:
 227 007e 00       		.space	1
 228              		.global	count
 229 007f 00       		.align	2
 232              	count:
 233 0080 00000000 		.space	4
 234              		.global	stage
 235              		.align	2
 238              	stage:
 239 0084 00000000 		.space	4
 240              		.global	drive_cmd
 241              		.align	2
 244              	drive_cmd:
 245 0088 00000000 		.space	4
 246              		.global	err
 247              		.align	2
 250              	err:
 251 008c 00000000 		.space	4
 252              		.global	last_err
 253              		.align	2
 256              	last_err:
 257 0090 00000000 		.space	4
 258              		.global	diff_err
 259              		.align	2
 262              	diff_err:
 263 0094 00000000 		.space	4
 264              		.global	rt
 265              		.align	2
 268              	rt:
 269 0098 00000000 		.space	4
 270              		.global	d_front
 271              		.align	2
 274              	d_front:
 275 009c 00000000 		.space	4
 276              		.global	integral
 277              		.align	2
 280              	integral:
 281 00a0 00000000 		.space	4
 282              		.global	left
 283              		.align	2
 286              	left:
 287 00a4 00000000 		.space	4
 288              		.global	right
 289              		.align	2
 292              	right:
 293 00a8 00000000 		.space	4
 294              		.global	state
 295              		.align	2
 298              	state:
 299 00ac 00000000 		.space	4
 300              		.global	match_time_counter
 301              		.align	2
 304              	match_time_counter:
 305 00b0 00000000 		.space	4
 306              		.global	t_firefight_start
 307              		.align	2
 310              	t_firefight_start:
 311 00b4 00000000 		.space	4
 312              		.global	leds_on
 313              		.align	2
 316              	leds_on:
 317 00b8 00000000 		.space	4
 318              		.text
 319 00be 00BF     		.align	2
 320              		.global	main
 321              		.thumb
 322              		.thumb_func
 324              	main:
 325              	.LFB111:
 326              		.file 2 "../src/main.cpp"
   1:../src/main.cpp **** #include "stm32f30x_adc.h"
   2:../src/main.cpp **** #include "stm32f30x_gpio.h"
   3:../src/main.cpp **** #include "stm32f30x_dma.h"
   4:../src/main.cpp **** 
   5:../src/main.cpp **** #include "stm32f3_discovery_l3gd20.h"
   6:../src/main.cpp **** 
   7:../src/main.cpp **** #include "encoder.h"
   8:../src/main.cpp **** #include "pwm.h"
   9:../src/main.cpp **** #include "debug.h"
  10:../src/main.cpp **** 
  11:../src/main.cpp **** #include <stdio.h>
  12:../src/main.cpp **** #include <stdint.h>
  13:../src/main.cpp **** #include <math.h>
  14:../src/main.cpp **** 
  15:../src/main.cpp **** /*
  16:../src/main.cpp ****     This program (program referring to all source and header files in this repository (repository
  17:../src/main.cpp ****     referring to https://github.com/Aghosh993/Trinity2013/tree) not containing code covered
  18:../src/main.cpp ****     under the terms of STMicroelectronic's Liberty v2 License) is free software: you can redistribu
  19:../src/main.cpp ****     it and/or modify it ("it" refers to all sections of this code as covered in the aforementioned 
  20:../src/main.cpp ****     under the terms of the GNU General Public License as published by the Free Software Foundation,
  21:../src/main.cpp ****     either version 3 of the License, or (at your option) any later version.
  22:../src/main.cpp **** 
  23:../src/main.cpp ****     This program is distributed in the hope that it will be useful,
  24:../src/main.cpp ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  25:../src/main.cpp ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  26:../src/main.cpp ****     GNU General Public License for more details.
  27:../src/main.cpp **** 
  28:../src/main.cpp ****     You should have received a copy of the GNU General Public License
  29:../src/main.cpp ****     along with this program (please refer to the file COPYING in the root of
  30:../src/main.cpp ****     the repository).  If not, see <http://www.gnu.org/licenses/>.
  31:../src/main.cpp **** 
  32:../src/main.cpp ****     (c) Abhimanyu Ghosh, Polytechnic Institute of NYU (2013-2014)
  33:../src/main.cpp ****  */
  34:../src/main.cpp **** 
  35:../src/main.cpp **** /*
  36:../src/main.cpp ****  * All other code is covered by the following terms:
  37:../src/main.cpp ****  *
  38:../src/main.cpp ****  *   ******************************************************************************
  39:../src/main.cpp ****   * @attention
  40:../src/main.cpp ****   *
  41:../src/main.cpp ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  42:../src/main.cpp ****   *
  43:../src/main.cpp ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  44:../src/main.cpp ****   * You may not use this file except in compliance with the License.
  45:../src/main.cpp ****   * You may obtain a copy of the License at:
  46:../src/main.cpp ****   *
  47:../src/main.cpp ****   *        http://www.st.com/software_license_agreement_liberty_v2
  48:../src/main.cpp ****   *
  49:../src/main.cpp ****   * Unless required by applicable law or agreed to in writing, software
  50:../src/main.cpp ****   * distributed under the License is distributed on an "AS IS" BASIS,
  51:../src/main.cpp ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  52:../src/main.cpp ****   * See the License for the specific language governing permissions and
  53:../src/main.cpp ****   * limitations under the License.
  54:../src/main.cpp ****   *
  55:../src/main.cpp ****   ******************************************************************************
  56:../src/main.cpp ****  */
  57:../src/main.cpp **** 
  58:../src/main.cpp **** /*
  59:../src/main.cpp ****  * Timer usage manifest:
  60:../src/main.cpp ****  *
  61:../src/main.cpp ****  * TIM1: 16-bit PWM output mode (PE14) [for BLDC control...]
  62:../src/main.cpp ****  * TIM2: 32-bit encoder interface input (PC6, PC7) (NOT ON TRINITY BOARD DUE TO HARDWARE FAULT!!)
  63:../src/main.cpp ****  *
  64:../src/main.cpp ****  * TIM3: PWM Output Channels 1 and 2 	(PB4, PB5)
  65:../src/main.cpp ****  *
  66:../src/main.cpp ****  * TIM4: 16-bit encoder interface input (PD12, PD13) (ONLY ON TRINITY BOARD, DUE TO ABOVE!!)
  67:../src/main.cpp ****  *
  68:../src/main.cpp ****  * TIM6: LED matrix ISR
  69:../src/main.cpp ****  * TIM7: Encoder update ISR
  70:../src/main.cpp ****  *
  71:../src/main.cpp ****  * TIM8: 16-bit encoder interface input (PA0, PA1)
  72:../src/main.cpp ****  *
  73:../src/main.cpp ****  *
  74:../src/main.cpp ****  * TIM17: IMU update ISR
  75:../src/main.cpp ****  *
  76:../src/main.cpp ****  * Other pins/resources used:
  77:../src/main.cpp ****  *
  78:../src/main.cpp ****  * Analog: 	PA2: adcData[0]
  79:../src/main.cpp ****  * 			PA3: adcData[1]
  80:../src/main.cpp ****  *
  81:../src/main.cpp ****  * 			PA4: adc2_data[0]
  82:../src/main.cpp ****  * 			PC4: adc2_data[1]
  83:../src/main.cpp ****  * 			PC5: adc2_data[2]
  84:../src/main.cpp ****  * 			PB2: adc2_data[3]
  85:../src/main.cpp ****  *
  86:../src/main.cpp ****  * Digital:
  87:../src/main.cpp ****  *
  88:../src/main.cpp ****  * Debug port information: Baud Rate=115200, 8n1 UART (TTL pins PA9, PA10)
  89:../src/main.cpp ****  * 							PA9 = TX, PA10 = RX (W/respect to STM32 device)
  90:../src/main.cpp ****  *
  91:../src/main.cpp ****  * Purpose: CS6233 Final Project (Implementation of a simple round-robin scheduler and task switche
  92:../src/main.cpp ****  * 			using the STM32 SysTick interrupt)
  93:../src/main.cpp ****  *
  94:../src/main.cpp ****  */
  95:../src/main.cpp **** 
  96:../src/main.cpp **** /*
  97:../src/main.cpp ****  * ADC TODO: Use PF4 for third channel in DMA setup for ADC1, then attempt to get DMA + continuous
  98:../src/main.cpp ****  * conversion up and running in ADC3...? (Need more detailed datasheet reference...)
  99:../src/main.cpp ****  */
 100:../src/main.cpp **** 
 101:../src/main.cpp **** volatile int led_iter;
 102:../src/main.cpp **** volatile int led_matrix[7] = {GPIO_Pin_9, GPIO_Pin_8, GPIO_Pin_15, GPIO_Pin_13,
 103:../src/main.cpp **** 										GPIO_Pin_12, GPIO_Pin_11, GPIO_Pin_10};
 104:../src/main.cpp **** 
 105:../src/main.cpp **** void imu_update_ISR_init(void);
 106:../src/main.cpp **** int16_t calc_gyro_bias(void);
 107:../src/main.cpp **** 
 108:../src/main.cpp **** uint32_t L3GD20_TIMEOUT_UserCallback(void);
 109:../src/main.cpp **** 
 110:../src/main.cpp **** void adc1_init_DMA(void);
 111:../src/main.cpp **** void adc2_init_DMA(void);
 112:../src/main.cpp **** void battery_watchdog_init(void);
 113:../src/main.cpp **** void adc1_init(void);
 114:../src/main.cpp **** 
 115:../src/main.cpp **** void brake_pins_init(void);
 116:../src/main.cpp **** 
 117:../src/main.cpp **** void ping_pin_init(void);
 118:../src/main.cpp **** void timer2_timebase_init(void);
 119:../src/main.cpp **** 
 120:../src/main.cpp **** void comp_init(void);
 121:../src/main.cpp **** 
 122:../src/main.cpp **** void trinity2013_waitForStart(void);
 123:../src/main.cpp **** 
 124:../src/main.cpp **** float IR_distance(int IR_ADC_VAL);
 125:../src/main.cpp **** 
 126:../src/main.cpp **** // Global variables to keep track of encoders and inertial sensors:
 127:../src/main.cpp **** 
 128:../src/main.cpp **** encoderState left_enc, right_enc;
 129:../src/main.cpp **** 
 130:../src/main.cpp **** volatile float gyro_angle_x;
 131:../src/main.cpp **** int gyro_bias_x, adcval;
 132:../src/main.cpp **** 
 133:../src/main.cpp **** __IO uint32_t adcData[2];
 134:../src/main.cpp **** int new_data;
 135:../src/main.cpp **** 
 136:../src/main.cpp **** __IO uint32_t adc2_data[4];
 137:../src/main.cpp **** uint8_t adc2_new_data;
 138:../src/main.cpp **** 
 139:../src/main.cpp **** uint8_t adc3_awd1, adc3_awd2;
 140:../src/main.cpp **** 
 141:../src/main.cpp **** int count, stage;
 142:../src/main.cpp **** 
 143:../src/main.cpp **** float drive_cmd;// = 0.0f;
 144:../src/main.cpp **** float err;// = 0.0f;
 145:../src/main.cpp **** float last_err;// = 0.0f;
 146:../src/main.cpp **** float diff_err;
 147:../src/main.cpp **** float rt;// = 0.0f;
 148:../src/main.cpp **** float d_front;// = 1.0f;
 149:../src/main.cpp **** float integral;
 150:../src/main.cpp **** 
 151:../src/main.cpp **** float left, right;
 152:../src/main.cpp **** 
 153:../src/main.cpp **** int state;
 154:../src/main.cpp **** 
 155:../src/main.cpp **** float match_time_counter;
 156:../src/main.cpp **** float t_firefight_start;
 157:../src/main.cpp **** int leds_on;
 158:../src/main.cpp **** 
 159:../src/main.cpp **** // Initialize all encoder data structures to zero:
 160:../src/main.cpp **** 
 161:../src/main.cpp **** int main(void)
 162:../src/main.cpp **** {
 327              		.loc 2 162 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 00c0 80B5     		push	{r7, lr}
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 00c2 00AF     		add	r7, sp, #0
 337              	.LCFI7:
 338              		.cfi_def_cfa_register 7
 163:../src/main.cpp **** 	SystemInit(); // Set up clocks/PLL/et. al
 339              		.loc 2 163 0
 340 00c4 FFF7FEFF 		bl	SystemInit
 164:../src/main.cpp **** 
 165:../src/main.cpp **** 	UART1_init(); // Debug bridge
 341              		.loc 2 165 0
 342 00c8 FFF7FEFF 		bl	_Z10UART1_initv
 166:../src/main.cpp **** 
 167:../src/main.cpp **** 	SysTick_Config(1000);
 343              		.loc 2 167 0
 344 00cc 4FF47A70 		mov	r0, #1000
 345 00d0 FFF7C4FF 		bl	SysTick_Config
 346              	.L8:
 168:../src/main.cpp **** 
 169:../src/main.cpp **** 	while(true);
 347              		.loc 2 169 0 discriminator 1
 348 00d4 FEE7     		b	.L8
 349              		.cfi_endproc
 350              	.LFE111:
 352 00d6 00BF     		.align	2
 353              		.global	_Z24trinity2013_waitForStartv
 354              		.thumb
 355              		.thumb_func
 357              	_Z24trinity2013_waitForStartv:
 358              	.LFB112:
 170:../src/main.cpp **** 
 171:../src/main.cpp **** 	return 0; // We should never manage to get here...
 172:../src/main.cpp **** }
 173:../src/main.cpp **** 
 174:../src/main.cpp **** void trinity2013_waitForStart(void)
 175:../src/main.cpp **** {
 359              		.loc 2 175 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 00d8 80B5     		push	{r7, lr}
 364              	.LCFI8:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 00da 82B0     		sub	sp, sp, #8
 369              	.LCFI9:
 370              		.cfi_def_cfa_offset 16
 371 00dc 00AF     		add	r7, sp, #0
 372              	.LCFI10:
 373              		.cfi_def_cfa_register 7
 374              	.LBB2:
 176:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOD, ENABLE);
 375              		.loc 2 176 0
 376 00de 4FF48010 		mov	r0, #1048576
 377 00e2 4FF00101 		mov	r1, #1
 378 00e6 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 177:../src/main.cpp **** 	GPIO_DeInit(GPIOD);
 379              		.loc 2 177 0
 380 00ea 4FF44060 		mov	r0, #3072
 381 00ee C4F60000 		movt	r0, 18432
 382 00f2 FFF7FEFF 		bl	GPIO_DeInit
 178:../src/main.cpp **** 	GPIO_InitTypeDef g;
 179:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_IN;
 383              		.loc 2 179 0
 384 00f6 4FF00003 		mov	r3, #0
 385 00fa 3B71     		strb	r3, [r7, #4]
 180:../src/main.cpp **** 	g.GPIO_OType = GPIO_OType_OD;
 386              		.loc 2 180 0
 387 00fc 4FF00103 		mov	r3, #1
 388 0100 BB71     		strb	r3, [r7, #6]
 181:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_3;
 389              		.loc 2 181 0
 390 0102 4FF00803 		mov	r3, #8
 391 0106 3B60     		str	r3, [r7, #0]
 182:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_DOWN;
 392              		.loc 2 182 0
 393 0108 4FF00203 		mov	r3, #2
 394 010c FB71     		strb	r3, [r7, #7]
 183:../src/main.cpp **** 	GPIO_Init(GPIOD,&g);
 395              		.loc 2 183 0
 396 010e 3B46     		mov	r3, r7
 397 0110 4FF44060 		mov	r0, #3072
 398 0114 C4F60000 		movt	r0, 18432
 399 0118 1946     		mov	r1, r3
 400 011a FFF7FEFF 		bl	GPIO_Init
 184:../src/main.cpp **** 
 185:../src/main.cpp **** 	while(GPIO_ReadInputDataBit(GPIOD, GPIO_Pin_3) == (uint8_t)Bit_RESET);
 401              		.loc 2 185 0
 402 011e 00BF     		nop
 403              	.L10:
 404              		.loc 2 185 0 is_stmt 0 discriminator 1
 405 0120 4FF44060 		mov	r0, #3072
 406 0124 C4F60000 		movt	r0, 18432
 407 0128 4FF00801 		mov	r1, #8
 408 012c FFF7FEFF 		bl	GPIO_ReadInputDataBit
 409 0130 0346     		mov	r3, r0
 410 0132 002B     		cmp	r3, #0
 411 0134 14BF     		ite	ne
 412 0136 0023     		movne	r3, #0
 413 0138 0123     		moveq	r3, #1
 414 013a DBB2     		uxtb	r3, r3
 415 013c 002B     		cmp	r3, #0
 416 013e EFD1     		bne	.L10
 186:../src/main.cpp **** 	match_time_counter = 0.0f;
 417              		.loc 2 186 0 is_stmt 1
 418 0140 40F20003 		movw	r3, #:lower16:match_time_counter
 419 0144 C0F20003 		movt	r3, #:upper16:match_time_counter
 420 0148 4FF00002 		mov	r2, #0
 421 014c 1A60     		str	r2, [r3, #0]	@ float
 187:../src/main.cpp **** 	state = ST_WANDER;
 422              		.loc 2 187 0
 423 014e 40F20003 		movw	r3, #:lower16:state
 424 0152 C0F20003 		movt	r3, #:upper16:state
 425 0156 4FF00002 		mov	r2, #0
 426 015a 1A60     		str	r2, [r3, #0]
 427              	.LBE2:
 188:../src/main.cpp **** }
 428              		.loc 2 188 0
 429 015c 07F10807 		add	r7, r7, #8
 430 0160 BD46     		mov	sp, r7
 431 0162 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE112:
 435              		.global	__aeabi_f2d
 436              		.global	__aeabi_d2f
 437              		.align	2
 438              		.global	_Z11IR_distancei
 439              		.thumb
 440              		.thumb_func
 442              	_Z11IR_distancei:
 443              	.LFB113:
 189:../src/main.cpp **** 
 190:../src/main.cpp **** float IR_distance(int IR_ADC_VAL)
 191:../src/main.cpp **** {
 444              		.loc 2 191 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 16
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0164 80B5     		push	{r7, lr}
 449              	.LCFI11:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0166 2DED028B 		fstmfdd	sp!, {d8}
 454              	.LCFI12:
 455              		.cfi_def_cfa_offset 16
 456              		.cfi_offset 80, -16
 457 016a 84B0     		sub	sp, sp, #16
 458              	.LCFI13:
 459              		.cfi_def_cfa_offset 32
 460 016c 00AF     		add	r7, sp, #0
 461              	.LCFI14:
 462              		.cfi_def_cfa_register 7
 463 016e 7860     		str	r0, [r7, #4]
 464              	.LBB3:
 192:../src/main.cpp **** 	float v_sensor_actual = (float)0.0008698 * (float)IR_ADC_VAL;
 465              		.loc 2 192 0
 466 0170 D7ED017A 		flds	s15, [r7, #4]	@ int
 467 0174 B8EEE77A 		fsitos	s14, s15
 468 0178 DFED537A 		flds	s15, .L13
 469 017c 67EE277A 		fmuls	s15, s14, s15
 470 0180 C7ED037A 		fsts	s15, [r7, #12]
 193:../src/main.cpp **** 	return (((float)0.632)*((float)pow(v_sensor_actual,6))-((float)8.012)*((float)pow(v_sensor_actual,
 471              		.loc 2 193 0
 472 0184 F868     		ldr	r0, [r7, #12]	@ float
 473 0186 FFF7FEFF 		bl	__aeabi_f2d
 474 018a 0246     		mov	r2, r0
 475 018c 0B46     		mov	r3, r1
 476 018e 1046     		mov	r0, r2
 477 0190 1946     		mov	r1, r3
 478 0192 4FF00002 		mov	r2, #0
 479 0196 4FF00003 		mov	r3, #0
 480 019a C4F21803 		movt	r3, 16408
 481 019e FFF7FEFF 		bl	pow
 482 01a2 0246     		mov	r2, r0
 483 01a4 0B46     		mov	r3, r1
 194:../src/main.cpp **** 			+ ((float)41.05)*((float)pow(v_sensor_actual,4)) - ((float)109.7)*((float)pow(v_sensor_actual,3)
 195:../src/main.cpp **** 			+ ((float)164.7)*((float)pow(v_sensor_actual,2)) - (((float)138.8)*(float)v_sensor_actual)
 196:../src/main.cpp **** 			+ (float)60.24);
 484              		.loc 2 196 0
 485 01a6 1046     		mov	r0, r2
 486 01a8 1946     		mov	r1, r3
 487 01aa FFF7FEFF 		bl	__aeabi_d2f
 488 01ae 07EE100A 		fmsr	s14, r0
 489 01b2 DFED467A 		flds	s15, .L13+4
 490 01b6 27EE278A 		fmuls	s16, s14, s15
 193:../src/main.cpp **** 	return (((float)0.632)*((float)pow(v_sensor_actual,6))-((float)8.012)*((float)pow(v_sensor_actual,
 491              		.loc 2 193 0
 492 01ba F868     		ldr	r0, [r7, #12]	@ float
 493 01bc FFF7FEFF 		bl	__aeabi_f2d
 494 01c0 0246     		mov	r2, r0
 495 01c2 0B46     		mov	r3, r1
 496 01c4 1046     		mov	r0, r2
 497 01c6 1946     		mov	r1, r3
 498 01c8 4FF00002 		mov	r2, #0
 499 01cc 4FF00003 		mov	r3, #0
 500 01d0 C4F21403 		movt	r3, 16404
 501 01d4 FFF7FEFF 		bl	pow
 502 01d8 0246     		mov	r2, r0
 503 01da 0B46     		mov	r3, r1
 504              		.loc 2 196 0
 505 01dc 1046     		mov	r0, r2
 506 01de 1946     		mov	r1, r3
 507 01e0 FFF7FEFF 		bl	__aeabi_d2f
 508 01e4 07EE100A 		fmsr	s14, r0
 509 01e8 DFED397A 		flds	s15, .L13+8
 510 01ec 67EE277A 		fmuls	s15, s14, s15
 511 01f0 38EE678A 		fsubs	s16, s16, s15
 194:../src/main.cpp **** 			+ ((float)41.05)*((float)pow(v_sensor_actual,4)) - ((float)109.7)*((float)pow(v_sensor_actual,3)
 512              		.loc 2 194 0
 513 01f4 F868     		ldr	r0, [r7, #12]	@ float
 514 01f6 FFF7FEFF 		bl	__aeabi_f2d
 515 01fa 0246     		mov	r2, r0
 516 01fc 0B46     		mov	r3, r1
 517 01fe 1046     		mov	r0, r2
 518 0200 1946     		mov	r1, r3
 519 0202 4FF00002 		mov	r2, #0
 520 0206 4FF00003 		mov	r3, #0
 521 020a C4F21003 		movt	r3, 16400
 522 020e FFF7FEFF 		bl	pow
 523 0212 0246     		mov	r2, r0
 524 0214 0B46     		mov	r3, r1
 525              		.loc 2 196 0
 526 0216 1046     		mov	r0, r2
 527 0218 1946     		mov	r1, r3
 528 021a FFF7FEFF 		bl	__aeabi_d2f
 529 021e 07EE100A 		fmsr	s14, r0
 530 0222 DFED2C7A 		flds	s15, .L13+12
 531 0226 67EE277A 		fmuls	s15, s14, s15
 532 022a 38EE278A 		fadds	s16, s16, s15
 194:../src/main.cpp **** 			+ ((float)41.05)*((float)pow(v_sensor_actual,4)) - ((float)109.7)*((float)pow(v_sensor_actual,3)
 533              		.loc 2 194 0
 534 022e F868     		ldr	r0, [r7, #12]	@ float
 535 0230 FFF7FEFF 		bl	__aeabi_f2d
 536 0234 0246     		mov	r2, r0
 537 0236 0B46     		mov	r3, r1
 538 0238 1046     		mov	r0, r2
 539 023a 1946     		mov	r1, r3
 540 023c 4FF00002 		mov	r2, #0
 541 0240 4FF00003 		mov	r3, #0
 542 0244 C4F20803 		movt	r3, 16392
 543 0248 FFF7FEFF 		bl	pow
 544 024c 0246     		mov	r2, r0
 545 024e 0B46     		mov	r3, r1
 546              		.loc 2 196 0
 547 0250 1046     		mov	r0, r2
 548 0252 1946     		mov	r1, r3
 549 0254 FFF7FEFF 		bl	__aeabi_d2f
 550 0258 07EE100A 		fmsr	s14, r0
 551 025c DFED1E7A 		flds	s15, .L13+16
 552 0260 67EE277A 		fmuls	s15, s14, s15
 553 0264 38EE678A 		fsubs	s16, s16, s15
 195:../src/main.cpp **** 			+ ((float)164.7)*((float)pow(v_sensor_actual,2)) - (((float)138.8)*(float)v_sensor_actual)
 554              		.loc 2 195 0
 555 0268 F868     		ldr	r0, [r7, #12]	@ float
 556 026a FFF7FEFF 		bl	__aeabi_f2d
 557 026e 0246     		mov	r2, r0
 558 0270 0B46     		mov	r3, r1
 559 0272 1046     		mov	r0, r2
 560 0274 1946     		mov	r1, r3
 561 0276 4FF00002 		mov	r2, #0
 562 027a 4FF08043 		mov	r3, #1073741824
 563 027e FFF7FEFF 		bl	pow
 564 0282 0246     		mov	r2, r0
 565 0284 0B46     		mov	r3, r1
 566              		.loc 2 196 0
 567 0286 1046     		mov	r0, r2
 568 0288 1946     		mov	r1, r3
 569 028a FFF7FEFF 		bl	__aeabi_d2f
 570 028e 07EE100A 		fmsr	s14, r0
 571 0292 DFED127A 		flds	s15, .L13+20
 572 0296 67EE277A 		fmuls	s15, s14, s15
 573 029a 38EE277A 		fadds	s14, s16, s15
 574 029e D7ED036A 		flds	s13, [r7, #12]
 575 02a2 DFED0F7A 		flds	s15, .L13+24
 576 02a6 66EEA77A 		fmuls	s15, s13, s15
 577 02aa 37EE677A 		fsubs	s14, s14, s15
 578 02ae DFED0D7A 		flds	s15, .L13+28
 579 02b2 77EE277A 		fadds	s15, s14, s15
 580 02b6 17EE903A 		fmrs	r3, s15
 581              	.LBE3:
 197:../src/main.cpp **** }
 582              		.loc 2 197 0
 583 02ba 1846     		mov	r0, r3	@ float
 584 02bc 07F11007 		add	r7, r7, #16
 585 02c0 BD46     		mov	sp, r7
 586 02c2 BDEC028B 		fldmfdd	sp!, {d8}
 587 02c6 80BD     		pop	{r7, pc}
 588              	.L14:
 589              		.align	2
 590              	.L13:
 591 02c8 4A03643A 		.word	979632970
 592 02cc C1CA213F 		.word	1059179201
 593 02d0 27310041 		.word	1090531623
 594 02d4 33332442 		.word	1109668659
 595 02d8 6666DB42 		.word	1121674854
 596 02dc 33B32443 		.word	1126478643
 597 02e0 CDCC0A43 		.word	1124781261
 598 02e4 C3F57042 		.word	1114699203
 599              		.cfi_endproc
 600              	.LFE113:
 602              		.align	2
 603              		.global	_Z19imu_update_ISR_initv
 604              		.thumb
 605              		.thumb_func
 607              	_Z19imu_update_ISR_initv:
 608              	.LFB114:
 198:../src/main.cpp **** 
 199:../src/main.cpp **** // Initializes the ISR that reads inertial sensors (gyro + accelerometer)
 200:../src/main.cpp **** // Interrupt priority is HIGHEST (0)
 201:../src/main.cpp **** 
 202:../src/main.cpp **** void imu_update_ISR_init(void)
 203:../src/main.cpp **** {
 609              		.loc 2 203 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 24
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613 02e8 80B5     		push	{r7, lr}
 614              	.LCFI15:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 02ea 86B0     		sub	sp, sp, #24
 619              	.LCFI16:
 620              		.cfi_def_cfa_offset 32
 621 02ec 00AF     		add	r7, sp, #0
 622              	.LCFI17:
 623              		.cfi_def_cfa_register 7
 624              	.LBB4:
 204:../src/main.cpp **** 	L3GD20_InitTypeDef l3gInit;
 205:../src/main.cpp **** 
 206:../src/main.cpp **** 	l3gInit.Axes_Enable = L3GD20_AXES_ENABLE;
 625              		.loc 2 206 0
 626 02ee 4FF00703 		mov	r3, #7
 627 02f2 BB74     		strb	r3, [r7, #18]
 207:../src/main.cpp **** 	l3gInit.Band_Width = L3GD20_BANDWIDTH_1;
 628              		.loc 2 207 0
 629 02f4 4FF00003 		mov	r3, #0
 630 02f8 FB74     		strb	r3, [r7, #19]
 208:../src/main.cpp **** 	l3gInit.BlockData_Update = L3GD20_BlockDataUpdate_Continous;
 631              		.loc 2 208 0
 632 02fa 4FF00003 		mov	r3, #0
 633 02fe 3B75     		strb	r3, [r7, #20]
 209:../src/main.cpp **** 	l3gInit.Endianness = L3GD20_BLE_LSB;
 634              		.loc 2 209 0
 635 0300 4FF00003 		mov	r3, #0
 636 0304 7B75     		strb	r3, [r7, #21]
 210:../src/main.cpp **** 	l3gInit.Full_Scale = L3GD20_FULLSCALE_250;
 637              		.loc 2 210 0
 638 0306 4FF00003 		mov	r3, #0
 639 030a BB75     		strb	r3, [r7, #22]
 211:../src/main.cpp **** 	l3gInit.Output_DataRate = L3GD20_OUTPUT_DATARATE_1;
 640              		.loc 2 211 0
 641 030c 4FF00003 		mov	r3, #0
 642 0310 7B74     		strb	r3, [r7, #17]
 212:../src/main.cpp **** 	l3gInit.Power_Mode = L3GD20_MODE_ACTIVE;
 643              		.loc 2 212 0
 644 0312 4FF00803 		mov	r3, #8
 645 0316 3B74     		strb	r3, [r7, #16]
 213:../src/main.cpp **** 
 214:../src/main.cpp **** 	L3GD20_Init(&l3gInit);
 646              		.loc 2 214 0
 647 0318 07F11003 		add	r3, r7, #16
 648 031c 1846     		mov	r0, r3
 649 031e FFF7FEFF 		bl	L3GD20_Init
 215:../src/main.cpp **** 	gyro_bias_x = calc_gyro_bias();
 650              		.loc 2 215 0
 651 0322 FFF7FEFF 		bl	_Z14calc_gyro_biasv
 652 0326 0346     		mov	r3, r0
 653 0328 1A46     		mov	r2, r3
 654 032a 40F20003 		movw	r3, #:lower16:gyro_bias_x
 655 032e C0F20003 		movt	r3, #:upper16:gyro_bias_x
 656 0332 1A60     		str	r2, [r3, #0]
 216:../src/main.cpp **** 
 217:../src/main.cpp **** 	gyro_angle_x = 0;
 657              		.loc 2 217 0
 658 0334 40F20003 		movw	r3, #:lower16:gyro_angle_x
 659 0338 C0F20003 		movt	r3, #:upper16:gyro_angle_x
 660 033c 4FF00002 		mov	r2, #0
 661 0340 1A60     		str	r2, [r3, #0]	@ float
 218:../src/main.cpp **** 
 219:../src/main.cpp **** 	NVIC_InitTypeDef nv;
 220:../src/main.cpp **** 	TIM_TimeBaseInitTypeDef TIM17_init;
 221:../src/main.cpp **** 
 222:../src/main.cpp **** 	nv.NVIC_IRQChannel = TIM1_TRG_COM_TIM17_IRQn;
 662              		.loc 2 222 0
 663 0342 4FF01A03 		mov	r3, #26
 664 0346 3B73     		strb	r3, [r7, #12]
 223:../src/main.cpp **** 	nv.NVIC_IRQChannelPreemptionPriority = 0;
 665              		.loc 2 223 0
 666 0348 4FF00003 		mov	r3, #0
 667 034c 7B73     		strb	r3, [r7, #13]
 224:../src/main.cpp **** 	nv.NVIC_IRQChannelSubPriority = 0;
 668              		.loc 2 224 0
 669 034e 4FF00003 		mov	r3, #0
 670 0352 BB73     		strb	r3, [r7, #14]
 225:../src/main.cpp **** 	nv.NVIC_IRQChannelCmd = ENABLE;
 671              		.loc 2 225 0
 672 0354 4FF00103 		mov	r3, #1
 673 0358 FB73     		strb	r3, [r7, #15]
 226:../src/main.cpp **** 
 227:../src/main.cpp **** 	NVIC_Init(&nv);
 674              		.loc 2 227 0
 675 035a 07F10C03 		add	r3, r7, #12
 676 035e 1846     		mov	r0, r3
 677 0360 FFF7FEFF 		bl	NVIC_Init
 228:../src/main.cpp **** 
 229:../src/main.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM17, ENABLE);
 678              		.loc 2 229 0
 679 0364 4FF48020 		mov	r0, #262144
 680 0368 4FF00101 		mov	r1, #1
 681 036c FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 230:../src/main.cpp **** 
 231:../src/main.cpp **** 	/*
 232:../src/main.cpp **** 	 * UPDATE_FREQUENCY = TIM_CLK/[(PRESCALER+1)(ARR+1)(REPCOUNTER+1)]
 233:../src/main.cpp **** 	 * 	  Prescaler -> PRESCALER
 234:../src/main.cpp **** 	 * 	  Period -> ARR
 235:../src/main.cpp **** 	 * 	  RepetitionCounter -> REPCOUNTER
 236:../src/main.cpp **** 	 */
 237:../src/main.cpp **** 
 238:../src/main.cpp **** 	TIM17_init.TIM_Period = (10*DT_IMU)-1;
 682              		.loc 2 238 0
 683 0370 40F28F13 		movw	r3, #399
 684 0374 7B60     		str	r3, [r7, #4]
 239:../src/main.cpp **** 	TIM17_init.TIM_Prescaler = 7199;
 685              		.loc 2 239 0
 686 0376 41F61F43 		movw	r3, #7199
 687 037a 3B80     		strh	r3, [r7, #0]	@ movhi
 240:../src/main.cpp **** 	TIM17_init.TIM_RepetitionCounter = 0;
 688              		.loc 2 240 0
 689 037c 4FF00003 		mov	r3, #0
 690 0380 BB72     		strb	r3, [r7, #10]
 241:../src/main.cpp **** 	TIM17_init.TIM_ClockDivision = 0;
 691              		.loc 2 241 0
 692 0382 4FF00003 		mov	r3, #0
 693 0386 3B81     		strh	r3, [r7, #8]	@ movhi
 242:../src/main.cpp **** 	TIM17_init.TIM_CounterMode = TIM_CounterMode_Up;
 694              		.loc 2 242 0
 695 0388 4FF00003 		mov	r3, #0
 696 038c 7B80     		strh	r3, [r7, #2]	@ movhi
 243:../src/main.cpp **** 
 244:../src/main.cpp **** 	TIM_TimeBaseInit(TIM17, &TIM17_init);
 697              		.loc 2 244 0
 698 038e 3B46     		mov	r3, r7
 699 0390 4FF49040 		mov	r0, #18432
 700 0394 C4F20100 		movt	r0, 16385
 701 0398 1946     		mov	r1, r3
 702 039a FFF7FEFF 		bl	TIM_TimeBaseInit
 245:../src/main.cpp **** 
 246:../src/main.cpp **** 	TIM_ITConfig(TIM17, TIM_IT_Update, ENABLE);
 703              		.loc 2 246 0
 704 039e 4FF49040 		mov	r0, #18432
 705 03a2 C4F20100 		movt	r0, 16385
 706 03a6 4FF00101 		mov	r1, #1
 707 03aa 4FF00102 		mov	r2, #1
 708 03ae FFF7FEFF 		bl	TIM_ITConfig
 247:../src/main.cpp **** 	TIM_Cmd(TIM17, ENABLE);
 709              		.loc 2 247 0
 710 03b2 4FF49040 		mov	r0, #18432
 711 03b6 C4F20100 		movt	r0, 16385
 712 03ba 4FF00101 		mov	r1, #1
 713 03be FFF7FEFF 		bl	TIM_Cmd
 714              	.LBE4:
 248:../src/main.cpp **** }
 715              		.loc 2 248 0
 716 03c2 07F11807 		add	r7, r7, #24
 717 03c6 BD46     		mov	sp, r7
 718 03c8 80BD     		pop	{r7, pc}
 719              		.cfi_endproc
 720              	.LFE114:
 722              		.section	.rodata
 723              		.align	2
 724              	.LC0:
 725 0000 4C334744 		.ascii	"L3GD20 read attempt timed out... check your wiring/"
 725      32302072 
 725      65616420 
 725      61747465 
 725      6D707420 
 726 0033 636F6465 		.ascii	"code!!!\012\015\000"
 726      2121210A 
 726      0D00
 727 003d 000000   		.text
 728 03ca 00BF     		.align	2
 729              		.global	L3GD20_TIMEOUT_UserCallback
 730              		.thumb
 731              		.thumb_func
 733              	L3GD20_TIMEOUT_UserCallback:
 734              	.LFB115:
 249:../src/main.cpp **** 
 250:../src/main.cpp **** uint32_t L3GD20_TIMEOUT_UserCallback(void)
 251:../src/main.cpp **** {
 735              		.loc 2 251 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 03cc 80B5     		push	{r7, lr}
 740              	.LCFI18:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 03ce 00AF     		add	r7, sp, #0
 745              	.LCFI19:
 746              		.cfi_def_cfa_register 7
 252:../src/main.cpp **** 	printf("L3GD20 read attempt timed out... check your wiring/code!!!\n\r");
 747              		.loc 2 252 0
 748 03d0 40F20000 		movw	r0, #:lower16:.LC0
 749 03d4 C0F20000 		movt	r0, #:upper16:.LC0
 750 03d8 FFF7FEFF 		bl	printf
 253:../src/main.cpp **** 	return 0;
 751              		.loc 2 253 0
 752 03dc 4FF00003 		mov	r3, #0
 254:../src/main.cpp **** }
 753              		.loc 2 254 0
 754 03e0 1846     		mov	r0, r3
 755 03e2 80BD     		pop	{r7, pc}
 756              		.cfi_endproc
 757              	.LFE115:
 759              		.align	2
 760              		.global	_Z15brake_pins_initv
 761              		.thumb
 762              		.thumb_func
 764              	_Z15brake_pins_initv:
 765              	.LFB116:
 255:../src/main.cpp **** 
 256:../src/main.cpp **** void brake_pins_init(void)
 257:../src/main.cpp **** {
 766              		.loc 2 257 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 8
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 03e4 80B5     		push	{r7, lr}
 771              	.LCFI20:
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 03e6 82B0     		sub	sp, sp, #8
 776              	.LCFI21:
 777              		.cfi_def_cfa_offset 16
 778 03e8 00AF     		add	r7, sp, #0
 779              	.LCFI22:
 780              		.cfi_def_cfa_register 7
 781              	.LBB5:
 258:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOE, ENABLE);
 782              		.loc 2 258 0
 783 03ea 4FF40010 		mov	r0, #2097152
 784 03ee 4FF00101 		mov	r1, #1
 785 03f2 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 259:../src/main.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
 260:../src/main.cpp **** 	GPIO_StructInit(&GPIO_InitStructure);
 786              		.loc 2 260 0
 787 03f6 3B46     		mov	r3, r7
 788 03f8 1846     		mov	r0, r3
 789 03fa FFF7FEFF 		bl	GPIO_StructInit
 261:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2 | GPIO_Pin_3;
 790              		.loc 2 261 0
 791 03fe 4FF00C03 		mov	r3, #12
 792 0402 3B60     		str	r3, [r7, #0]
 262:../src/main.cpp **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 793              		.loc 2 262 0
 794 0404 4FF00003 		mov	r3, #0
 795 0408 BB71     		strb	r3, [r7, #6]
 263:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 796              		.loc 2 263 0
 797 040a 4FF00103 		mov	r3, #1
 798 040e 3B71     		strb	r3, [r7, #4]
 264:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 799              		.loc 2 264 0
 800 0410 4FF00003 		mov	r3, #0
 801 0414 FB71     		strb	r3, [r7, #7]
 265:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_Level_2;
 802              		.loc 2 265 0
 803 0416 4FF00203 		mov	r3, #2
 804 041a 7B71     		strb	r3, [r7, #5]
 266:../src/main.cpp **** 	GPIO_Init(GPIOE, &GPIO_InitStructure);
 805              		.loc 2 266 0
 806 041c 3B46     		mov	r3, r7
 807 041e 4FF48050 		mov	r0, #4096
 808 0422 C4F60000 		movt	r0, 18432
 809 0426 1946     		mov	r1, r3
 810 0428 FFF7FEFF 		bl	GPIO_Init
 267:../src/main.cpp **** 
 268:../src/main.cpp **** 	GPIO_WriteBit(GPIOE, GPIO_Pin_2, Bit_RESET);
 811              		.loc 2 268 0
 812 042c 4FF48050 		mov	r0, #4096
 813 0430 C4F60000 		movt	r0, 18432
 814 0434 4FF00401 		mov	r1, #4
 815 0438 4FF00002 		mov	r2, #0
 816 043c FFF7FEFF 		bl	GPIO_WriteBit
 269:../src/main.cpp **** 	GPIO_WriteBit(GPIOE, GPIO_Pin_3, Bit_RESET);
 817              		.loc 2 269 0
 818 0440 4FF48050 		mov	r0, #4096
 819 0444 C4F60000 		movt	r0, 18432
 820 0448 4FF00801 		mov	r1, #8
 821 044c 4FF00002 		mov	r2, #0
 822 0450 FFF7FEFF 		bl	GPIO_WriteBit
 823              	.LBE5:
 270:../src/main.cpp **** }
 824              		.loc 2 270 0
 825 0454 07F10807 		add	r7, r7, #8
 826 0458 BD46     		mov	sp, r7
 827 045a 80BD     		pop	{r7, pc}
 828              		.cfi_endproc
 829              	.LFE116:
 831              		.align	2
 832              		.global	_Z13ping_pin_initv
 833              		.thumb
 834              		.thumb_func
 836              	_Z13ping_pin_initv:
 837              	.LFB117:
 271:../src/main.cpp **** /*
 272:../src/main.cpp ****  * PB0: OUTPUT
 273:../src/main.cpp ****  * PC1: INPUT
 274:../src/main.cpp ****  */
 275:../src/main.cpp **** void ping_pin_init(void)
 276:../src/main.cpp **** {
 838              		.loc 2 276 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 8
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842 045c 80B5     		push	{r7, lr}
 843              	.LCFI23:
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 7, -8
 846              		.cfi_offset 14, -4
 847 045e 82B0     		sub	sp, sp, #8
 848              	.LCFI24:
 849              		.cfi_def_cfa_offset 16
 850 0460 00AF     		add	r7, sp, #0
 851              	.LCFI25:
 852              		.cfi_def_cfa_register 7
 853              	.LBB6:
 277:../src/main.cpp **** 
 278:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB | RCC_AHBPeriph_GPIOF, ENABLE);
 854              		.loc 2 278 0
 855 0462 4FF48800 		mov	r0, #4456448
 856 0466 4FF00101 		mov	r1, #1
 857 046a FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 279:../src/main.cpp **** 
 280:../src/main.cpp **** 	GPIO_InitTypeDef g;
 281:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_IN;
 858              		.loc 2 281 0
 859 046e 4FF00003 		mov	r3, #0
 860 0472 3B71     		strb	r3, [r7, #4]
 282:../src/main.cpp **** 	g.GPIO_OType = GPIO_OType_OD;
 861              		.loc 2 282 0
 862 0474 4FF00103 		mov	r3, #1
 863 0478 BB71     		strb	r3, [r7, #6]
 283:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_9;
 864              		.loc 2 283 0
 865 047a 4FF40073 		mov	r3, #512
 866 047e 3B60     		str	r3, [r7, #0]
 284:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 867              		.loc 2 284 0
 868 0480 4FF00003 		mov	r3, #0
 869 0484 FB71     		strb	r3, [r7, #7]
 285:../src/main.cpp **** 	g.GPIO_Speed = GPIO_Speed_Level_1;
 870              		.loc 2 285 0
 871 0486 4FF00103 		mov	r3, #1
 872 048a 7B71     		strb	r3, [r7, #5]
 286:../src/main.cpp **** 
 287:../src/main.cpp **** 	GPIO_Init(GPIOF, &g);
 873              		.loc 2 287 0
 874 048c 3B46     		mov	r3, r7
 875 048e 4FF4A050 		mov	r0, #5120
 876 0492 C4F60000 		movt	r0, 18432
 877 0496 1946     		mov	r1, r3
 878 0498 FFF7FEFF 		bl	GPIO_Init
 288:../src/main.cpp **** 
 289:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_OUT;
 879              		.loc 2 289 0
 880 049c 4FF00103 		mov	r3, #1
 881 04a0 3B71     		strb	r3, [r7, #4]
 290:../src/main.cpp **** 	g.GPIO_OType = GPIO_OType_PP;
 882              		.loc 2 290 0
 883 04a2 4FF00003 		mov	r3, #0
 884 04a6 BB71     		strb	r3, [r7, #6]
 291:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_0;
 885              		.loc 2 291 0
 886 04a8 4FF00103 		mov	r3, #1
 887 04ac 3B60     		str	r3, [r7, #0]
 292:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 888              		.loc 2 292 0
 889 04ae 4FF00003 		mov	r3, #0
 890 04b2 FB71     		strb	r3, [r7, #7]
 293:../src/main.cpp **** 	g.GPIO_Speed = GPIO_Speed_Level_1;
 891              		.loc 2 293 0
 892 04b4 4FF00103 		mov	r3, #1
 893 04b8 7B71     		strb	r3, [r7, #5]
 294:../src/main.cpp **** 
 295:../src/main.cpp **** 	GPIO_Init(GPIOB, &g);
 894              		.loc 2 295 0
 895 04ba 3B46     		mov	r3, r7
 896 04bc 4FF48060 		mov	r0, #1024
 897 04c0 C4F60000 		movt	r0, 18432
 898 04c4 1946     		mov	r1, r3
 899 04c6 FFF7FEFF 		bl	GPIO_Init
 296:../src/main.cpp **** 
 297:../src/main.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 900              		.loc 2 297 0
 901 04ca 4FF00100 		mov	r0, #1
 902 04ce 4FF00101 		mov	r1, #1
 903 04d2 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 298:../src/main.cpp **** 	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOF, EXTI_PinSource9);
 904              		.loc 2 298 0
 905 04d6 4FF00500 		mov	r0, #5
 906 04da 4FF00901 		mov	r1, #9
 907 04de FFF7FEFF 		bl	SYSCFG_EXTILineConfig
 908              	.LBE6:
 299:../src/main.cpp **** 
 300:../src/main.cpp **** }
 909              		.loc 2 300 0
 910 04e2 07F10807 		add	r7, r7, #8
 911 04e6 BD46     		mov	sp, r7
 912 04e8 80BD     		pop	{r7, pc}
 913              		.cfi_endproc
 914              	.LFE117:
 916 04ea 00BF     		.align	2
 917              		.global	_Z20timer2_timebase_initv
 918              		.thumb
 919              		.thumb_func
 921              	_Z20timer2_timebase_initv:
 922              	.LFB118:
 301:../src/main.cpp **** 
 302:../src/main.cpp **** void timer2_timebase_init(void)
 303:../src/main.cpp **** {
 923              		.loc 2 303 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 16
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927 04ec 80B5     		push	{r7, lr}
 928              	.LCFI26:
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 04ee 84B0     		sub	sp, sp, #16
 933              	.LCFI27:
 934              		.cfi_def_cfa_offset 24
 935 04f0 00AF     		add	r7, sp, #0
 936              	.LCFI28:
 937              		.cfi_def_cfa_register 7
 938              	.LBB7:
 304:../src/main.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
 305:../src/main.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 939              		.loc 2 305 0
 940 04f2 4FF00100 		mov	r0, #1
 941 04f6 4FF00101 		mov	r1, #1
 942 04fa FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 306:../src/main.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 17999;//1899;//0xFFFFFFFF;//1899;//0xFFFFFFFF;
 943              		.loc 2 306 0
 944 04fe 44F24F63 		movw	r3, #17999
 945 0502 BB60     		str	r3, [r7, #8]
 307:../src/main.cpp **** 	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
 946              		.loc 2 307 0
 947 0504 4FF00003 		mov	r3, #0
 948 0508 BB73     		strb	r3, [r7, #14]
 308:../src/main.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 71;//0;//71;
 949              		.loc 2 308 0
 950 050a 4FF04703 		mov	r3, #71
 951 050e BB80     		strh	r3, [r7, #4]	@ movhi
 309:../src/main.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 952              		.loc 2 309 0
 953 0510 4FF00003 		mov	r3, #0
 954 0514 BB81     		strh	r3, [r7, #12]	@ movhi
 310:../src/main.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 955              		.loc 2 310 0
 956 0516 4FF00003 		mov	r3, #0
 957 051a FB80     		strh	r3, [r7, #6]	@ movhi
 311:../src/main.cpp **** 	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 958              		.loc 2 311 0
 959 051c 07F10403 		add	r3, r7, #4
 960 0520 4FF08040 		mov	r0, #1073741824
 961 0524 1946     		mov	r1, r3
 962 0526 FFF7FEFF 		bl	TIM_TimeBaseInit
 312:../src/main.cpp **** 
 313:../src/main.cpp **** 	TIM_SetCounter(TIM2, 0);
 963              		.loc 2 313 0
 964 052a 4FF08040 		mov	r0, #1073741824
 965 052e 4FF00001 		mov	r1, #0
 966 0532 FFF7FEFF 		bl	TIM_SetCounter
 967              	.LBE7:
 314:../src/main.cpp **** }
 968              		.loc 2 314 0
 969 0536 07F11007 		add	r7, r7, #16
 970 053a BD46     		mov	sp, r7
 971 053c 80BD     		pop	{r7, pc}
 972              		.cfi_endproc
 973              	.LFE118:
 975 053e 00BF     		.align	2
 976              		.global	_Z9comp_initv
 977              		.thumb
 978              		.thumb_func
 980              	_Z9comp_initv:
 981              	.LFB119:
 315:../src/main.cpp **** 
 316:../src/main.cpp **** /*
 317:../src/main.cpp ****  * Use COMP2, COMP3, COMP4, COMP7
 318:../src/main.cpp ****  * COMP2: 	Input->		PA7  (IO1)
 319:../src/main.cpp ****  * 			Output->	PB9
 320:../src/main.cpp ****  * COMP3:	Input->		PB14 (IO1)
 321:../src/main.cpp ****  * 			Output->	PA8
 322:../src/main.cpp ****  * COMP4:	Input->		PE7  (IO2)
 323:../src/main.cpp ****  * 			Output->	PB1
 324:../src/main.cpp ****  * COMP7:	Input->		PC1	 (IO2)
 325:../src/main.cpp ****  * 			Output->	PC2
 326:../src/main.cpp ****  */
 327:../src/main.cpp **** 
 328:../src/main.cpp **** void comp_init(void)
 329:../src/main.cpp **** {
 982              		.loc 2 329 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 40
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986 0540 80B5     		push	{r7, lr}
 987              	.LCFI29:
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 7, -8
 990              		.cfi_offset 14, -4
 991 0542 8AB0     		sub	sp, sp, #40
 992              	.LCFI30:
 993              		.cfi_def_cfa_offset 48
 994 0544 00AF     		add	r7, sp, #0
 995              	.LCFI31:
 996              		.cfi_def_cfa_register 7
 997              	.LBB8:
 330:../src/main.cpp **** 	//COMP2 Init:
 331:../src/main.cpp **** 
 332:../src/main.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 998              		.loc 2 332 0
 999 0546 4FF00100 		mov	r0, #1
 1000 054a 4FF00101 		mov	r1, #1
 1001 054e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 333:../src/main.cpp **** 
 334:../src/main.cpp **** 	GPIO_InitTypeDef g;
 335:../src/main.cpp **** 
 336:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AN;
 1002              		.loc 2 336 0
 1003 0552 4FF00303 		mov	r3, #3
 1004 0556 87F82430 		strb	r3, [r7, #36]
 337:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1005              		.loc 2 337 0
 1006 055a 4FF00003 		mov	r3, #0
 1007 055e 87F82730 		strb	r3, [r7, #39]
 338:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_7;
 1008              		.loc 2 338 0
 1009 0562 4FF08003 		mov	r3, #128
 1010 0566 3B62     		str	r3, [r7, #32]
 339:../src/main.cpp **** 
 340:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 1011              		.loc 2 340 0
 1012 0568 4FF40030 		mov	r0, #131072
 1013 056c 4FF00101 		mov	r1, #1
 1014 0570 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 341:../src/main.cpp **** 	GPIO_Init(GPIOA, &g);
 1015              		.loc 2 341 0
 1016 0574 07F12003 		add	r3, r7, #32
 1017 0578 4FF09040 		mov	r0, #1207959552
 1018 057c 1946     		mov	r1, r3
 1019 057e FFF7FEFF 		bl	GPIO_Init
 342:../src/main.cpp **** 
 343:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AF;
 1020              		.loc 2 343 0
 1021 0582 4FF00203 		mov	r3, #2
 1022 0586 87F82430 		strb	r3, [r7, #36]
 344:../src/main.cpp **** 	g.GPIO_OType = GPIO_OType_PP;
 1023              		.loc 2 344 0
 1024 058a 4FF00003 		mov	r3, #0
 1025 058e 87F82630 		strb	r3, [r7, #38]
 345:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1026              		.loc 2 345 0
 1027 0592 4FF00003 		mov	r3, #0
 1028 0596 87F82730 		strb	r3, [r7, #39]
 346:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_9;
 1029              		.loc 2 346 0
 1030 059a 4FF40073 		mov	r3, #512
 1031 059e 3B62     		str	r3, [r7, #32]
 347:../src/main.cpp **** 
 348:../src/main.cpp **** 	GPIO_PinAFConfig(GPIOB, GPIO_PinSource9, GPIO_AF_8);
 1032              		.loc 2 348 0
 1033 05a0 4FF48060 		mov	r0, #1024
 1034 05a4 C4F60000 		movt	r0, 18432
 1035 05a8 4FF00901 		mov	r1, #9
 1036 05ac 4FF00802 		mov	r2, #8
 1037 05b0 FFF7FEFF 		bl	GPIO_PinAFConfig
 349:../src/main.cpp **** 	GPIO_Init(GPIOB, &g);
 1038              		.loc 2 349 0
 1039 05b4 07F12003 		add	r3, r7, #32
 1040 05b8 4FF48060 		mov	r0, #1024
 1041 05bc C4F60000 		movt	r0, 18432
 1042 05c0 1946     		mov	r1, r3
 1043 05c2 FFF7FEFF 		bl	GPIO_Init
 350:../src/main.cpp **** 
 351:../src/main.cpp **** 	RCC_PCLK2Config(RCC_HCLK_Div1);
 1044              		.loc 2 351 0
 1045 05c6 4FF00000 		mov	r0, #0
 1046 05ca FFF7FEFF 		bl	RCC_PCLK2Config
 352:../src/main.cpp **** 
 353:../src/main.cpp **** 	COMP_InitTypeDef c;
 354:../src/main.cpp **** 
 355:../src/main.cpp **** 	c.COMP_InvertingInput = COMP_InvertingInput_VREFINT;
 1047              		.loc 2 355 0
 1048 05ce 4FF03003 		mov	r3, #48
 1049 05d2 7B60     		str	r3, [r7, #4]
 356:../src/main.cpp **** 	c.COMP_NonInvertingInput = COMP_NonInvertingInput_IO1;
 1050              		.loc 2 356 0
 1051 05d4 4FF00003 		mov	r3, #0
 1052 05d8 BB60     		str	r3, [r7, #8]
 357:../src/main.cpp **** 	c.COMP_Mode = COMP_Mode_MediumSpeed;
 1053              		.loc 2 357 0
 1054 05da 4FF00403 		mov	r3, #4
 1055 05de FB61     		str	r3, [r7, #28]
 358:../src/main.cpp **** 	c.COMP_Output = COMP_Output_None;
 1056              		.loc 2 358 0
 1057 05e0 4FF00003 		mov	r3, #0
 1058 05e4 FB60     		str	r3, [r7, #12]
 359:../src/main.cpp **** 	c.COMP_OutputPol = COMP_OutputPol_NonInverted;
 1059              		.loc 2 359 0
 1060 05e6 4FF00003 		mov	r3, #0
 1061 05ea 7B61     		str	r3, [r7, #20]
 360:../src/main.cpp **** 	c.COMP_Hysteresis = COMP_Hysteresis_Low;
 1062              		.loc 2 360 0
 1063 05ec 4FF48033 		mov	r3, #65536
 1064 05f0 BB61     		str	r3, [r7, #24]
 361:../src/main.cpp **** 	c.COMP_BlankingSrce = COMP_BlankingSrce_None;
 1065              		.loc 2 361 0
 1066 05f2 4FF00003 		mov	r3, #0
 1067 05f6 3B61     		str	r3, [r7, #16]
 362:../src/main.cpp **** 
 363:../src/main.cpp **** 	COMP_Init(COMP_Selection_COMP2, &c);
 1068              		.loc 2 363 0
 1069 05f8 07F10403 		add	r3, r7, #4
 1070 05fc 4FF00400 		mov	r0, #4
 1071 0600 1946     		mov	r1, r3
 1072 0602 FFF7FEFF 		bl	COMP_Init
 364:../src/main.cpp **** 	COMP_Cmd(COMP_Selection_COMP2, ENABLE);
 1073              		.loc 2 364 0
 1074 0606 4FF00400 		mov	r0, #4
 1075 060a 4FF00101 		mov	r1, #1
 1076 060e FFF7FEFF 		bl	COMP_Cmd
 365:../src/main.cpp **** 
 366:../src/main.cpp **** 	//COMP3 Init:
 367:../src/main.cpp **** 
 368:../src/main.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 1077              		.loc 2 368 0
 1078 0612 4FF00100 		mov	r0, #1
 1079 0616 4FF00101 		mov	r1, #1
 1080 061a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 369:../src/main.cpp **** 
 370:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AN;
 1081              		.loc 2 370 0
 1082 061e 4FF00303 		mov	r3, #3
 1083 0622 87F82430 		strb	r3, [r7, #36]
 371:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1084              		.loc 2 371 0
 1085 0626 4FF00003 		mov	r3, #0
 1086 062a 87F82730 		strb	r3, [r7, #39]
 372:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_14; 	//PB14 = INPUT
 1087              		.loc 2 372 0
 1088 062e 4FF48043 		mov	r3, #16384
 1089 0632 3B62     		str	r3, [r7, #32]
 373:../src/main.cpp **** 
 374:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB | RCC_AHBPeriph_GPIOA, ENABLE);
 1090              		.loc 2 374 0
 1091 0634 4FF4C020 		mov	r0, #393216
 1092 0638 4FF00101 		mov	r1, #1
 1093 063c FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 375:../src/main.cpp **** 	GPIO_Init(GPIOB, &g);
 1094              		.loc 2 375 0
 1095 0640 07F12003 		add	r3, r7, #32
 1096 0644 4FF48060 		mov	r0, #1024
 1097 0648 C4F60000 		movt	r0, 18432
 1098 064c 1946     		mov	r1, r3
 1099 064e FFF7FEFF 		bl	GPIO_Init
 376:../src/main.cpp **** 
 377:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AF;
 1100              		.loc 2 377 0
 1101 0652 4FF00203 		mov	r3, #2
 1102 0656 87F82430 		strb	r3, [r7, #36]
 378:../src/main.cpp **** 	g.GPIO_OType = GPIO_OType_PP;
 1103              		.loc 2 378 0
 1104 065a 4FF00003 		mov	r3, #0
 1105 065e 87F82630 		strb	r3, [r7, #38]
 379:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1106              		.loc 2 379 0
 1107 0662 4FF00003 		mov	r3, #0
 1108 0666 87F82730 		strb	r3, [r7, #39]
 380:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_8; 	//PA8 = OUTPUT
 1109              		.loc 2 380 0
 1110 066a 4FF48073 		mov	r3, #256
 1111 066e 3B62     		str	r3, [r7, #32]
 381:../src/main.cpp **** 
 382:../src/main.cpp **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource8, GPIO_AF_7);
 1112              		.loc 2 382 0
 1113 0670 4FF40060 		mov	r0, #2048
 1114 0674 C4F60000 		movt	r0, 18432
 1115 0678 4FF00801 		mov	r1, #8
 1116 067c 4FF00702 		mov	r2, #7
 1117 0680 FFF7FEFF 		bl	GPIO_PinAFConfig
 383:../src/main.cpp **** 	GPIO_Init(GPIOC, &g);
 1118              		.loc 2 383 0
 1119 0684 07F12003 		add	r3, r7, #32
 1120 0688 4FF40060 		mov	r0, #2048
 1121 068c C4F60000 		movt	r0, 18432
 1122 0690 1946     		mov	r1, r3
 1123 0692 FFF7FEFF 		bl	GPIO_Init
 384:../src/main.cpp **** 
 385:../src/main.cpp **** 	RCC_PCLK2Config(RCC_HCLK_Div1);
 1124              		.loc 2 385 0
 1125 0696 4FF00000 		mov	r0, #0
 1126 069a FFF7FEFF 		bl	RCC_PCLK2Config
 386:../src/main.cpp **** 
 387:../src/main.cpp **** 	c.COMP_InvertingInput = COMP_InvertingInput_VREFINT;
 1127              		.loc 2 387 0
 1128 069e 4FF03003 		mov	r3, #48
 1129 06a2 7B60     		str	r3, [r7, #4]
 388:../src/main.cpp **** 	c.COMP_NonInvertingInput = COMP_NonInvertingInput_IO1;
 1130              		.loc 2 388 0
 1131 06a4 4FF00003 		mov	r3, #0
 1132 06a8 BB60     		str	r3, [r7, #8]
 389:../src/main.cpp **** 	c.COMP_Mode = COMP_Mode_MediumSpeed;
 1133              		.loc 2 389 0
 1134 06aa 4FF00403 		mov	r3, #4
 1135 06ae FB61     		str	r3, [r7, #28]
 390:../src/main.cpp **** 	c.COMP_Output = COMP_Output_None;
 1136              		.loc 2 390 0
 1137 06b0 4FF00003 		mov	r3, #0
 1138 06b4 FB60     		str	r3, [r7, #12]
 391:../src/main.cpp **** 	c.COMP_OutputPol = COMP_OutputPol_NonInverted;
 1139              		.loc 2 391 0
 1140 06b6 4FF00003 		mov	r3, #0
 1141 06ba 7B61     		str	r3, [r7, #20]
 392:../src/main.cpp **** 	c.COMP_Hysteresis = COMP_Hysteresis_Low;
 1142              		.loc 2 392 0
 1143 06bc 4FF48033 		mov	r3, #65536
 1144 06c0 BB61     		str	r3, [r7, #24]
 393:../src/main.cpp **** 	c.COMP_BlankingSrce = COMP_BlankingSrce_None;
 1145              		.loc 2 393 0
 1146 06c2 4FF00003 		mov	r3, #0
 1147 06c6 3B61     		str	r3, [r7, #16]
 394:../src/main.cpp **** 
 395:../src/main.cpp **** 	COMP_Init(COMP_Selection_COMP3, &c);
 1148              		.loc 2 395 0
 1149 06c8 07F10403 		add	r3, r7, #4
 1150 06cc 4FF00800 		mov	r0, #8
 1151 06d0 1946     		mov	r1, r3
 1152 06d2 FFF7FEFF 		bl	COMP_Init
 396:../src/main.cpp **** 	COMP_Cmd(COMP_Selection_COMP3, ENABLE);
 1153              		.loc 2 396 0
 1154 06d6 4FF00800 		mov	r0, #8
 1155 06da 4FF00101 		mov	r1, #1
 1156 06de FFF7FEFF 		bl	COMP_Cmd
 397:../src/main.cpp **** 
 398:../src/main.cpp **** 	//COMP4 Init:
 399:../src/main.cpp **** 
 400:../src/main.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 1157              		.loc 2 400 0
 1158 06e2 4FF00100 		mov	r0, #1
 1159 06e6 4FF00101 		mov	r1, #1
 1160 06ea FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 401:../src/main.cpp **** 
 402:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AN;
 1161              		.loc 2 402 0
 1162 06ee 4FF00303 		mov	r3, #3
 1163 06f2 87F82430 		strb	r3, [r7, #36]
 403:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1164              		.loc 2 403 0
 1165 06f6 4FF00003 		mov	r3, #0
 1166 06fa 87F82730 		strb	r3, [r7, #39]
 404:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_7; 	//PE7 = INPUT
 1167              		.loc 2 404 0
 1168 06fe 4FF08003 		mov	r3, #128
 1169 0702 3B62     		str	r3, [r7, #32]
 405:../src/main.cpp **** 
 406:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOE | RCC_AHBPeriph_GPIOB, ENABLE);
 1170              		.loc 2 406 0
 1171 0704 4FF41010 		mov	r0, #2359296
 1172 0708 4FF00101 		mov	r1, #1
 1173 070c FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 407:../src/main.cpp **** 	GPIO_Init(GPIOE, &g);
 1174              		.loc 2 407 0
 1175 0710 07F12003 		add	r3, r7, #32
 1176 0714 4FF48050 		mov	r0, #4096
 1177 0718 C4F60000 		movt	r0, 18432
 1178 071c 1946     		mov	r1, r3
 1179 071e FFF7FEFF 		bl	GPIO_Init
 408:../src/main.cpp **** 
 409:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AF;
 1180              		.loc 2 409 0
 1181 0722 4FF00203 		mov	r3, #2
 1182 0726 87F82430 		strb	r3, [r7, #36]
 410:../src/main.cpp **** 	g.GPIO_OType = GPIO_OType_PP;
 1183              		.loc 2 410 0
 1184 072a 4FF00003 		mov	r3, #0
 1185 072e 87F82630 		strb	r3, [r7, #38]
 411:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1186              		.loc 2 411 0
 1187 0732 4FF00003 		mov	r3, #0
 1188 0736 87F82730 		strb	r3, [r7, #39]
 412:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_1; 	//PB1 = OUTPUT
 1189              		.loc 2 412 0
 1190 073a 4FF00203 		mov	r3, #2
 1191 073e 3B62     		str	r3, [r7, #32]
 413:../src/main.cpp **** 
 414:../src/main.cpp **** 	GPIO_PinAFConfig(GPIOB, GPIO_PinSource1, GPIO_AF_8);
 1192              		.loc 2 414 0
 1193 0740 4FF48060 		mov	r0, #1024
 1194 0744 C4F60000 		movt	r0, 18432
 1195 0748 4FF00101 		mov	r1, #1
 1196 074c 4FF00802 		mov	r2, #8
 1197 0750 FFF7FEFF 		bl	GPIO_PinAFConfig
 415:../src/main.cpp **** 	GPIO_Init(GPIOB, &g);
 1198              		.loc 2 415 0
 1199 0754 07F12003 		add	r3, r7, #32
 1200 0758 4FF48060 		mov	r0, #1024
 1201 075c C4F60000 		movt	r0, 18432
 1202 0760 1946     		mov	r1, r3
 1203 0762 FFF7FEFF 		bl	GPIO_Init
 416:../src/main.cpp **** 
 417:../src/main.cpp **** 	RCC_PCLK2Config(RCC_HCLK_Div1);
 1204              		.loc 2 417 0
 1205 0766 4FF00000 		mov	r0, #0
 1206 076a FFF7FEFF 		bl	RCC_PCLK2Config
 418:../src/main.cpp **** 
 419:../src/main.cpp **** 	c.COMP_InvertingInput = COMP_InvertingInput_VREFINT;
 1207              		.loc 2 419 0
 1208 076e 4FF03003 		mov	r3, #48
 1209 0772 7B60     		str	r3, [r7, #4]
 420:../src/main.cpp **** 	c.COMP_NonInvertingInput = COMP_NonInvertingInput_IO2;
 1210              		.loc 2 420 0
 1211 0774 4FF08003 		mov	r3, #128
 1212 0778 BB60     		str	r3, [r7, #8]
 421:../src/main.cpp **** 	c.COMP_Mode = COMP_Mode_MediumSpeed;
 1213              		.loc 2 421 0
 1214 077a 4FF00403 		mov	r3, #4
 1215 077e FB61     		str	r3, [r7, #28]
 422:../src/main.cpp **** 	c.COMP_Output = COMP_Output_None;
 1216              		.loc 2 422 0
 1217 0780 4FF00003 		mov	r3, #0
 1218 0784 FB60     		str	r3, [r7, #12]
 423:../src/main.cpp **** 	c.COMP_OutputPol = COMP_OutputPol_NonInverted;
 1219              		.loc 2 423 0
 1220 0786 4FF00003 		mov	r3, #0
 1221 078a 7B61     		str	r3, [r7, #20]
 424:../src/main.cpp **** 	c.COMP_Hysteresis = COMP_Hysteresis_Low;
 1222              		.loc 2 424 0
 1223 078c 4FF48033 		mov	r3, #65536
 1224 0790 BB61     		str	r3, [r7, #24]
 425:../src/main.cpp **** 	c.COMP_BlankingSrce = COMP_BlankingSrce_None;
 1225              		.loc 2 425 0
 1226 0792 4FF00003 		mov	r3, #0
 1227 0796 3B61     		str	r3, [r7, #16]
 426:../src/main.cpp **** 
 427:../src/main.cpp **** 	COMP_Init(COMP_Selection_COMP4, &c);
 1228              		.loc 2 427 0
 1229 0798 07F10403 		add	r3, r7, #4
 1230 079c 4FF00C00 		mov	r0, #12
 1231 07a0 1946     		mov	r1, r3
 1232 07a2 FFF7FEFF 		bl	COMP_Init
 428:../src/main.cpp **** 	COMP_Cmd(COMP_Selection_COMP4, ENABLE);
 1233              		.loc 2 428 0
 1234 07a6 4FF00C00 		mov	r0, #12
 1235 07aa 4FF00101 		mov	r1, #1
 1236 07ae FFF7FEFF 		bl	COMP_Cmd
 429:../src/main.cpp **** 
 430:../src/main.cpp **** 	//COMP7 Init:
 431:../src/main.cpp **** 
 432:../src/main.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 1237              		.loc 2 432 0
 1238 07b2 4FF00100 		mov	r0, #1
 1239 07b6 4FF00101 		mov	r1, #1
 1240 07ba FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 433:../src/main.cpp **** 
 434:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AN;
 1241              		.loc 2 434 0
 1242 07be 4FF00303 		mov	r3, #3
 1243 07c2 87F82430 		strb	r3, [r7, #36]
 435:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1244              		.loc 2 435 0
 1245 07c6 4FF00003 		mov	r3, #0
 1246 07ca 87F82730 		strb	r3, [r7, #39]
 436:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_1; 	//PC1 = INPUT
 1247              		.loc 2 436 0
 1248 07ce 4FF00203 		mov	r3, #2
 1249 07d2 3B62     		str	r3, [r7, #32]
 437:../src/main.cpp **** 
 438:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
 1250              		.loc 2 438 0
 1251 07d4 4FF40020 		mov	r0, #524288
 1252 07d8 4FF00101 		mov	r1, #1
 1253 07dc FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 439:../src/main.cpp **** 	GPIO_Init(GPIOC, &g);
 1254              		.loc 2 439 0
 1255 07e0 07F12003 		add	r3, r7, #32
 1256 07e4 4FF40060 		mov	r0, #2048
 1257 07e8 C4F60000 		movt	r0, 18432
 1258 07ec 1946     		mov	r1, r3
 1259 07ee FFF7FEFF 		bl	GPIO_Init
 440:../src/main.cpp **** 
 441:../src/main.cpp **** 	g.GPIO_Mode = GPIO_Mode_AF;
 1260              		.loc 2 441 0
 1261 07f2 4FF00203 		mov	r3, #2
 1262 07f6 87F82430 		strb	r3, [r7, #36]
 442:../src/main.cpp **** 	g.GPIO_OType = GPIO_OType_PP;
 1263              		.loc 2 442 0
 1264 07fa 4FF00003 		mov	r3, #0
 1265 07fe 87F82630 		strb	r3, [r7, #38]
 443:../src/main.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 1266              		.loc 2 443 0
 1267 0802 4FF00003 		mov	r3, #0
 1268 0806 87F82730 		strb	r3, [r7, #39]
 444:../src/main.cpp **** 	g.GPIO_Pin = GPIO_Pin_2; 	//PC2 = OUTPUT
 1269              		.loc 2 444 0
 1270 080a 4FF00403 		mov	r3, #4
 1271 080e 3B62     		str	r3, [r7, #32]
 445:../src/main.cpp **** 
 446:../src/main.cpp **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource2, GPIO_AF_3);////////!!!!!!!!!!
 1272              		.loc 2 446 0
 1273 0810 4FF40060 		mov	r0, #2048
 1274 0814 C4F60000 		movt	r0, 18432
 1275 0818 4FF00201 		mov	r1, #2
 1276 081c 4FF00302 		mov	r2, #3
 1277 0820 FFF7FEFF 		bl	GPIO_PinAFConfig
 447:../src/main.cpp **** 	GPIO_Init(GPIOC, &g);
 1278              		.loc 2 447 0
 1279 0824 07F12003 		add	r3, r7, #32
 1280 0828 4FF40060 		mov	r0, #2048
 1281 082c C4F60000 		movt	r0, 18432
 1282 0830 1946     		mov	r1, r3
 1283 0832 FFF7FEFF 		bl	GPIO_Init
 448:../src/main.cpp **** 
 449:../src/main.cpp **** 	RCC_PCLK2Config(RCC_HCLK_Div1);
 1284              		.loc 2 449 0
 1285 0836 4FF00000 		mov	r0, #0
 1286 083a FFF7FEFF 		bl	RCC_PCLK2Config
 450:../src/main.cpp **** 
 451:../src/main.cpp **** 	c.COMP_InvertingInput = COMP_InvertingInput_VREFINT;
 1287              		.loc 2 451 0
 1288 083e 4FF03003 		mov	r3, #48
 1289 0842 7B60     		str	r3, [r7, #4]
 452:../src/main.cpp **** 	c.COMP_NonInvertingInput = COMP_NonInvertingInput_IO2;
 1290              		.loc 2 452 0
 1291 0844 4FF08003 		mov	r3, #128
 1292 0848 BB60     		str	r3, [r7, #8]
 453:../src/main.cpp **** 	c.COMP_Mode = COMP_Mode_MediumSpeed;
 1293              		.loc 2 453 0
 1294 084a 4FF00403 		mov	r3, #4
 1295 084e FB61     		str	r3, [r7, #28]
 454:../src/main.cpp **** 	c.COMP_Output = COMP_Output_None;
 1296              		.loc 2 454 0
 1297 0850 4FF00003 		mov	r3, #0
 1298 0854 FB60     		str	r3, [r7, #12]
 455:../src/main.cpp **** 	c.COMP_OutputPol = COMP_OutputPol_NonInverted;
 1299              		.loc 2 455 0
 1300 0856 4FF00003 		mov	r3, #0
 1301 085a 7B61     		str	r3, [r7, #20]
 456:../src/main.cpp **** 	c.COMP_Hysteresis = COMP_Hysteresis_Low;
 1302              		.loc 2 456 0
 1303 085c 4FF48033 		mov	r3, #65536
 1304 0860 BB61     		str	r3, [r7, #24]
 457:../src/main.cpp **** 	c.COMP_BlankingSrce = COMP_BlankingSrce_None;
 1305              		.loc 2 457 0
 1306 0862 4FF00003 		mov	r3, #0
 1307 0866 3B61     		str	r3, [r7, #16]
 458:../src/main.cpp **** 
 459:../src/main.cpp **** 	COMP_Init(COMP_Selection_COMP7, &c);
 1308              		.loc 2 459 0
 1309 0868 07F10403 		add	r3, r7, #4
 1310 086c 4FF01800 		mov	r0, #24
 1311 0870 1946     		mov	r1, r3
 1312 0872 FFF7FEFF 		bl	COMP_Init
 460:../src/main.cpp **** 	COMP_Cmd(COMP_Selection_COMP7, ENABLE);
 1313              		.loc 2 460 0
 1314 0876 4FF01800 		mov	r0, #24
 1315 087a 4FF00101 		mov	r1, #1
 1316 087e FFF7FEFF 		bl	COMP_Cmd
 1317              	.LBE8:
 461:../src/main.cpp **** }
 1318              		.loc 2 461 0
 1319 0882 07F12807 		add	r7, r7, #40
 1320 0886 BD46     		mov	sp, r7
 1321 0888 80BD     		pop	{r7, pc}
 1322              		.cfi_endproc
 1323              	.LFE119:
 1325 088a 00BF     		.align	2
 1326              		.global	_Z14calc_gyro_biasv
 1327              		.thumb
 1328              		.thumb_func
 1330              	_Z14calc_gyro_biasv:
 1331              	.LFB120:
 462:../src/main.cpp **** 
 463:../src/main.cpp **** int16_t calc_gyro_bias(void)
 464:../src/main.cpp **** {
 1332              		.loc 2 464 0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 16
 1335              		@ frame_needed = 1, uses_anonymous_args = 0
 1336 088c 80B5     		push	{r7, lr}
 1337              	.LCFI32:
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 088e 84B0     		sub	sp, sp, #16
 1342              	.LCFI33:
 1343              		.cfi_def_cfa_offset 24
 1344 0890 00AF     		add	r7, sp, #0
 1345              	.LCFI34:
 1346              		.cfi_def_cfa_register 7
 1347              	.LBB9:
 465:../src/main.cpp **** 	int i = 0;
 1348              		.loc 2 465 0
 1349 0892 4FF00003 		mov	r3, #0
 1350 0896 FB60     		str	r3, [r7, #12]
 466:../src/main.cpp **** 	int accum_x = 0;
 1351              		.loc 2 466 0
 1352 0898 4FF00003 		mov	r3, #0
 1353 089c BB60     		str	r3, [r7, #8]
 467:../src/main.cpp **** 
 468:../src/main.cpp **** 	union twosComp {		// Takes care of two's complement conversion
 469:../src/main.cpp **** 		uint16_t un_signed;
 470:../src/main.cpp **** 		int16_t output;
 471:../src/main.cpp **** 	} convert;
 472:../src/main.cpp **** 
 473:../src/main.cpp **** 	uint8_t bytes[2];
 474:../src/main.cpp **** 
 475:../src/main.cpp **** 	for(i = 0; i < 250; ++i)
 1354              		.loc 2 475 0
 1355 089e 4FF00003 		mov	r3, #0
 1356 08a2 FB60     		str	r3, [r7, #12]
 1357 08a4 19E0     		b	.L23
 1358              	.L24:
 476:../src/main.cpp **** 	{
 477:../src/main.cpp **** 		L3GD20_Read(bytes, L3GD20_OUT_X_L_ADDR, 2);
 1359              		.loc 2 477 0 discriminator 2
 1360 08a6 3B46     		mov	r3, r7
 1361 08a8 1846     		mov	r0, r3
 1362 08aa 4FF02801 		mov	r1, #40
 1363 08ae 4FF00202 		mov	r2, #2
 1364 08b2 FFF7FEFF 		bl	L3GD20_Read
 478:../src/main.cpp **** 		convert.un_signed = (bytes[1] << 8) | bytes[0];
 1365              		.loc 2 478 0 discriminator 2
 1366 08b6 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1367 08b8 4FEA0323 		lsl	r3, r3, #8
 1368 08bc 9AB2     		uxth	r2, r3
 1369 08be 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 1370 08c0 1343     		orrs	r3, r3, r2
 1371 08c2 9BB2     		uxth	r3, r3
 1372 08c4 9BB2     		uxth	r3, r3
 1373 08c6 BB80     		strh	r3, [r7, #4]	@ movhi
 479:../src/main.cpp **** 		accum_x += convert.output;
 1374              		.loc 2 479 0 discriminator 2
 1375 08c8 BB88     		ldrh	r3, [r7, #4]
 1376 08ca 1BB2     		sxth	r3, r3
 1377 08cc BA68     		ldr	r2, [r7, #8]
 1378 08ce D318     		adds	r3, r2, r3
 1379 08d0 BB60     		str	r3, [r7, #8]
 475:../src/main.cpp **** 	for(i = 0; i < 250; ++i)
 1380              		.loc 2 475 0 discriminator 2
 1381 08d2 FB68     		ldr	r3, [r7, #12]
 1382 08d4 03F10103 		add	r3, r3, #1
 1383 08d8 FB60     		str	r3, [r7, #12]
 1384              	.L23:
 475:../src/main.cpp **** 	for(i = 0; i < 250; ++i)
 1385              		.loc 2 475 0 is_stmt 0 discriminator 1
 1386 08da FB68     		ldr	r3, [r7, #12]
 1387 08dc F92B     		cmp	r3, #249
 1388 08de CCBF     		ite	gt
 1389 08e0 0023     		movgt	r3, #0
 1390 08e2 0123     		movle	r3, #1
 1391 08e4 DBB2     		uxtb	r3, r3
 1392 08e6 002B     		cmp	r3, #0
 1393 08e8 DDD1     		bne	.L24
 480:../src/main.cpp **** 	}
 481:../src/main.cpp **** 	return (int16_t)((float)accum_x/(float)250);
 1394              		.loc 2 481 0 is_stmt 1
 1395 08ea D7ED027A 		flds	s15, [r7, #8]	@ int
 1396 08ee B8EEE77A 		fsitos	s14, s15
 1397 08f2 DFED077A 		flds	s15, .L26
 1398 08f6 C7EE277A 		fdivs	s15, s14, s15
 1399 08fa FDEEE77A 		ftosizs	s15, s15
 1400 08fe 17EE903A 		fmrs	r3, s15	@ int
 1401 0902 9BB2     		uxth	r3, r3
 1402 0904 1BB2     		sxth	r3, r3
 1403              	.LBE9:
 482:../src/main.cpp **** }
 1404              		.loc 2 482 0
 1405 0906 1846     		mov	r0, r3
 1406 0908 07F11007 		add	r7, r7, #16
 1407 090c BD46     		mov	sp, r7
 1408 090e 80BD     		pop	{r7, pc}
 1409              	.L27:
 1410              		.align	2
 1411              	.L26:
 1412 0910 00007A43 		.word	1132068864
 1413              		.cfi_endproc
 1414              	.LFE120:
 1416              		.align	2
 1417              		.global	_Z13adc1_init_DMAv
 1418              		.thumb
 1419              		.thumb_func
 1421              	_Z13adc1_init_DMAv:
 1422              	.LFB121:
 483:../src/main.cpp **** 
 484:../src/main.cpp **** /*
 485:../src/main.cpp ****  * Initializes the DMA controller to transfer data between the ADC (ADC1) and
 486:../src/main.cpp ****  * a user-supplied location in memory
 487:../src/main.cpp ****  * @Args: None
 488:../src/main.cpp ****  * @Return Val: None
 489:../src/main.cpp ****  */
 490:../src/main.cpp **** 
 491:../src/main.cpp **** void adc1_init_DMA(void)
 492:../src/main.cpp **** {
 1423              		.loc 2 492 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 112
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0914 80B5     		push	{r7, lr}
 1428              	.LCFI35:
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0916 9CB0     		sub	sp, sp, #112
 1433              	.LCFI36:
 1434              		.cfi_def_cfa_offset 120
 1435 0918 00AF     		add	r7, sp, #0
 1436              	.LCFI37:
 1437              		.cfi_def_cfa_register 7
 1438              	.LBB10:
 493:../src/main.cpp **** 	// Init structures required to initialize the peripherals as required:
 494:../src/main.cpp **** 
 495:../src/main.cpp **** 	ADC_InitTypeDef       ADC_InitStructure;
 496:../src/main.cpp **** 	ADC_CommonInitTypeDef ADC_CommonInitStructure;
 497:../src/main.cpp **** 	GPIO_InitTypeDef      GPIO_InitStructure;
 498:../src/main.cpp **** 
 499:../src/main.cpp **** 	/* Configure the ADC clock */
 500:../src/main.cpp **** 	RCC_ADCCLKConfig(RCC_ADC12PLLCLK_Div2);
 1439              		.loc 2 500 0
 1440 091a 4FF48870 		mov	r0, #272
 1441 091e FFF7FEFF 		bl	RCC_ADCCLKConfig
 501:../src/main.cpp **** 	/* Enable ADC1 clock */
 502:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ADC12, ENABLE);
 1442              		.loc 2 502 0
 1443 0922 4FF08050 		mov	r0, #268435456
 1444 0926 4FF00101 		mov	r1, #1
 1445 092a FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 503:../src/main.cpp **** 	/* GPIOC Periph clock enable */
 504:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 1446              		.loc 2 504 0
 1447 092e 4FF40030 		mov	r0, #131072
 1448 0932 4FF00101 		mov	r1, #1
 1449 0936 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 505:../src/main.cpp **** 
 506:../src/main.cpp **** 	// Configure ADC Channel 3 and 4 as analog inputs
 507:../src/main.cpp **** 
 508:../src/main.cpp **** 	GPIO_StructInit(&GPIO_InitStructure);
 1450              		.loc 2 508 0
 1451 093a 07F15003 		add	r3, r7, #80
 1452 093e 1846     		mov	r0, r3
 1453 0940 FFF7FEFF 		bl	GPIO_StructInit
 509:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2 | GPIO_Pin_3;
 1454              		.loc 2 509 0
 1455 0944 4FF00C03 		mov	r3, #12
 1456 0948 3B65     		str	r3, [r7, #80]
 510:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 1457              		.loc 2 510 0
 1458 094a 4FF00303 		mov	r3, #3
 1459 094e 87F85430 		strb	r3, [r7, #84]
 511:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 1460              		.loc 2 511 0
 1461 0952 4FF00003 		mov	r3, #0
 1462 0956 87F85730 		strb	r3, [r7, #87]
 512:../src/main.cpp **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
 1463              		.loc 2 512 0
 1464 095a 07F15003 		add	r3, r7, #80
 1465 095e 4FF09040 		mov	r0, #1207959552
 1466 0962 1946     		mov	r1, r3
 1467 0964 FFF7FEFF 		bl	GPIO_Init
 513:../src/main.cpp **** 
 514:../src/main.cpp **** 	ADC_StructInit(&ADC_InitStructure);
 1468              		.loc 2 514 0
 1469 0968 3B46     		mov	r3, r7
 1470 096a 1846     		mov	r0, r3
 1471 096c FFF7FEFF 		bl	ADC_StructInit
 515:../src/main.cpp **** 
 516:../src/main.cpp **** 	/* Calibration procedure */
 517:../src/main.cpp **** 	ADC_VoltageRegulatorCmd(ADC1, ENABLE);
 1472              		.loc 2 517 0
 1473 0970 4FF0A040 		mov	r0, #1342177280
 1474 0974 4FF00101 		mov	r1, #1
 1475 0978 FFF7FEFF 		bl	ADC_VoltageRegulatorCmd
 518:../src/main.cpp **** 
 519:../src/main.cpp **** 	/* Insert delay equal to about 900 µs */
 520:../src/main.cpp **** 	int foo;
 521:../src/main.cpp **** 	for(foo = 0; foo < 64000; ++foo)
 1476              		.loc 2 521 0
 1477 097c 4FF00003 		mov	r3, #0
 1478 0980 FB66     		str	r3, [r7, #108]
 1479 0982 07E0     		b	.L29
 1480              	.L30:
 522:../src/main.cpp **** 	{
 523:../src/main.cpp **** 	  ++foo;
 1481              		.loc 2 523 0 discriminator 2
 1482 0984 FB6E     		ldr	r3, [r7, #108]
 1483 0986 03F10103 		add	r3, r3, #1
 1484 098a FB66     		str	r3, [r7, #108]
 521:../src/main.cpp **** 	for(foo = 0; foo < 64000; ++foo)
 1485              		.loc 2 521 0 discriminator 2
 1486 098c FB6E     		ldr	r3, [r7, #108]
 1487 098e 03F10103 		add	r3, r3, #1
 1488 0992 FB66     		str	r3, [r7, #108]
 1489              	.L29:
 521:../src/main.cpp **** 	for(foo = 0; foo < 64000; ++foo)
 1490              		.loc 2 521 0 is_stmt 0 discriminator 1
 1491 0994 FA6E     		ldr	r2, [r7, #108]
 1492 0996 4FF6FF13 		movw	r3, #63999
 1493 099a 9A42     		cmp	r2, r3
 1494 099c CCBF     		ite	gt
 1495 099e 0023     		movgt	r3, #0
 1496 09a0 0123     		movle	r3, #1
 1497 09a2 DBB2     		uxtb	r3, r3
 1498 09a4 002B     		cmp	r3, #0
 1499 09a6 EDD1     		bne	.L30
 524:../src/main.cpp **** 	}
 525:../src/main.cpp **** 
 526:../src/main.cpp **** 	ADC_SelectCalibrationMode(ADC1, ADC_CalibrationMode_Single);
 1500              		.loc 2 526 0 is_stmt 1
 1501 09a8 4FF0A040 		mov	r0, #1342177280
 1502 09ac 4FF00001 		mov	r1, #0
 1503 09b0 FFF7FEFF 		bl	ADC_SelectCalibrationMode
 527:../src/main.cpp **** 	ADC_StartCalibration(ADC1);
 1504              		.loc 2 527 0
 1505 09b4 4FF0A040 		mov	r0, #1342177280
 1506 09b8 FFF7FEFF 		bl	ADC_StartCalibration
 528:../src/main.cpp **** 
 529:../src/main.cpp **** 	while(ADC_GetCalibrationStatus(ADC1) != RESET );
 1507              		.loc 2 529 0
 1508 09bc 00BF     		nop
 1509              	.L31:
 1510              		.loc 2 529 0 is_stmt 0 discriminator 1
 1511 09be 4FF0A040 		mov	r0, #1342177280
 1512 09c2 FFF7FEFF 		bl	ADC_GetCalibrationStatus
 1513 09c6 0346     		mov	r3, r0
 1514 09c8 002B     		cmp	r3, #0
 1515 09ca 0CBF     		ite	eq
 1516 09cc 0023     		moveq	r3, #0
 1517 09ce 0123     		movne	r3, #1
 1518 09d0 DBB2     		uxtb	r3, r3
 1519 09d2 002B     		cmp	r3, #0
 1520 09d4 F3D1     		bne	.L31
 530:../src/main.cpp **** 
 531:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 1521              		.loc 2 531 0 is_stmt 1
 1522 09d6 4FF00003 		mov	r3, #0
 1523 09da BB65     		str	r3, [r7, #88]
 532:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Clock = ADC_Clock_AsynClkMode; //ADC_Clock_SynClkModeDiv2
 1524              		.loc 2 532 0
 1525 09dc 4FF00003 		mov	r3, #0
 1526 09e0 FB65     		str	r3, [r7, #92]
 533:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_1;
 1527              		.loc 2 533 0
 1528 09e2 4FF40043 		mov	r3, #32768
 1529 09e6 3B66     		str	r3, [r7, #96]
 534:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAMode = ADC_DMAMode_Circular;
 1530              		.loc 2 534 0
 1531 09e8 4FF00203 		mov	r3, #2
 1532 09ec 7B66     		str	r3, [r7, #100]
 535:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0xF;//0xF;
 1533              		.loc 2 535 0
 1534 09ee 4FF00F03 		mov	r3, #15
 1535 09f2 87F86830 		strb	r3, [r7, #104]
 536:../src/main.cpp **** 	ADC_CommonInit(ADC1, &ADC_CommonInitStructure);
 1536              		.loc 2 536 0
 1537 09f6 07F15803 		add	r3, r7, #88
 1538 09fa 4FF0A040 		mov	r0, #1342177280
 1539 09fe 1946     		mov	r1, r3
 1540 0a00 FFF7FEFF 		bl	ADC_CommonInit
 537:../src/main.cpp **** 
 538:../src/main.cpp **** 	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
 1541              		.loc 2 538 0
 1542 0a04 4FF40053 		mov	r3, #8192
 1543 0a08 3B60     		str	r3, [r7, #0]
 539:../src/main.cpp **** 	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 1544              		.loc 2 539 0
 1545 0a0a 4FF00003 		mov	r3, #0
 1546 0a0e 7B60     		str	r3, [r7, #4]
 540:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
 1547              		.loc 2 540 0
 1548 0a10 4FF00003 		mov	r3, #0
 1549 0a14 BB60     		str	r3, [r7, #8]
 541:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
 1550              		.loc 2 541 0
 1551 0a16 4FF00003 		mov	r3, #0
 1552 0a1a FB60     		str	r3, [r7, #12]
 542:../src/main.cpp **** 	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 1553              		.loc 2 542 0
 1554 0a1c 4FF00003 		mov	r3, #0
 1555 0a20 3B61     		str	r3, [r7, #16]
 543:../src/main.cpp **** 	ADC_InitStructure.ADC_OverrunMode = ADC_OverrunMode_Disable;
 1556              		.loc 2 543 0
 1557 0a22 4FF00003 		mov	r3, #0
 1558 0a26 7B61     		str	r3, [r7, #20]
 544:../src/main.cpp **** 	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
 1559              		.loc 2 544 0
 1560 0a28 4FF00003 		mov	r3, #0
 1561 0a2c BB61     		str	r3, [r7, #24]
 545:../src/main.cpp **** 	ADC_InitStructure.ADC_NbrOfRegChannel = 2;
 1562              		.loc 2 545 0
 1563 0a2e 4FF00203 		mov	r3, #2
 1564 0a32 3B77     		strb	r3, [r7, #28]
 546:../src/main.cpp **** 	ADC_Init(ADC1, &ADC_InitStructure);
 1565              		.loc 2 546 0
 1566 0a34 3B46     		mov	r3, r7
 1567 0a36 4FF0A040 		mov	r0, #1342177280
 1568 0a3a 1946     		mov	r1, r3
 1569 0a3c FFF7FEFF 		bl	ADC_Init
 547:../src/main.cpp **** 
 548:../src/main.cpp **** 	/* ADC1 regular channel3 configuration */
 549:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC1, ADC_Channel_3, 1, ADC_SampleTime_601Cycles5);//ADC_SampleTime_61Cyc
 1570              		.loc 2 549 0
 1571 0a40 4FF0A040 		mov	r0, #1342177280
 1572 0a44 4FF00301 		mov	r1, #3
 1573 0a48 4FF00102 		mov	r2, #1
 1574 0a4c 4FF00703 		mov	r3, #7
 1575 0a50 FFF7FEFF 		bl	ADC_RegularChannelConfig
 550:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC1, ADC_Channel_4, 2, ADC_SampleTime_601Cycles5);//ADC_SampleTime_61Cyc
 1576              		.loc 2 550 0
 1577 0a54 4FF0A040 		mov	r0, #1342177280
 1578 0a58 4FF00401 		mov	r1, #4
 1579 0a5c 4FF00202 		mov	r2, #2
 1580 0a60 4FF00703 		mov	r3, #7
 1581 0a64 FFF7FEFF 		bl	ADC_RegularChannelConfig
 551:../src/main.cpp **** 
 552:../src/main.cpp **** 	/* Enable ADC1 */
 553:../src/main.cpp **** 	ADC_Cmd(ADC1, ENABLE);
 1582              		.loc 2 553 0
 1583 0a68 4FF0A040 		mov	r0, #1342177280
 1584 0a6c 4FF00101 		mov	r1, #1
 1585 0a70 FFF7FEFF 		bl	ADC_Cmd
 554:../src/main.cpp **** 
 555:../src/main.cpp **** 	/* wait for ADRDY */
 556:../src/main.cpp **** 	while(!ADC_GetFlagStatus(ADC1, ADC_FLAG_RDY));
 1586              		.loc 2 556 0
 1587 0a74 00BF     		nop
 1588              	.L32:
 1589              		.loc 2 556 0 is_stmt 0 discriminator 1
 1590 0a76 4FF0A040 		mov	r0, #1342177280
 1591 0a7a 4FF00101 		mov	r1, #1
 1592 0a7e FFF7FEFF 		bl	ADC_GetFlagStatus
 1593 0a82 0346     		mov	r3, r0
 1594 0a84 002B     		cmp	r3, #0
 1595 0a86 14BF     		ite	ne
 1596 0a88 0023     		movne	r3, #0
 1597 0a8a 0123     		moveq	r3, #1
 1598 0a8c DBB2     		uxtb	r3, r3
 1599 0a8e 002B     		cmp	r3, #0
 1600 0a90 F1D1     		bne	.L32
 557:../src/main.cpp **** 
 558:../src/main.cpp **** 	/* Start ADC1 Software Conversion */
 559:../src/main.cpp **** 	ADC_StartConversion(ADC1);
 1601              		.loc 2 559 0 is_stmt 1
 1602 0a92 4FF0A040 		mov	r0, #1342177280
 1603 0a96 FFF7FEFF 		bl	ADC_StartConversion
 560:../src/main.cpp **** 
 561:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
 1604              		.loc 2 561 0
 1605 0a9a 4FF00100 		mov	r0, #1
 1606 0a9e 4FF00101 		mov	r1, #1
 1607 0aa2 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 562:../src/main.cpp **** 
 563:../src/main.cpp **** 	DMA_InitTypeDef			DMA_InitStructure;
 564:../src/main.cpp **** 	DMA_StructInit(&DMA_InitStructure);
 1608              		.loc 2 564 0
 1609 0aa6 07F12003 		add	r3, r7, #32
 1610 0aaa 1846     		mov	r0, r3
 1611 0aac FFF7FEFF 		bl	DMA_StructInit
 565:../src/main.cpp **** 
 566:../src/main.cpp **** 	DMA_DeInit(DMA1_Channel1); 											//Set DMA registers to default values
 1612              		.loc 2 566 0
 1613 0ab0 4FF00800 		mov	r0, #8
 1614 0ab4 C4F20200 		movt	r0, 16386
 1615 0ab8 FFF7FEFF 		bl	DMA_DeInit
 567:../src/main.cpp **** 	DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)&(ADC1->DR);
 1616              		.loc 2 567 0
 1617 0abc 4FF04003 		mov	r3, #64
 1618 0ac0 C5F20003 		movt	r3, 20480
 1619 0ac4 3B62     		str	r3, [r7, #32]
 568:../src/main.cpp **** 	DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t) &adcData; 		//Variable to which ADC values will 
 1620              		.loc 2 568 0
 1621 0ac6 40F20003 		movw	r3, #:lower16:adcData
 1622 0aca C0F20003 		movt	r3, #:upper16:adcData
 1623 0ace 7B62     		str	r3, [r7, #36]
 569:../src/main.cpp **** 	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
 1624              		.loc 2 569 0
 1625 0ad0 4FF00003 		mov	r3, #0
 1626 0ad4 BB62     		str	r3, [r7, #40]
 570:../src/main.cpp **** 	DMA_InitStructure.DMA_BufferSize = 2;
 1627              		.loc 2 570 0
 1628 0ad6 4FF00203 		mov	r3, #2
 1629 0ada BB85     		strh	r3, [r7, #44]	@ movhi
 571:../src/main.cpp **** 	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 1630              		.loc 2 571 0
 1631 0adc 4FF00003 		mov	r3, #0
 1632 0ae0 3B63     		str	r3, [r7, #48]
 572:../src/main.cpp **** 	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
 1633              		.loc 2 572 0
 1634 0ae2 4FF08003 		mov	r3, #128
 1635 0ae6 7B63     		str	r3, [r7, #52]
 573:../src/main.cpp **** 	DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
 1636              		.loc 2 573 0
 1637 0ae8 4FF40073 		mov	r3, #512
 1638 0aec BB63     		str	r3, [r7, #56]
 574:../src/main.cpp **** 	DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
 1639              		.loc 2 574 0
 1640 0aee 4FF40063 		mov	r3, #2048
 1641 0af2 FB63     		str	r3, [r7, #60]
 575:../src/main.cpp **** 	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
 1642              		.loc 2 575 0
 1643 0af4 4FF02003 		mov	r3, #32
 1644 0af8 3B64     		str	r3, [r7, #64]
 576:../src/main.cpp **** 	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 1645              		.loc 2 576 0
 1646 0afa 4FF40053 		mov	r3, #8192
 1647 0afe 7B64     		str	r3, [r7, #68]
 577:../src/main.cpp **** 	DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
 1648              		.loc 2 577 0
 1649 0b00 4FF00003 		mov	r3, #0
 1650 0b04 BB64     		str	r3, [r7, #72]
 578:../src/main.cpp **** 
 579:../src/main.cpp **** 	DMA_Init(DMA1_Channel1, &DMA_InitStructure);
 1651              		.loc 2 579 0
 1652 0b06 07F12003 		add	r3, r7, #32
 1653 0b0a 4FF00800 		mov	r0, #8
 1654 0b0e C4F20200 		movt	r0, 16386
 1655 0b12 1946     		mov	r1, r3
 1656 0b14 FFF7FEFF 		bl	DMA_Init
 580:../src/main.cpp **** 
 581:../src/main.cpp **** 	NVIC_InitTypeDef nv;
 582:../src/main.cpp **** 
 583:../src/main.cpp **** 	nv.NVIC_IRQChannel = DMA1_Channel1_IRQn;
 1657              		.loc 2 583 0
 1658 0b18 4FF00B03 		mov	r3, #11
 1659 0b1c 87F84C30 		strb	r3, [r7, #76]
 584:../src/main.cpp **** 	nv.NVIC_IRQChannelPreemptionPriority = 2;
 1660              		.loc 2 584 0
 1661 0b20 4FF00203 		mov	r3, #2
 1662 0b24 87F84D30 		strb	r3, [r7, #77]
 585:../src/main.cpp **** 	nv.NVIC_IRQChannelSubPriority = 0;
 1663              		.loc 2 585 0
 1664 0b28 4FF00003 		mov	r3, #0
 1665 0b2c 87F84E30 		strb	r3, [r7, #78]
 586:../src/main.cpp **** 	nv.NVIC_IRQChannelCmd = ENABLE;
 1666              		.loc 2 586 0
 1667 0b30 4FF00103 		mov	r3, #1
 1668 0b34 87F84F30 		strb	r3, [r7, #79]
 587:../src/main.cpp **** 
 588:../src/main.cpp **** 	NVIC_Init(&nv);
 1669              		.loc 2 588 0
 1670 0b38 07F14C03 		add	r3, r7, #76
 1671 0b3c 1846     		mov	r0, r3
 1672 0b3e FFF7FEFF 		bl	NVIC_Init
 589:../src/main.cpp **** 
 590:../src/main.cpp **** 	DMA_ITConfig(DMA1_Channel1, DMA_IT_TC, ENABLE);
 1673              		.loc 2 590 0
 1674 0b42 4FF00800 		mov	r0, #8
 1675 0b46 C4F20200 		movt	r0, 16386
 1676 0b4a 4FF00201 		mov	r1, #2
 1677 0b4e 4FF00102 		mov	r2, #1
 1678 0b52 FFF7FEFF 		bl	DMA_ITConfig
 591:../src/main.cpp **** 	DMA_Cmd(DMA1_Channel1, ENABLE);
 1679              		.loc 2 591 0
 1680 0b56 4FF00800 		mov	r0, #8
 1681 0b5a C4F20200 		movt	r0, 16386
 1682 0b5e 4FF00101 		mov	r1, #1
 1683 0b62 FFF7FEFF 		bl	DMA_Cmd
 592:../src/main.cpp **** 
 593:../src/main.cpp **** 	ADC_DMAConfig(ADC1, ADC_DMAMode_Circular);
 1684              		.loc 2 593 0
 1685 0b66 4FF0A040 		mov	r0, #1342177280
 1686 0b6a 4FF00201 		mov	r1, #2
 1687 0b6e FFF7FEFF 		bl	ADC_DMAConfig
 594:../src/main.cpp **** 	ADC_DMACmd(ADC1, ENABLE);
 1688              		.loc 2 594 0
 1689 0b72 4FF0A040 		mov	r0, #1342177280
 1690 0b76 4FF00101 		mov	r1, #1
 1691 0b7a FFF7FEFF 		bl	ADC_DMACmd
 1692              	.LBE10:
 595:../src/main.cpp **** }
 1693              		.loc 2 595 0
 1694 0b7e 07F17007 		add	r7, r7, #112
 1695 0b82 BD46     		mov	sp, r7
 1696 0b84 80BD     		pop	{r7, pc}
 1697              		.cfi_endproc
 1698              	.LFE121:
 1700 0b86 00BF     		.align	2
 1701              		.global	_Z13adc2_init_DMAv
 1702              		.thumb
 1703              		.thumb_func
 1705              	_Z13adc2_init_DMAv:
 1706              	.LFB122:
 596:../src/main.cpp **** 
 597:../src/main.cpp **** void adc2_init_DMA(void)
 598:../src/main.cpp **** {
 1707              		.loc 2 598 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 112
 1710              		@ frame_needed = 1, uses_anonymous_args = 0
 1711 0b88 80B5     		push	{r7, lr}
 1712              	.LCFI38:
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 7, -8
 1715              		.cfi_offset 14, -4
 1716 0b8a 9CB0     		sub	sp, sp, #112
 1717              	.LCFI39:
 1718              		.cfi_def_cfa_offset 120
 1719 0b8c 00AF     		add	r7, sp, #0
 1720              	.LCFI40:
 1721              		.cfi_def_cfa_register 7
 1722              	.LBB11:
 599:../src/main.cpp **** 	// Init structures required to initialize the peripherals as required:
 600:../src/main.cpp **** 
 601:../src/main.cpp **** 	ADC_InitTypeDef       ADC_InitStructure;
 602:../src/main.cpp **** 	ADC_CommonInitTypeDef ADC_CommonInitStructure;
 603:../src/main.cpp **** 	GPIO_InitTypeDef      GPIO_InitStructure;
 604:../src/main.cpp **** 
 605:../src/main.cpp **** 	/* Configure the ADC clock */
 606:../src/main.cpp **** 	RCC_ADCCLKConfig(RCC_ADC12PLLCLK_Div2); /////////////MOD!!!!!!!!
 1723              		.loc 2 606 0
 1724 0b8e 4FF48870 		mov	r0, #272
 1725 0b92 FFF7FEFF 		bl	RCC_ADCCLKConfig
 607:../src/main.cpp **** 	/* Enable ADC2 clock */
 608:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ADC12, ENABLE);
 1726              		.loc 2 608 0
 1727 0b96 4FF08050 		mov	r0, #268435456
 1728 0b9a 4FF00101 		mov	r1, #1
 1729 0b9e FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 609:../src/main.cpp **** 	/* GPIOA, GPIOB, GPIOC Periph clock enable */
 610:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA | RCC_AHBPeriph_GPIOB | RCC_AHBPeriph_GPIOC, ENABLE);
 1730              		.loc 2 610 0
 1731 0ba2 4FF46020 		mov	r0, #917504
 1732 0ba6 4FF00101 		mov	r1, #1
 1733 0baa FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 611:../src/main.cpp **** 
 612:../src/main.cpp **** 	// Configure PA4, PB2, PC4, PC5 as analog inputs
 613:../src/main.cpp **** 
 614:../src/main.cpp **** 	GPIO_StructInit(&GPIO_InitStructure);
 1734              		.loc 2 614 0
 1735 0bae 07F15003 		add	r3, r7, #80
 1736 0bb2 1846     		mov	r0, r3
 1737 0bb4 FFF7FEFF 		bl	GPIO_StructInit
 615:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
 1738              		.loc 2 615 0
 1739 0bb8 4FF01003 		mov	r3, #16
 1740 0bbc 3B65     		str	r3, [r7, #80]
 616:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 1741              		.loc 2 616 0
 1742 0bbe 4FF00303 		mov	r3, #3
 1743 0bc2 87F85430 		strb	r3, [r7, #84]
 617:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 1744              		.loc 2 617 0
 1745 0bc6 4FF00003 		mov	r3, #0
 1746 0bca 87F85730 		strb	r3, [r7, #87]
 618:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1747              		.loc 2 618 0
 1748 0bce 4FF00303 		mov	r3, #3
 1749 0bd2 87F85530 		strb	r3, [r7, #85]
 619:../src/main.cpp **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
 1750              		.loc 2 619 0
 1751 0bd6 07F15003 		add	r3, r7, #80
 1752 0bda 4FF09040 		mov	r0, #1207959552
 1753 0bde 1946     		mov	r1, r3
 1754 0be0 FFF7FEFF 		bl	GPIO_Init
 620:../src/main.cpp **** 
 621:../src/main.cpp **** 	GPIO_StructInit(&GPIO_InitStructure);
 1755              		.loc 2 621 0
 1756 0be4 07F15003 		add	r3, r7, #80
 1757 0be8 1846     		mov	r0, r3
 1758 0bea FFF7FEFF 		bl	GPIO_StructInit
 622:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
 1759              		.loc 2 622 0
 1760 0bee 4FF00403 		mov	r3, #4
 1761 0bf2 3B65     		str	r3, [r7, #80]
 623:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 1762              		.loc 2 623 0
 1763 0bf4 4FF00303 		mov	r3, #3
 1764 0bf8 87F85430 		strb	r3, [r7, #84]
 624:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 1765              		.loc 2 624 0
 1766 0bfc 4FF00003 		mov	r3, #0
 1767 0c00 87F85730 		strb	r3, [r7, #87]
 625:../src/main.cpp **** 	GPIO_Init(GPIOB, &GPIO_InitStructure);
 1768              		.loc 2 625 0
 1769 0c04 07F15003 		add	r3, r7, #80
 1770 0c08 4FF48060 		mov	r0, #1024
 1771 0c0c C4F60000 		movt	r0, 18432
 1772 0c10 1946     		mov	r1, r3
 1773 0c12 FFF7FEFF 		bl	GPIO_Init
 626:../src/main.cpp **** 
 627:../src/main.cpp **** 	GPIO_StructInit(&GPIO_InitStructure);
 1774              		.loc 2 627 0
 1775 0c16 07F15003 		add	r3, r7, #80
 1776 0c1a 1846     		mov	r0, r3
 1777 0c1c FFF7FEFF 		bl	GPIO_StructInit
 628:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
 1778              		.loc 2 628 0
 1779 0c20 4FF03003 		mov	r3, #48
 1780 0c24 3B65     		str	r3, [r7, #80]
 629:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 1781              		.loc 2 629 0
 1782 0c26 4FF00303 		mov	r3, #3
 1783 0c2a 87F85430 		strb	r3, [r7, #84]
 630:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 1784              		.loc 2 630 0
 1785 0c2e 4FF00003 		mov	r3, #0
 1786 0c32 87F85730 		strb	r3, [r7, #87]
 631:../src/main.cpp **** 	GPIO_Init(GPIOC, &GPIO_InitStructure);
 1787              		.loc 2 631 0
 1788 0c36 07F15003 		add	r3, r7, #80
 1789 0c3a 4FF40060 		mov	r0, #2048
 1790 0c3e C4F60000 		movt	r0, 18432
 1791 0c42 1946     		mov	r1, r3
 1792 0c44 FFF7FEFF 		bl	GPIO_Init
 632:../src/main.cpp **** 
 633:../src/main.cpp **** 	ADC_StructInit(&ADC_InitStructure);
 1793              		.loc 2 633 0
 1794 0c48 3B46     		mov	r3, r7
 1795 0c4a 1846     		mov	r0, r3
 1796 0c4c FFF7FEFF 		bl	ADC_StructInit
 634:../src/main.cpp **** 
 635:../src/main.cpp **** 	/* Calibration procedure */
 636:../src/main.cpp **** 	ADC_VoltageRegulatorCmd(ADC2, ENABLE);
 1797              		.loc 2 636 0
 1798 0c50 4FF48070 		mov	r0, #256
 1799 0c54 C5F20000 		movt	r0, 20480
 1800 0c58 4FF00101 		mov	r1, #1
 1801 0c5c FFF7FEFF 		bl	ADC_VoltageRegulatorCmd
 637:../src/main.cpp **** 
 638:../src/main.cpp **** 	/* Insert delay equal to about 900 µs */
 639:../src/main.cpp **** 	int foo;
 640:../src/main.cpp **** 	for(foo = 0; foo < 64000; ++foo)
 1802              		.loc 2 640 0
 1803 0c60 4FF00003 		mov	r3, #0
 1804 0c64 FB66     		str	r3, [r7, #108]
 1805 0c66 07E0     		b	.L34
 1806              	.L35:
 641:../src/main.cpp **** 	{
 642:../src/main.cpp **** 	  ++foo;
 1807              		.loc 2 642 0 discriminator 2
 1808 0c68 FB6E     		ldr	r3, [r7, #108]
 1809 0c6a 03F10103 		add	r3, r3, #1
 1810 0c6e FB66     		str	r3, [r7, #108]
 640:../src/main.cpp **** 	for(foo = 0; foo < 64000; ++foo)
 1811              		.loc 2 640 0 discriminator 2
 1812 0c70 FB6E     		ldr	r3, [r7, #108]
 1813 0c72 03F10103 		add	r3, r3, #1
 1814 0c76 FB66     		str	r3, [r7, #108]
 1815              	.L34:
 640:../src/main.cpp **** 	for(foo = 0; foo < 64000; ++foo)
 1816              		.loc 2 640 0 is_stmt 0 discriminator 1
 1817 0c78 FA6E     		ldr	r2, [r7, #108]
 1818 0c7a 4FF6FF13 		movw	r3, #63999
 1819 0c7e 9A42     		cmp	r2, r3
 1820 0c80 CCBF     		ite	gt
 1821 0c82 0023     		movgt	r3, #0
 1822 0c84 0123     		movle	r3, #1
 1823 0c86 DBB2     		uxtb	r3, r3
 1824 0c88 002B     		cmp	r3, #0
 1825 0c8a EDD1     		bne	.L35
 643:../src/main.cpp **** 	}
 644:../src/main.cpp **** 
 645:../src/main.cpp **** 	ADC_SelectCalibrationMode(ADC2, ADC_CalibrationMode_Single);
 1826              		.loc 2 645 0 is_stmt 1
 1827 0c8c 4FF48070 		mov	r0, #256
 1828 0c90 C5F20000 		movt	r0, 20480
 1829 0c94 4FF00001 		mov	r1, #0
 1830 0c98 FFF7FEFF 		bl	ADC_SelectCalibrationMode
 646:../src/main.cpp **** 	ADC_StartCalibration(ADC2);
 1831              		.loc 2 646 0
 1832 0c9c 4FF48070 		mov	r0, #256
 1833 0ca0 C5F20000 		movt	r0, 20480
 1834 0ca4 FFF7FEFF 		bl	ADC_StartCalibration
 647:../src/main.cpp **** 
 648:../src/main.cpp **** 	while(ADC_GetCalibrationStatus(ADC2) != RESET );
 1835              		.loc 2 648 0
 1836 0ca8 00BF     		nop
 1837              	.L36:
 1838              		.loc 2 648 0 is_stmt 0 discriminator 1
 1839 0caa 4FF48070 		mov	r0, #256
 1840 0cae C5F20000 		movt	r0, 20480
 1841 0cb2 FFF7FEFF 		bl	ADC_GetCalibrationStatus
 1842 0cb6 0346     		mov	r3, r0
 1843 0cb8 002B     		cmp	r3, #0
 1844 0cba 0CBF     		ite	eq
 1845 0cbc 0023     		moveq	r3, #0
 1846 0cbe 0123     		movne	r3, #1
 1847 0cc0 DBB2     		uxtb	r3, r3
 1848 0cc2 002B     		cmp	r3, #0
 1849 0cc4 F1D1     		bne	.L36
 649:../src/main.cpp **** 
 650:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 1850              		.loc 2 650 0 is_stmt 1
 1851 0cc6 4FF00003 		mov	r3, #0
 1852 0cca BB65     		str	r3, [r7, #88]
 651:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Clock = ADC_Clock_AsynClkMode;
 1853              		.loc 2 651 0
 1854 0ccc 4FF00003 		mov	r3, #0
 1855 0cd0 FB65     		str	r3, [r7, #92]
 652:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_1;
 1856              		.loc 2 652 0
 1857 0cd2 4FF40043 		mov	r3, #32768
 1858 0cd6 3B66     		str	r3, [r7, #96]
 653:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAMode = ADC_DMAMode_Circular;
 1859              		.loc 2 653 0
 1860 0cd8 4FF00203 		mov	r3, #2
 1861 0cdc 7B66     		str	r3, [r7, #100]
 654:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0xF;
 1862              		.loc 2 654 0
 1863 0cde 4FF00F03 		mov	r3, #15
 1864 0ce2 87F86830 		strb	r3, [r7, #104]
 655:../src/main.cpp **** 	ADC_CommonInit(ADC2, &ADC_CommonInitStructure);
 1865              		.loc 2 655 0
 1866 0ce6 07F15803 		add	r3, r7, #88
 1867 0cea 4FF48070 		mov	r0, #256
 1868 0cee C5F20000 		movt	r0, 20480
 1869 0cf2 1946     		mov	r1, r3
 1870 0cf4 FFF7FEFF 		bl	ADC_CommonInit
 656:../src/main.cpp **** 
 657:../src/main.cpp **** 	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
 1871              		.loc 2 657 0
 1872 0cf8 4FF40053 		mov	r3, #8192
 1873 0cfc 3B60     		str	r3, [r7, #0]
 658:../src/main.cpp **** 	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 1874              		.loc 2 658 0
 1875 0cfe 4FF00003 		mov	r3, #0
 1876 0d02 7B60     		str	r3, [r7, #4]
 659:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
 1877              		.loc 2 659 0
 1878 0d04 4FF00003 		mov	r3, #0
 1879 0d08 BB60     		str	r3, [r7, #8]
 660:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
 1880              		.loc 2 660 0
 1881 0d0a 4FF00003 		mov	r3, #0
 1882 0d0e FB60     		str	r3, [r7, #12]
 661:../src/main.cpp **** 	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 1883              		.loc 2 661 0
 1884 0d10 4FF00003 		mov	r3, #0
 1885 0d14 3B61     		str	r3, [r7, #16]
 662:../src/main.cpp **** 	ADC_InitStructure.ADC_OverrunMode = ADC_OverrunMode_Disable;
 1886              		.loc 2 662 0
 1887 0d16 4FF00003 		mov	r3, #0
 1888 0d1a 7B61     		str	r3, [r7, #20]
 663:../src/main.cpp **** 	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
 1889              		.loc 2 663 0
 1890 0d1c 4FF00003 		mov	r3, #0
 1891 0d20 BB61     		str	r3, [r7, #24]
 664:../src/main.cpp **** 	ADC_InitStructure.ADC_NbrOfRegChannel = 4;
 1892              		.loc 2 664 0
 1893 0d22 4FF00403 		mov	r3, #4
 1894 0d26 3B77     		strb	r3, [r7, #28]
 665:../src/main.cpp **** 	ADC_Init(ADC2, &ADC_InitStructure);
 1895              		.loc 2 665 0
 1896 0d28 3B46     		mov	r3, r7
 1897 0d2a 4FF48070 		mov	r0, #256
 1898 0d2e C5F20000 		movt	r0, 20480
 1899 0d32 1946     		mov	r1, r3
 1900 0d34 FFF7FEFF 		bl	ADC_Init
 666:../src/main.cpp **** 
 667:../src/main.cpp **** 	/* ADC2 regular Channel 1,2,3,4 configuration */
 668:../src/main.cpp **** 
 669:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC2, ADC_Channel_1, 1, ADC_SampleTime_601Cycles5);
 1901              		.loc 2 669 0
 1902 0d38 4FF48070 		mov	r0, #256
 1903 0d3c C5F20000 		movt	r0, 20480
 1904 0d40 4FF00101 		mov	r1, #1
 1905 0d44 4FF00102 		mov	r2, #1
 1906 0d48 4FF00703 		mov	r3, #7
 1907 0d4c FFF7FEFF 		bl	ADC_RegularChannelConfig
 670:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC2, ADC_Channel_5, 2, ADC_SampleTime_601Cycles5);
 1908              		.loc 2 670 0
 1909 0d50 4FF48070 		mov	r0, #256
 1910 0d54 C5F20000 		movt	r0, 20480
 1911 0d58 4FF00501 		mov	r1, #5
 1912 0d5c 4FF00202 		mov	r2, #2
 1913 0d60 4FF00703 		mov	r3, #7
 1914 0d64 FFF7FEFF 		bl	ADC_RegularChannelConfig
 671:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC2, ADC_Channel_11, 3, ADC_SampleTime_601Cycles5);
 1915              		.loc 2 671 0
 1916 0d68 4FF48070 		mov	r0, #256
 1917 0d6c C5F20000 		movt	r0, 20480
 1918 0d70 4FF00B01 		mov	r1, #11
 1919 0d74 4FF00302 		mov	r2, #3
 1920 0d78 4FF00703 		mov	r3, #7
 1921 0d7c FFF7FEFF 		bl	ADC_RegularChannelConfig
 672:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC2, ADC_Channel_12, 4, ADC_SampleTime_601Cycles5);
 1922              		.loc 2 672 0
 1923 0d80 4FF48070 		mov	r0, #256
 1924 0d84 C5F20000 		movt	r0, 20480
 1925 0d88 4FF00C01 		mov	r1, #12
 1926 0d8c 4FF00402 		mov	r2, #4
 1927 0d90 4FF00703 		mov	r3, #7
 1928 0d94 FFF7FEFF 		bl	ADC_RegularChannelConfig
 673:../src/main.cpp **** 
 674:../src/main.cpp **** 	/* Enable ADC2 */
 675:../src/main.cpp **** 	ADC_Cmd(ADC2, ENABLE);
 1929              		.loc 2 675 0
 1930 0d98 4FF48070 		mov	r0, #256
 1931 0d9c C5F20000 		movt	r0, 20480
 1932 0da0 4FF00101 		mov	r1, #1
 1933 0da4 FFF7FEFF 		bl	ADC_Cmd
 676:../src/main.cpp **** 
 677:../src/main.cpp **** 	/* wait for ADRDY */
 678:../src/main.cpp **** 	while(!ADC_GetFlagStatus(ADC2, ADC_FLAG_RDY));
 1934              		.loc 2 678 0
 1935 0da8 00BF     		nop
 1936              	.L37:
 1937              		.loc 2 678 0 is_stmt 0 discriminator 1
 1938 0daa 4FF48070 		mov	r0, #256
 1939 0dae C5F20000 		movt	r0, 20480
 1940 0db2 4FF00101 		mov	r1, #1
 1941 0db6 FFF7FEFF 		bl	ADC_GetFlagStatus
 1942 0dba 0346     		mov	r3, r0
 1943 0dbc 002B     		cmp	r3, #0
 1944 0dbe 14BF     		ite	ne
 1945 0dc0 0023     		movne	r3, #0
 1946 0dc2 0123     		moveq	r3, #1
 1947 0dc4 DBB2     		uxtb	r3, r3
 1948 0dc6 002B     		cmp	r3, #0
 1949 0dc8 EFD1     		bne	.L37
 679:../src/main.cpp **** 
 680:../src/main.cpp **** 	/* Start ADC2 Software Conversion */
 681:../src/main.cpp **** 	ADC_StartConversion(ADC2);
 1950              		.loc 2 681 0 is_stmt 1
 1951 0dca 4FF48070 		mov	r0, #256
 1952 0dce C5F20000 		movt	r0, 20480
 1953 0dd2 FFF7FEFF 		bl	ADC_StartConversion
 682:../src/main.cpp **** 
 683:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2, ENABLE);
 1954              		.loc 2 683 0
 1955 0dd6 4FF00200 		mov	r0, #2
 1956 0dda 4FF00101 		mov	r1, #1
 1957 0dde FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 684:../src/main.cpp **** 
 685:../src/main.cpp **** 	DMA_InitTypeDef			DMA_InitStructure;
 686:../src/main.cpp **** 	DMA_StructInit(&DMA_InitStructure);
 1958              		.loc 2 686 0
 1959 0de2 07F12003 		add	r3, r7, #32
 1960 0de6 1846     		mov	r0, r3
 1961 0de8 FFF7FEFF 		bl	DMA_StructInit
 687:../src/main.cpp **** 
 688:../src/main.cpp **** 	DMA_DeInit(DMA2_Channel1); 											//Set DMA registers to default values
 1962              		.loc 2 688 0
 1963 0dec 4FF48160 		mov	r0, #1032
 1964 0df0 C4F20200 		movt	r0, 16386
 1965 0df4 FFF7FEFF 		bl	DMA_DeInit
 689:../src/main.cpp **** 	DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)&(ADC2->DR);
 1966              		.loc 2 689 0
 1967 0df8 4FF4A073 		mov	r3, #320
 1968 0dfc C5F20003 		movt	r3, 20480
 1969 0e00 3B62     		str	r3, [r7, #32]
 690:../src/main.cpp **** 	DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t) &adc2_data; 		//Variable to which ADC values wil
 1970              		.loc 2 690 0
 1971 0e02 40F20003 		movw	r3, #:lower16:adc2_data
 1972 0e06 C0F20003 		movt	r3, #:upper16:adc2_data
 1973 0e0a 7B62     		str	r3, [r7, #36]
 691:../src/main.cpp **** 	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
 1974              		.loc 2 691 0
 1975 0e0c 4FF00003 		mov	r3, #0
 1976 0e10 BB62     		str	r3, [r7, #40]
 692:../src/main.cpp **** 	DMA_InitStructure.DMA_BufferSize = 4;
 1977              		.loc 2 692 0
 1978 0e12 4FF00403 		mov	r3, #4
 1979 0e16 BB85     		strh	r3, [r7, #44]	@ movhi
 693:../src/main.cpp **** 	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 1980              		.loc 2 693 0
 1981 0e18 4FF00003 		mov	r3, #0
 1982 0e1c 3B63     		str	r3, [r7, #48]
 694:../src/main.cpp **** 	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
 1983              		.loc 2 694 0
 1984 0e1e 4FF08003 		mov	r3, #128
 1985 0e22 7B63     		str	r3, [r7, #52]
 695:../src/main.cpp **** 	DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
 1986              		.loc 2 695 0
 1987 0e24 4FF40073 		mov	r3, #512
 1988 0e28 BB63     		str	r3, [r7, #56]
 696:../src/main.cpp **** 	DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
 1989              		.loc 2 696 0
 1990 0e2a 4FF40063 		mov	r3, #2048
 1991 0e2e FB63     		str	r3, [r7, #60]
 697:../src/main.cpp **** 	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
 1992              		.loc 2 697 0
 1993 0e30 4FF02003 		mov	r3, #32
 1994 0e34 3B64     		str	r3, [r7, #64]
 698:../src/main.cpp **** 	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 1995              		.loc 2 698 0
 1996 0e36 4FF40053 		mov	r3, #8192
 1997 0e3a 7B64     		str	r3, [r7, #68]
 699:../src/main.cpp **** 	DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
 1998              		.loc 2 699 0
 1999 0e3c 4FF00003 		mov	r3, #0
 2000 0e40 BB64     		str	r3, [r7, #72]
 700:../src/main.cpp **** 
 701:../src/main.cpp **** 	DMA_Init(DMA2_Channel1, &DMA_InitStructure);
 2001              		.loc 2 701 0
 2002 0e42 07F12003 		add	r3, r7, #32
 2003 0e46 4FF48160 		mov	r0, #1032
 2004 0e4a C4F20200 		movt	r0, 16386
 2005 0e4e 1946     		mov	r1, r3
 2006 0e50 FFF7FEFF 		bl	DMA_Init
 702:../src/main.cpp **** 
 703:../src/main.cpp **** 	NVIC_InitTypeDef nv;
 704:../src/main.cpp **** 
 705:../src/main.cpp **** 	nv.NVIC_IRQChannel = DMA2_Channel1_IRQn;
 2007              		.loc 2 705 0
 2008 0e54 4FF03803 		mov	r3, #56
 2009 0e58 87F84C30 		strb	r3, [r7, #76]
 706:../src/main.cpp **** 	nv.NVIC_IRQChannelPreemptionPriority = 2;
 2010              		.loc 2 706 0
 2011 0e5c 4FF00203 		mov	r3, #2
 2012 0e60 87F84D30 		strb	r3, [r7, #77]
 707:../src/main.cpp **** 	nv.NVIC_IRQChannelSubPriority = 0;
 2013              		.loc 2 707 0
 2014 0e64 4FF00003 		mov	r3, #0
 2015 0e68 87F84E30 		strb	r3, [r7, #78]
 708:../src/main.cpp **** 	nv.NVIC_IRQChannelCmd = ENABLE;
 2016              		.loc 2 708 0
 2017 0e6c 4FF00103 		mov	r3, #1
 2018 0e70 87F84F30 		strb	r3, [r7, #79]
 709:../src/main.cpp **** 
 710:../src/main.cpp **** 	NVIC_Init(&nv);
 2019              		.loc 2 710 0
 2020 0e74 07F14C03 		add	r3, r7, #76
 2021 0e78 1846     		mov	r0, r3
 2022 0e7a FFF7FEFF 		bl	NVIC_Init
 711:../src/main.cpp **** 
 712:../src/main.cpp **** 	DMA_ITConfig(DMA2_Channel1, DMA_IT_TC, ENABLE);
 2023              		.loc 2 712 0
 2024 0e7e 4FF48160 		mov	r0, #1032
 2025 0e82 C4F20200 		movt	r0, 16386
 2026 0e86 4FF00201 		mov	r1, #2
 2027 0e8a 4FF00102 		mov	r2, #1
 2028 0e8e FFF7FEFF 		bl	DMA_ITConfig
 713:../src/main.cpp **** 	DMA_Cmd(DMA2_Channel1, ENABLE);
 2029              		.loc 2 713 0
 2030 0e92 4FF48160 		mov	r0, #1032
 2031 0e96 C4F20200 		movt	r0, 16386
 2032 0e9a 4FF00101 		mov	r1, #1
 2033 0e9e FFF7FEFF 		bl	DMA_Cmd
 714:../src/main.cpp **** 
 715:../src/main.cpp **** 	ADC_DMAConfig(ADC2, ADC_DMAMode_Circular);
 2034              		.loc 2 715 0
 2035 0ea2 4FF48070 		mov	r0, #256
 2036 0ea6 C5F20000 		movt	r0, 20480
 2037 0eaa 4FF00201 		mov	r1, #2
 2038 0eae FFF7FEFF 		bl	ADC_DMAConfig
 716:../src/main.cpp **** 	ADC_DMACmd(ADC2, ENABLE);
 2039              		.loc 2 716 0
 2040 0eb2 4FF48070 		mov	r0, #256
 2041 0eb6 C5F20000 		movt	r0, 20480
 2042 0eba 4FF00101 		mov	r1, #1
 2043 0ebe FFF7FEFF 		bl	ADC_DMACmd
 2044              	.LBE11:
 717:../src/main.cpp **** }
 2045              		.loc 2 717 0
 2046 0ec2 07F17007 		add	r7, r7, #112
 2047 0ec6 BD46     		mov	sp, r7
 2048 0ec8 80BD     		pop	{r7, pc}
 2049              		.cfi_endproc
 2050              	.LFE122:
 2052 0eca 00BF     		.align	2
 2053              		.global	_Z21battery_watchdog_initv
 2054              		.thumb
 2055              		.thumb_func
 2057              	_Z21battery_watchdog_initv:
 2058              	.LFB123:
 718:../src/main.cpp **** 
 719:../src/main.cpp **** void battery_watchdog_init(void)
 720:../src/main.cpp **** {
 2059              		.loc 2 720 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 72
 2062              		@ frame_needed = 1, uses_anonymous_args = 0
 2063 0ecc 80B5     		push	{r7, lr}
 2064              	.LCFI41:
 2065              		.cfi_def_cfa_offset 8
 2066              		.cfi_offset 7, -8
 2067              		.cfi_offset 14, -4
 2068 0ece 92B0     		sub	sp, sp, #72
 2069              	.LCFI42:
 2070              		.cfi_def_cfa_offset 80
 2071 0ed0 00AF     		add	r7, sp, #0
 2072              	.LCFI43:
 2073              		.cfi_def_cfa_register 7
 2074              	.LBB12:
 721:../src/main.cpp **** 	ADC_InitTypeDef       ADC_InitStructure;
 722:../src/main.cpp **** 	ADC_CommonInitTypeDef ADC_CommonInitStructure;
 723:../src/main.cpp **** 	GPIO_InitTypeDef      GPIO_InitStructure;
 724:../src/main.cpp **** 	/* Configure the ADC clock */
 725:../src/main.cpp **** 	RCC_ADCCLKConfig(RCC_ADC34PLLCLK_Div128);
 2075              		.loc 2 725 0
 2076 0ed2 4FF45050 		mov	r0, #13312
 2077 0ed6 C1F20000 		movt	r0, 4096
 2078 0eda FFF7FEFF 		bl	RCC_ADCCLKConfig
 726:../src/main.cpp **** 
 727:../src/main.cpp **** 	/* Enable ADC1 clock */
 728:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ADC34, ENABLE);
 2079              		.loc 2 728 0
 2080 0ede 4FF00050 		mov	r0, #536870912
 2081 0ee2 4FF00101 		mov	r1, #1
 2082 0ee6 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 729:../src/main.cpp **** 	/* ADC Channel configuration */
 730:../src/main.cpp **** 	/* GPIOC Periph clock enable */
 731:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB | RCC_AHBPeriph_GPIOE, ENABLE);
 2083              		.loc 2 731 0
 2084 0eea 4FF41010 		mov	r0, #2359296
 2085 0eee 4FF00101 		mov	r1, #1
 2086 0ef2 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 732:../src/main.cpp **** 
 733:../src/main.cpp **** 	/* Configure PB1, PE7 as analog inputs */
 734:../src/main.cpp **** 	GPIO_StructInit(&GPIO_InitStructure);
 2087              		.loc 2 734 0
 2088 0ef6 07F12803 		add	r3, r7, #40
 2089 0efa 1846     		mov	r0, r3
 2090 0efc FFF7FEFF 		bl	GPIO_StructInit
 735:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_13;
 2091              		.loc 2 735 0
 2092 0f00 42F20203 		movw	r3, #8194
 2093 0f04 BB62     		str	r3, [r7, #40]
 736:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 2094              		.loc 2 736 0
 2095 0f06 4FF00303 		mov	r3, #3
 2096 0f0a 87F82C30 		strb	r3, [r7, #44]
 737:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 2097              		.loc 2 737 0
 2098 0f0e 4FF00003 		mov	r3, #0
 2099 0f12 87F82F30 		strb	r3, [r7, #47]
 738:../src/main.cpp **** 	GPIO_Init(GPIOB, &GPIO_InitStructure);
 2100              		.loc 2 738 0
 2101 0f16 07F12803 		add	r3, r7, #40
 2102 0f1a 4FF48060 		mov	r0, #1024
 2103 0f1e C4F60000 		movt	r0, 18432
 2104 0f22 1946     		mov	r1, r3
 2105 0f24 FFF7FEFF 		bl	GPIO_Init
 739:../src/main.cpp **** /*
 740:../src/main.cpp **** 	GPIO_StructInit(&GPIO_InitStructure);
 741:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
 742:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 743:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 744:../src/main.cpp **** 	GPIO_Init(GPIOE, &GPIO_InitStructure);
 745:../src/main.cpp **** */
 746:../src/main.cpp **** 
 747:../src/main.cpp **** 	ADC_StructInit(&ADC_InitStructure);
 2106              		.loc 2 747 0
 2107 0f28 07F10403 		add	r3, r7, #4
 2108 0f2c 1846     		mov	r0, r3
 2109 0f2e FFF7FEFF 		bl	ADC_StructInit
 748:../src/main.cpp **** 
 749:../src/main.cpp **** 	/* Calibration procedure */
 750:../src/main.cpp **** 	ADC_VoltageRegulatorCmd(ADC3, ENABLE);
 2110              		.loc 2 750 0
 2111 0f32 4FF48060 		mov	r0, #1024
 2112 0f36 C5F20000 		movt	r0, 20480
 2113 0f3a 4FF00101 		mov	r1, #1
 2114 0f3e FFF7FEFF 		bl	ADC_VoltageRegulatorCmd
 751:../src/main.cpp **** 
 752:../src/main.cpp **** 	/* Insert delay equal to 222 µs */
 753:../src/main.cpp **** 	int foo;
 754:../src/main.cpp **** 	for(foo = 0; foo < 32000; ++foo)
 2115              		.loc 2 754 0
 2116 0f42 4FF00003 		mov	r3, #0
 2117 0f46 7B64     		str	r3, [r7, #68]
 2118 0f48 07E0     		b	.L39
 2119              	.L40:
 755:../src/main.cpp **** 	{
 756:../src/main.cpp **** 	  ++foo;
 2120              		.loc 2 756 0 discriminator 2
 2121 0f4a 7B6C     		ldr	r3, [r7, #68]
 2122 0f4c 03F10103 		add	r3, r3, #1
 2123 0f50 7B64     		str	r3, [r7, #68]
 754:../src/main.cpp **** 	for(foo = 0; foo < 32000; ++foo)
 2124              		.loc 2 754 0 discriminator 2
 2125 0f52 7B6C     		ldr	r3, [r7, #68]
 2126 0f54 03F10103 		add	r3, r3, #1
 2127 0f58 7B64     		str	r3, [r7, #68]
 2128              	.L39:
 754:../src/main.cpp **** 	for(foo = 0; foo < 32000; ++foo)
 2129              		.loc 2 754 0 is_stmt 0 discriminator 1
 2130 0f5a 7A6C     		ldr	r2, [r7, #68]
 2131 0f5c 47F6FF43 		movw	r3, #31999
 2132 0f60 9A42     		cmp	r2, r3
 2133 0f62 CCBF     		ite	gt
 2134 0f64 0023     		movgt	r3, #0
 2135 0f66 0123     		movle	r3, #1
 2136 0f68 DBB2     		uxtb	r3, r3
 2137 0f6a 002B     		cmp	r3, #0
 2138 0f6c EDD1     		bne	.L40
 757:../src/main.cpp **** 	}
 758:../src/main.cpp **** 
 759:../src/main.cpp **** 	ADC_SelectCalibrationMode(ADC3, ADC_CalibrationMode_Single);
 2139              		.loc 2 759 0 is_stmt 1
 2140 0f6e 4FF48060 		mov	r0, #1024
 2141 0f72 C5F20000 		movt	r0, 20480
 2142 0f76 4FF00001 		mov	r1, #0
 2143 0f7a FFF7FEFF 		bl	ADC_SelectCalibrationMode
 760:../src/main.cpp **** 	ADC_StartCalibration(ADC3);
 2144              		.loc 2 760 0
 2145 0f7e 4FF48060 		mov	r0, #1024
 2146 0f82 C5F20000 		movt	r0, 20480
 2147 0f86 FFF7FEFF 		bl	ADC_StartCalibration
 761:../src/main.cpp **** 
 762:../src/main.cpp **** 	while(ADC_GetCalibrationStatus(ADC3) != RESET );
 2148              		.loc 2 762 0
 2149 0f8a 00BF     		nop
 2150              	.L41:
 2151              		.loc 2 762 0 is_stmt 0 discriminator 1
 2152 0f8c 4FF48060 		mov	r0, #1024
 2153 0f90 C5F20000 		movt	r0, 20480
 2154 0f94 FFF7FEFF 		bl	ADC_GetCalibrationStatus
 2155 0f98 0346     		mov	r3, r0
 2156 0f9a 002B     		cmp	r3, #0
 2157 0f9c 0CBF     		ite	eq
 2158 0f9e 0023     		moveq	r3, #0
 2159 0fa0 0123     		movne	r3, #1
 2160 0fa2 DBB2     		uxtb	r3, r3
 2161 0fa4 002B     		cmp	r3, #0
 2162 0fa6 F1D1     		bne	.L41
 763:../src/main.cpp **** 
 764:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 2163              		.loc 2 764 0 is_stmt 1
 2164 0fa8 4FF00003 		mov	r3, #0
 2165 0fac 3B63     		str	r3, [r7, #48]
 765:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Clock = ADC_Clock_SynClkModeDiv4;//ADC_Clock_AsynClkMode;
 2166              		.loc 2 765 0
 2167 0fae 4FF44033 		mov	r3, #196608
 2168 0fb2 7B63     		str	r3, [r7, #52]
 766:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 2169              		.loc 2 766 0
 2170 0fb4 4FF00003 		mov	r3, #0
 2171 0fb8 BB63     		str	r3, [r7, #56]
 767:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAMode = ADC_DMAMode_OneShot;
 2172              		.loc 2 767 0
 2173 0fba 4FF00003 		mov	r3, #0
 2174 0fbe FB63     		str	r3, [r7, #60]
 768:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0;
 2175              		.loc 2 768 0
 2176 0fc0 4FF00003 		mov	r3, #0
 2177 0fc4 87F84030 		strb	r3, [r7, #64]
 769:../src/main.cpp **** 	ADC_CommonInit(ADC3, &ADC_CommonInitStructure);
 2178              		.loc 2 769 0
 2179 0fc8 07F13003 		add	r3, r7, #48
 2180 0fcc 4FF48060 		mov	r0, #1024
 2181 0fd0 C5F20000 		movt	r0, 20480
 2182 0fd4 1946     		mov	r1, r3
 2183 0fd6 FFF7FEFF 		bl	ADC_CommonInit
 770:../src/main.cpp **** 
 771:../src/main.cpp **** 	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
 2184              		.loc 2 771 0
 2185 0fda 4FF40053 		mov	r3, #8192
 2186 0fde 7B60     		str	r3, [r7, #4]
 772:../src/main.cpp **** 	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 2187              		.loc 2 772 0
 2188 0fe0 4FF00003 		mov	r3, #0
 2189 0fe4 BB60     		str	r3, [r7, #8]
 773:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
 2190              		.loc 2 773 0
 2191 0fe6 4FF00003 		mov	r3, #0
 2192 0fea FB60     		str	r3, [r7, #12]
 774:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
 2193              		.loc 2 774 0
 2194 0fec 4FF00003 		mov	r3, #0
 2195 0ff0 3B61     		str	r3, [r7, #16]
 775:../src/main.cpp **** 	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 2196              		.loc 2 775 0
 2197 0ff2 4FF00003 		mov	r3, #0
 2198 0ff6 7B61     		str	r3, [r7, #20]
 776:../src/main.cpp **** 	ADC_InitStructure.ADC_OverrunMode = ADC_OverrunMode_Disable;
 2199              		.loc 2 776 0
 2200 0ff8 4FF00003 		mov	r3, #0
 2201 0ffc BB61     		str	r3, [r7, #24]
 777:../src/main.cpp **** 	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
 2202              		.loc 2 777 0
 2203 0ffe 4FF00003 		mov	r3, #0
 2204 1002 FB61     		str	r3, [r7, #28]
 778:../src/main.cpp **** 	ADC_InitStructure.ADC_NbrOfRegChannel = 2;
 2205              		.loc 2 778 0
 2206 1004 4FF00203 		mov	r3, #2
 2207 1008 87F82030 		strb	r3, [r7, #32]
 779:../src/main.cpp **** 	ADC_Init(ADC3, &ADC_InitStructure);
 2208              		.loc 2 779 0
 2209 100c 07F10403 		add	r3, r7, #4
 2210 1010 4FF48060 		mov	r0, #1024
 2211 1014 C5F20000 		movt	r0, 20480
 2212 1018 1946     		mov	r1, r3
 2213 101a FFF7FEFF 		bl	ADC_Init
 780:../src/main.cpp **** 
 781:../src/main.cpp **** 	/* ADC3 regular Channel 1, 13 configuration */
 782:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC3, ADC_Channel_1, 1, ADC_SampleTime_601Cycles5);
 2214              		.loc 2 782 0
 2215 101e 4FF48060 		mov	r0, #1024
 2216 1022 C5F20000 		movt	r0, 20480
 2217 1026 4FF00101 		mov	r1, #1
 2218 102a 4FF00102 		mov	r2, #1
 2219 102e 4FF00703 		mov	r3, #7
 2220 1032 FFF7FEFF 		bl	ADC_RegularChannelConfig
 783:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC3, ADC_Channel_5, 2, ADC_SampleTime_601Cycles5);
 2221              		.loc 2 783 0
 2222 1036 4FF48060 		mov	r0, #1024
 2223 103a C5F20000 		movt	r0, 20480
 2224 103e 4FF00501 		mov	r1, #5
 2225 1042 4FF00202 		mov	r2, #2
 2226 1046 4FF00703 		mov	r3, #7
 2227 104a FFF7FEFF 		bl	ADC_RegularChannelConfig
 784:../src/main.cpp **** 
 785:../src/main.cpp **** 	ADC_AnalogWatchdog1SingleChannelConfig(ADC3, ADC_Channel_1);
 2228              		.loc 2 785 0
 2229 104e 4FF48060 		mov	r0, #1024
 2230 1052 C5F20000 		movt	r0, 20480
 2231 1056 4FF00101 		mov	r1, #1
 2232 105a FFF7FEFF 		bl	ADC_AnalogWatchdog1SingleChannelConfig
 786:../src/main.cpp **** 	ADC_AnalogWatchdog2SingleChannelConfig(ADC3, ADC_Channel_5);
 2233              		.loc 2 786 0
 2234 105e 4FF48060 		mov	r0, #1024
 2235 1062 C5F20000 		movt	r0, 20480
 2236 1066 4FF00501 		mov	r1, #5
 2237 106a FFF7FEFF 		bl	ADC_AnalogWatchdog2SingleChannelConfig
 787:../src/main.cpp **** 
 788:../src/main.cpp **** 	/* Configure AWD 1 & 2 Thresholds: */
 789:../src/main.cpp **** 
 790:../src/main.cpp **** 	ADC_AnalogWatchdog1ThresholdsConfig(ADC3, 2048, 10);// 2100, 1996); //50%
 2238              		.loc 2 790 0
 2239 106e 4FF48060 		mov	r0, #1024
 2240 1072 C5F20000 		movt	r0, 20480
 2241 1076 4FF40061 		mov	r1, #2048
 2242 107a 4FF00A02 		mov	r2, #10
 2243 107e FFF7FEFF 		bl	ADC_AnalogWatchdog1ThresholdsConfig
 791:../src/main.cpp **** 	ADC_AnalogWatchdog2ThresholdsConfig(ADC3, 0x80, 0x00);//0xC1, 0xBB); //75%
 2244              		.loc 2 791 0
 2245 1082 4FF48060 		mov	r0, #1024
 2246 1086 C5F20000 		movt	r0, 20480
 2247 108a 4FF08001 		mov	r1, #128
 2248 108e 4FF00002 		mov	r2, #0
 2249 1092 FFF7FEFF 		bl	ADC_AnalogWatchdog2ThresholdsConfig
 792:../src/main.cpp **** 
 793:../src/main.cpp **** 	ADC_AnalogWatchdogCmd(ADC3, ADC_AnalogWatchdog_SingleRegEnable);
 2250              		.loc 2 793 0
 2251 1096 4FF48060 		mov	r0, #1024
 2252 109a C5F20000 		movt	r0, 20480
 2253 109e 4FF44001 		mov	r1, #12582912
 2254 10a2 FFF7FEFF 		bl	ADC_AnalogWatchdogCmd
 794:../src/main.cpp **** //	ADC_AnalogWatchdogCmd(ADC3, ADC_AnalogWatchdog_AllRegEnable);
 795:../src/main.cpp **** 
 796:../src/main.cpp **** 	// Configure ADC3 global interrupt:
 797:../src/main.cpp **** 
 798:../src/main.cpp **** 	NVIC_InitTypeDef nv;
 799:../src/main.cpp **** 
 800:../src/main.cpp **** 	nv.NVIC_IRQChannel = ADC3_IRQn;
 2255              		.loc 2 800 0
 2256 10a6 4FF02F03 		mov	r3, #47
 2257 10aa 87F82430 		strb	r3, [r7, #36]
 801:../src/main.cpp **** 	nv.NVIC_IRQChannelPreemptionPriority = 0;
 2258              		.loc 2 801 0
 2259 10ae 4FF00003 		mov	r3, #0
 2260 10b2 87F82530 		strb	r3, [r7, #37]
 802:../src/main.cpp **** 	nv.NVIC_IRQChannelSubPriority = 0;
 2261              		.loc 2 802 0
 2262 10b6 4FF00003 		mov	r3, #0
 2263 10ba 87F82630 		strb	r3, [r7, #38]
 803:../src/main.cpp **** 	nv.NVIC_IRQChannelCmd = ENABLE;
 2264              		.loc 2 803 0
 2265 10be 4FF00103 		mov	r3, #1
 2266 10c2 87F82730 		strb	r3, [r7, #39]
 804:../src/main.cpp **** 
 805:../src/main.cpp **** 	NVIC_Init(&nv);
 2267              		.loc 2 805 0
 2268 10c6 07F12403 		add	r3, r7, #36
 2269 10ca 1846     		mov	r0, r3
 2270 10cc FFF7FEFF 		bl	NVIC_Init
 806:../src/main.cpp **** 
 807:../src/main.cpp **** 	// Enable ADC3's global interrupt:
 808:../src/main.cpp **** 
 809:../src/main.cpp **** 	ADC_ITConfig(ADC3, ADC_IT_AWD1 | ADC_IT_AWD2, ENABLE);
 2271              		.loc 2 809 0
 2272 10d0 4FF48060 		mov	r0, #1024
 2273 10d4 C5F20000 		movt	r0, 20480
 2274 10d8 4FF4C071 		mov	r1, #384
 2275 10dc 4FF00102 		mov	r2, #1
 2276 10e0 FFF7FEFF 		bl	ADC_ITConfig
 810:../src/main.cpp **** 
 811:../src/main.cpp **** 	/* Enable ADC3 */
 812:../src/main.cpp **** 	ADC_Cmd(ADC3, ENABLE);
 2277              		.loc 2 812 0
 2278 10e4 4FF48060 		mov	r0, #1024
 2279 10e8 C5F20000 		movt	r0, 20480
 2280 10ec 4FF00101 		mov	r1, #1
 2281 10f0 FFF7FEFF 		bl	ADC_Cmd
 813:../src/main.cpp **** 
 814:../src/main.cpp **** 	/* wait for ADRDY */
 815:../src/main.cpp **** 	while(!ADC_GetFlagStatus(ADC3, ADC_FLAG_RDY));
 2282              		.loc 2 815 0
 2283 10f4 00BF     		nop
 2284              	.L42:
 2285              		.loc 2 815 0 is_stmt 0 discriminator 1
 2286 10f6 4FF48060 		mov	r0, #1024
 2287 10fa C5F20000 		movt	r0, 20480
 2288 10fe 4FF00101 		mov	r1, #1
 2289 1102 FFF7FEFF 		bl	ADC_GetFlagStatus
 2290 1106 0346     		mov	r3, r0
 2291 1108 002B     		cmp	r3, #0
 2292 110a 14BF     		ite	ne
 2293 110c 0023     		movne	r3, #0
 2294 110e 0123     		moveq	r3, #1
 2295 1110 DBB2     		uxtb	r3, r3
 2296 1112 002B     		cmp	r3, #0
 2297 1114 EFD1     		bne	.L42
 816:../src/main.cpp **** 
 817:../src/main.cpp **** 	/* Start ADC3 Software Conversion */
 818:../src/main.cpp **** 	ADC_StartConversion(ADC3);
 2298              		.loc 2 818 0 is_stmt 1
 2299 1116 4FF48060 		mov	r0, #1024
 2300 111a C5F20000 		movt	r0, 20480
 2301 111e FFF7FEFF 		bl	ADC_StartConversion
 2302              	.LBE12:
 819:../src/main.cpp **** }
 2303              		.loc 2 819 0
 2304 1122 07F14807 		add	r7, r7, #72
 2305 1126 BD46     		mov	sp, r7
 2306 1128 80BD     		pop	{r7, pc}
 2307              		.cfi_endproc
 2308              	.LFE123:
 2310 112a 00BF     		.align	2
 2311              		.global	_Z9adc1_initv
 2312              		.thumb
 2313              		.thumb_func
 2315              	_Z9adc1_initv:
 2316              	.LFB124:
 820:../src/main.cpp **** 
 821:../src/main.cpp **** /* Initializes ADC1 to read PA2 continuously using ADC1 end of conversion (EOC) interrupt
 822:../src/main.cpp ****  * @Args: Nothing
 823:../src/main.cpp ****  * @Return Val: Nothing
 824:../src/main.cpp ****  */
 825:../src/main.cpp **** 
 826:../src/main.cpp **** void adc1_init(void) //PA2 -> Channel 3 on ADC1
 827:../src/main.cpp **** {
 2317              		.loc 2 827 0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 72
 2320              		@ frame_needed = 1, uses_anonymous_args = 0
 2321 112c 80B5     		push	{r7, lr}
 2322              	.LCFI44:
 2323              		.cfi_def_cfa_offset 8
 2324              		.cfi_offset 7, -8
 2325              		.cfi_offset 14, -4
 2326 112e 92B0     		sub	sp, sp, #72
 2327              	.LCFI45:
 2328              		.cfi_def_cfa_offset 80
 2329 1130 00AF     		add	r7, sp, #0
 2330              	.LCFI46:
 2331              		.cfi_def_cfa_register 7
 2332              	.LBB13:
 828:../src/main.cpp **** 	ADC_InitTypeDef       ADC_InitStructure;
 829:../src/main.cpp **** 	ADC_CommonInitTypeDef ADC_CommonInitStructure;
 830:../src/main.cpp **** 	GPIO_InitTypeDef      GPIO_InitStructure;
 831:../src/main.cpp **** 	/* Configure the ADC clock */
 832:../src/main.cpp **** 	RCC_ADCCLKConfig(RCC_ADC12PLLCLK_Div2);
 2333              		.loc 2 832 0
 2334 1132 4FF48870 		mov	r0, #272
 2335 1136 FFF7FEFF 		bl	RCC_ADCCLKConfig
 833:../src/main.cpp **** 
 834:../src/main.cpp **** 	/* Enable ADC1 clock */
 835:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ADC12, ENABLE);
 2336              		.loc 2 835 0
 2337 113a 4FF08050 		mov	r0, #268435456
 2338 113e 4FF00101 		mov	r1, #1
 2339 1142 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 836:../src/main.cpp **** 	/* ADC Channel configuration */
 837:../src/main.cpp **** 	/* GPIOC Periph clock enable */
 838:../src/main.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 2340              		.loc 2 838 0
 2341 1146 4FF40030 		mov	r0, #131072
 2342 114a 4FF00101 		mov	r1, #1
 2343 114e FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 839:../src/main.cpp **** 
 840:../src/main.cpp **** 	/* Configure ADC Channel7 as analog input */
 841:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
 2344              		.loc 2 841 0
 2345 1152 4FF00403 		mov	r3, #4
 2346 1156 BB62     		str	r3, [r7, #40]
 842:../src/main.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 2347              		.loc 2 842 0
 2348 1158 4FF00303 		mov	r3, #3
 2349 115c 87F82C30 		strb	r3, [r7, #44]
 843:../src/main.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
 2350              		.loc 2 843 0
 2351 1160 4FF00003 		mov	r3, #0
 2352 1164 87F82F30 		strb	r3, [r7, #47]
 844:../src/main.cpp **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
 2353              		.loc 2 844 0
 2354 1168 07F12803 		add	r3, r7, #40
 2355 116c 4FF09040 		mov	r0, #1207959552
 2356 1170 1946     		mov	r1, r3
 2357 1172 FFF7FEFF 		bl	GPIO_Init
 845:../src/main.cpp **** 
 846:../src/main.cpp **** 	ADC_StructInit(&ADC_InitStructure);
 2358              		.loc 2 846 0
 2359 1176 07F10403 		add	r3, r7, #4
 2360 117a 1846     		mov	r0, r3
 2361 117c FFF7FEFF 		bl	ADC_StructInit
 847:../src/main.cpp **** 
 848:../src/main.cpp **** 	/* Calibration procedure */
 849:../src/main.cpp **** 	ADC_VoltageRegulatorCmd(ADC1, ENABLE);
 2362              		.loc 2 849 0
 2363 1180 4FF0A040 		mov	r0, #1342177280
 2364 1184 4FF00101 		mov	r1, #1
 2365 1188 FFF7FEFF 		bl	ADC_VoltageRegulatorCmd
 850:../src/main.cpp **** 
 851:../src/main.cpp **** 	/* Insert delay equal to 10 µs */
 852:../src/main.cpp **** 	int foo;
 853:../src/main.cpp **** 	for(foo = 0; foo < 32000; ++foo)
 2366              		.loc 2 853 0
 2367 118c 4FF00003 		mov	r3, #0
 2368 1190 7B64     		str	r3, [r7, #68]
 2369 1192 07E0     		b	.L44
 2370              	.L45:
 854:../src/main.cpp **** 	{
 855:../src/main.cpp **** 	  ++foo;
 2371              		.loc 2 855 0 discriminator 2
 2372 1194 7B6C     		ldr	r3, [r7, #68]
 2373 1196 03F10103 		add	r3, r3, #1
 2374 119a 7B64     		str	r3, [r7, #68]
 853:../src/main.cpp **** 	for(foo = 0; foo < 32000; ++foo)
 2375              		.loc 2 853 0 discriminator 2
 2376 119c 7B6C     		ldr	r3, [r7, #68]
 2377 119e 03F10103 		add	r3, r3, #1
 2378 11a2 7B64     		str	r3, [r7, #68]
 2379              	.L44:
 853:../src/main.cpp **** 	for(foo = 0; foo < 32000; ++foo)
 2380              		.loc 2 853 0 is_stmt 0 discriminator 1
 2381 11a4 7A6C     		ldr	r2, [r7, #68]
 2382 11a6 47F6FF43 		movw	r3, #31999
 2383 11aa 9A42     		cmp	r2, r3
 2384 11ac CCBF     		ite	gt
 2385 11ae 0023     		movgt	r3, #0
 2386 11b0 0123     		movle	r3, #1
 2387 11b2 DBB2     		uxtb	r3, r3
 2388 11b4 002B     		cmp	r3, #0
 2389 11b6 EDD1     		bne	.L45
 856:../src/main.cpp **** 	}
 857:../src/main.cpp **** 
 858:../src/main.cpp **** 	ADC_SelectCalibrationMode(ADC1, ADC_CalibrationMode_Single);
 2390              		.loc 2 858 0 is_stmt 1
 2391 11b8 4FF0A040 		mov	r0, #1342177280
 2392 11bc 4FF00001 		mov	r1, #0
 2393 11c0 FFF7FEFF 		bl	ADC_SelectCalibrationMode
 859:../src/main.cpp **** 	ADC_StartCalibration(ADC1);
 2394              		.loc 2 859 0
 2395 11c4 4FF0A040 		mov	r0, #1342177280
 2396 11c8 FFF7FEFF 		bl	ADC_StartCalibration
 860:../src/main.cpp **** 
 861:../src/main.cpp **** 	while(ADC_GetCalibrationStatus(ADC1) != RESET );
 2397              		.loc 2 861 0
 2398 11cc 00BF     		nop
 2399              	.L46:
 2400              		.loc 2 861 0 is_stmt 0 discriminator 1
 2401 11ce 4FF0A040 		mov	r0, #1342177280
 2402 11d2 FFF7FEFF 		bl	ADC_GetCalibrationStatus
 2403 11d6 0346     		mov	r3, r0
 2404 11d8 002B     		cmp	r3, #0
 2405 11da 0CBF     		ite	eq
 2406 11dc 0023     		moveq	r3, #0
 2407 11de 0123     		movne	r3, #1
 2408 11e0 DBB2     		uxtb	r3, r3
 2409 11e2 002B     		cmp	r3, #0
 2410 11e4 F3D1     		bne	.L46
 862:../src/main.cpp **** 
 863:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 2411              		.loc 2 863 0 is_stmt 1
 2412 11e6 4FF00003 		mov	r3, #0
 2413 11ea 3B63     		str	r3, [r7, #48]
 864:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_Clock = ADC_Clock_AsynClkMode;
 2414              		.loc 2 864 0
 2415 11ec 4FF00003 		mov	r3, #0
 2416 11f0 7B63     		str	r3, [r7, #52]
 865:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 2417              		.loc 2 865 0
 2418 11f2 4FF00003 		mov	r3, #0
 2419 11f6 BB63     		str	r3, [r7, #56]
 866:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_DMAMode = ADC_DMAMode_OneShot;
 2420              		.loc 2 866 0
 2421 11f8 4FF00003 		mov	r3, #0
 2422 11fc FB63     		str	r3, [r7, #60]
 867:../src/main.cpp **** 	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0;
 2423              		.loc 2 867 0
 2424 11fe 4FF00003 		mov	r3, #0
 2425 1202 87F84030 		strb	r3, [r7, #64]
 868:../src/main.cpp **** 	ADC_CommonInit(ADC1, &ADC_CommonInitStructure);
 2426              		.loc 2 868 0
 2427 1206 07F13003 		add	r3, r7, #48
 2428 120a 4FF0A040 		mov	r0, #1342177280
 2429 120e 1946     		mov	r1, r3
 2430 1210 FFF7FEFF 		bl	ADC_CommonInit
 869:../src/main.cpp **** 
 870:../src/main.cpp **** 	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
 2431              		.loc 2 870 0
 2432 1214 4FF40053 		mov	r3, #8192
 2433 1218 7B60     		str	r3, [r7, #4]
 871:../src/main.cpp **** 	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 2434              		.loc 2 871 0
 2435 121a 4FF00003 		mov	r3, #0
 2436 121e BB60     		str	r3, [r7, #8]
 872:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
 2437              		.loc 2 872 0
 2438 1220 4FF00003 		mov	r3, #0
 2439 1224 FB60     		str	r3, [r7, #12]
 873:../src/main.cpp **** 	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
 2440              		.loc 2 873 0
 2441 1226 4FF00003 		mov	r3, #0
 2442 122a 3B61     		str	r3, [r7, #16]
 874:../src/main.cpp **** 	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 2443              		.loc 2 874 0
 2444 122c 4FF00003 		mov	r3, #0
 2445 1230 7B61     		str	r3, [r7, #20]
 875:../src/main.cpp **** 	ADC_InitStructure.ADC_OverrunMode = ADC_OverrunMode_Disable;
 2446              		.loc 2 875 0
 2447 1232 4FF00003 		mov	r3, #0
 2448 1236 BB61     		str	r3, [r7, #24]
 876:../src/main.cpp **** 	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
 2449              		.loc 2 876 0
 2450 1238 4FF00003 		mov	r3, #0
 2451 123c FB61     		str	r3, [r7, #28]
 877:../src/main.cpp **** 	ADC_InitStructure.ADC_NbrOfRegChannel = 1;
 2452              		.loc 2 877 0
 2453 123e 4FF00103 		mov	r3, #1
 2454 1242 87F82030 		strb	r3, [r7, #32]
 878:../src/main.cpp **** 	ADC_Init(ADC1, &ADC_InitStructure);
 2455              		.loc 2 878 0
 2456 1246 07F10403 		add	r3, r7, #4
 2457 124a 4FF0A040 		mov	r0, #1342177280
 2458 124e 1946     		mov	r1, r3
 2459 1250 FFF7FEFF 		bl	ADC_Init
 879:../src/main.cpp **** 
 880:../src/main.cpp **** 	/* ADC1 regular channel3 configuration */
 881:../src/main.cpp **** 	ADC_RegularChannelConfig(ADC1, ADC_Channel_3, 1, ADC_SampleTime_601Cycles5);//ADC_SampleTime_61Cyc
 2460              		.loc 2 881 0
 2461 1254 4FF0A040 		mov	r0, #1342177280
 2462 1258 4FF00301 		mov	r1, #3
 2463 125c 4FF00102 		mov	r2, #1
 2464 1260 4FF00703 		mov	r3, #7
 2465 1264 FFF7FEFF 		bl	ADC_RegularChannelConfig
 882:../src/main.cpp **** 
 883:../src/main.cpp **** 	// Configure ADC1_2 global interrupt:
 884:../src/main.cpp **** 
 885:../src/main.cpp **** 	NVIC_InitTypeDef nv;
 886:../src/main.cpp **** 
 887:../src/main.cpp **** 	nv.NVIC_IRQChannel = ADC1_2_IRQn;
 2466              		.loc 2 887 0
 2467 1268 4FF01203 		mov	r3, #18
 2468 126c 87F82430 		strb	r3, [r7, #36]
 888:../src/main.cpp **** 	nv.NVIC_IRQChannelPreemptionPriority = 2;
 2469              		.loc 2 888 0
 2470 1270 4FF00203 		mov	r3, #2
 2471 1274 87F82530 		strb	r3, [r7, #37]
 889:../src/main.cpp **** 	nv.NVIC_IRQChannelSubPriority = 0;
 2472              		.loc 2 889 0
 2473 1278 4FF00003 		mov	r3, #0
 2474 127c 87F82630 		strb	r3, [r7, #38]
 890:../src/main.cpp **** 	nv.NVIC_IRQChannelCmd = ENABLE;
 2475              		.loc 2 890 0
 2476 1280 4FF00103 		mov	r3, #1
 2477 1284 87F82730 		strb	r3, [r7, #39]
 891:../src/main.cpp **** 
 892:../src/main.cpp **** 	NVIC_Init(&nv);
 2478              		.loc 2 892 0
 2479 1288 07F12403 		add	r3, r7, #36
 2480 128c 1846     		mov	r0, r3
 2481 128e FFF7FEFF 		bl	NVIC_Init
 893:../src/main.cpp **** 
 894:../src/main.cpp **** 	// Enable ADC1's global interrupt:
 895:../src/main.cpp **** 
 896:../src/main.cpp **** 	ADC_ITConfig(ADC1, ADC_IT_EOC, ENABLE);
 2482              		.loc 2 896 0
 2483 1292 4FF0A040 		mov	r0, #1342177280
 2484 1296 4FF00401 		mov	r1, #4
 2485 129a 4FF00102 		mov	r2, #1
 2486 129e FFF7FEFF 		bl	ADC_ITConfig
 897:../src/main.cpp **** 
 898:../src/main.cpp **** 	/* Enable ADC1 */
 899:../src/main.cpp **** 	ADC_Cmd(ADC1, ENABLE);
 2487              		.loc 2 899 0
 2488 12a2 4FF0A040 		mov	r0, #1342177280
 2489 12a6 4FF00101 		mov	r1, #1
 2490 12aa FFF7FEFF 		bl	ADC_Cmd
 900:../src/main.cpp **** 
 901:../src/main.cpp **** 	/* wait for ADRDY */
 902:../src/main.cpp **** 	while(!ADC_GetFlagStatus(ADC1, ADC_FLAG_RDY));
 2491              		.loc 2 902 0
 2492 12ae 00BF     		nop
 2493              	.L47:
 2494              		.loc 2 902 0 is_stmt 0 discriminator 1
 2495 12b0 4FF0A040 		mov	r0, #1342177280
 2496 12b4 4FF00101 		mov	r1, #1
 2497 12b8 FFF7FEFF 		bl	ADC_GetFlagStatus
 2498 12bc 0346     		mov	r3, r0
 2499 12be 002B     		cmp	r3, #0
 2500 12c0 14BF     		ite	ne
 2501 12c2 0023     		movne	r3, #0
 2502 12c4 0123     		moveq	r3, #1
 2503 12c6 DBB2     		uxtb	r3, r3
 2504 12c8 002B     		cmp	r3, #0
 2505 12ca F1D1     		bne	.L47
 903:../src/main.cpp **** 
 904:../src/main.cpp **** 	/* Start ADC1 Software Conversion */
 905:../src/main.cpp **** 	ADC_StartConversion(ADC1);
 2506              		.loc 2 905 0 is_stmt 1
 2507 12cc 4FF0A040 		mov	r0, #1342177280
 2508 12d0 FFF7FEFF 		bl	ADC_StartConversion
 2509              	.LBE13:
 906:../src/main.cpp **** }
 2510              		.loc 2 906 0
 2511 12d4 07F14807 		add	r7, r7, #72
 2512 12d8 BD46     		mov	sp, r7
 2513 12da 80BD     		pop	{r7, pc}
 2514              		.cfi_endproc
 2515              	.LFE124:
 2517              	.Letext0:
 2518              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 2519              		.file 4 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 2520              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_comp.h"
 2521              		.file 6 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_dma.h"
 2522              		.file 7 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_gpio.h"
 2523              		.file 8 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_tim.h"
 2524              		.file 9 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_misc.h"
 2525              		.file 10 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_adc.h"
 2526              		.file 11 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f3_discovery_l3gd20.h"
 2527              		.file 12 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/Robot/encoder.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cc3LMYSI.s:19     .text:00000000 $t
     /tmp/cc3LMYSI.s:23     .text:00000000 NVIC_SetPriority
     /tmp/cc3LMYSI.s:85     .text:0000005c SysTick_Config
     /tmp/cc3LMYSI.s:149    .bss:00000000 led_iter
     /tmp/cc3LMYSI.s:146    .bss:00000000 $d
     /tmp/cc3LMYSI.s:156    .data:00000000 led_matrix
     /tmp/cc3LMYSI.s:153    .data:00000000 $d
     /tmp/cc3LMYSI.s:169    .bss:00000004 left_enc
     /tmp/cc3LMYSI.s:175    .bss:0000002c right_enc
     /tmp/cc3LMYSI.s:181    .bss:00000054 gyro_angle_x
     /tmp/cc3LMYSI.s:187    .bss:00000058 gyro_bias_x
     /tmp/cc3LMYSI.s:193    .bss:0000005c adcval
     /tmp/cc3LMYSI.s:199    .bss:00000060 adcData
     /tmp/cc3LMYSI.s:205    .bss:00000068 new_data
     /tmp/cc3LMYSI.s:211    .bss:0000006c adc2_data
     /tmp/cc3LMYSI.s:216    .bss:0000007c adc2_new_data
     /tmp/cc3LMYSI.s:221    .bss:0000007d adc3_awd1
     /tmp/cc3LMYSI.s:226    .bss:0000007e adc3_awd2
     /tmp/cc3LMYSI.s:232    .bss:00000080 count
     /tmp/cc3LMYSI.s:238    .bss:00000084 stage
     /tmp/cc3LMYSI.s:244    .bss:00000088 drive_cmd
     /tmp/cc3LMYSI.s:250    .bss:0000008c err
     /tmp/cc3LMYSI.s:256    .bss:00000090 last_err
     /tmp/cc3LMYSI.s:262    .bss:00000094 diff_err
     /tmp/cc3LMYSI.s:268    .bss:00000098 rt
     /tmp/cc3LMYSI.s:274    .bss:0000009c d_front
     /tmp/cc3LMYSI.s:280    .bss:000000a0 integral
     /tmp/cc3LMYSI.s:286    .bss:000000a4 left
     /tmp/cc3LMYSI.s:292    .bss:000000a8 right
     /tmp/cc3LMYSI.s:298    .bss:000000ac state
     /tmp/cc3LMYSI.s:304    .bss:000000b0 match_time_counter
     /tmp/cc3LMYSI.s:310    .bss:000000b4 t_firefight_start
     /tmp/cc3LMYSI.s:316    .bss:000000b8 leds_on
     /tmp/cc3LMYSI.s:324    .text:000000c0 main
     /tmp/cc3LMYSI.s:357    .text:000000d8 _Z24trinity2013_waitForStartv
     /tmp/cc3LMYSI.s:442    .text:00000164 _Z11IR_distancei
     /tmp/cc3LMYSI.s:591    .text:000002c8 $d
     /tmp/cc3LMYSI.s:602    .text:000002e8 $t
     /tmp/cc3LMYSI.s:607    .text:000002e8 _Z19imu_update_ISR_initv
     /tmp/cc3LMYSI.s:1330   .text:0000088c _Z14calc_gyro_biasv
     /tmp/cc3LMYSI.s:723    .rodata:00000000 $d
     /tmp/cc3LMYSI.s:724    .rodata:00000000 .LC0
     /tmp/cc3LMYSI.s:733    .text:000003cc L3GD20_TIMEOUT_UserCallback
     /tmp/cc3LMYSI.s:764    .text:000003e4 _Z15brake_pins_initv
     /tmp/cc3LMYSI.s:836    .text:0000045c _Z13ping_pin_initv
     /tmp/cc3LMYSI.s:921    .text:000004ec _Z20timer2_timebase_initv
     /tmp/cc3LMYSI.s:980    .text:00000540 _Z9comp_initv
     /tmp/cc3LMYSI.s:1412   .text:00000910 $d
     /tmp/cc3LMYSI.s:1416   .text:00000914 $t
     /tmp/cc3LMYSI.s:1421   .text:00000914 _Z13adc1_init_DMAv
     /tmp/cc3LMYSI.s:1705   .text:00000b88 _Z13adc2_init_DMAv
     /tmp/cc3LMYSI.s:2057   .text:00000ecc _Z21battery_watchdog_initv
     /tmp/cc3LMYSI.s:2315   .text:0000112c _Z9adc1_initv
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.934603b1d669cb2b32fd4cb6dd11b673
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.170ad2f92df387b9fa0dc3deabd34ef9
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f3_discovery_l3gd20.h.98.ce6c56e3c59772d76fdcff14d2dcb612
                           .group:00000000 wm4.common_headers.h.9.a77b7af68303fe0609f9dd844a078e2a
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.fa6206289f154965d075fc01e2867808
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.4ec5c5df469deeb27bddb969fc54c06a
                           .group:00000000 wm4.encoder.h.14.d5e5872c27905990847e2dff40a1b2fe
                           .group:00000000 wm4.debug.h.9.26e0be6d34f5aa99e328aa49a432ea37
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.40.3369060ca33af9280edb7e432689c67d
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76

UNDEFINED SYMBOLS
SystemInit
_Z10UART1_initv
RCC_AHBPeriphClockCmd
GPIO_DeInit
GPIO_Init
GPIO_ReadInputDataBit
__aeabi_f2d
__aeabi_d2f
pow
L3GD20_Init
NVIC_Init
RCC_APB2PeriphClockCmd
TIM_TimeBaseInit
TIM_ITConfig
TIM_Cmd
printf
GPIO_StructInit
GPIO_WriteBit
SYSCFG_EXTILineConfig
RCC_APB1PeriphClockCmd
TIM_SetCounter
GPIO_PinAFConfig
RCC_PCLK2Config
COMP_Init
COMP_Cmd
L3GD20_Read
RCC_ADCCLKConfig
ADC_StructInit
ADC_VoltageRegulatorCmd
ADC_SelectCalibrationMode
ADC_StartCalibration
ADC_GetCalibrationStatus
ADC_CommonInit
ADC_Init
ADC_RegularChannelConfig
ADC_Cmd
ADC_GetFlagStatus
ADC_StartConversion
DMA_StructInit
DMA_DeInit
DMA_Init
DMA_ITConfig
DMA_Cmd
ADC_DMAConfig
ADC_DMACmd
ADC_AnalogWatchdog1SingleChannelConfig
ADC_AnalogWatchdog2SingleChannelConfig
ADC_AnalogWatchdog1ThresholdsConfig
ADC_AnalogWatchdog2ThresholdsConfig
ADC_AnalogWatchdogCmd
ADC_ITConfig
